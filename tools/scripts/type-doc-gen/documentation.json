{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "@signalwire/client",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"comment": {
		"summary": [
			{
				"kind": "text",
				"text": "Welcome to the technical documentation for the Unified Client JavaScript SDK(a.k.a Call SDK)."
			}
		]
	},
	"children": [
		{
			"id": 942,
			"name": "Call",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Call namespace contains the classes and functions that you need to\ncreate a unified communication application that includes Audio/Video calling\nwith Chat/Messaging capabilties."
					}
				]
			},
			"children": [
				{
					"id": 943,
					"name": "SignalWire",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Legacy singleton SignalWire function - kept for backward compatibility"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/SignalWire.ts",
							"line": 21,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/SignalWire.ts#L21"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 944,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/SignalWire.ts",
									"line": 24,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/SignalWire.ts#L24"
								}
							],
							"signatures": [
								{
									"id": 945,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Promise resolving to SignalWireClient\n\nNote: Singleton behavior is maintained only when profileId is 'default' (or omitted)\nand no custom storage is provided. Otherwise, a new instance is created each time."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/SignalWire.ts",
											"line": 24,
											"character": 9,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/SignalWire.ts#L24"
										}
									],
									"parameters": [
										{
											"id": 946,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "SignalWire client parameters including optional profileId and storage"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 875,
												"name": "SignalWireClientParams",
												"package": "@signalwire/client"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 802,
												"name": "SignalWireContract",
												"package": "@signalwire/client"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 1002,
					"name": "AddProfilesParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 93,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L93"
						}
					],
					"target": 37
				},
				{
					"id": 949,
					"name": "Address",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 22,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L22"
						}
					],
					"target": 572
				},
				{
					"id": 959,
					"name": "CallCapabilitiesContract",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 20,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L20"
						}
					],
					"target": 602
				},
				{
					"id": 1862,
					"name": "CallSession",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 31,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L31"
						}
					],
					"target": 1332
				},
				{
					"id": 957,
					"name": "CapabilityOnOffStateContract",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 1,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L1"
						}
					],
					"target": 587
				},
				{
					"id": 1866,
					"name": "ClientFactory",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 34,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L34"
						}
					],
					"target": 1665
				},
				{
					"id": 1008,
					"name": "ClientFactoryContract",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 143,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L143"
						}
					],
					"target": 51
				},
				{
					"id": 1013,
					"name": "ClientFactoryError",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 355,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L355"
						}
					],
					"target": 147
				},
				{
					"id": 986,
					"name": "ConversationAPIGetMessagesParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 142,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L142"
						}
					],
					"target": 705
				},
				{
					"id": 985,
					"name": "ConversationAPISendMessageParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 137,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L137"
						}
					],
					"target": 702
				},
				{
					"id": 979,
					"name": "ConversationChatMessage",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 111,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L111"
						}
					],
					"target": 682
				},
				{
					"id": 971,
					"name": "ConversationChatMessagesSubscribeParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 68,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L68"
						}
					],
					"target": 656
				},
				{
					"id": 972,
					"name": "ConversationChatMessagesSubscribeResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 73,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L73"
						}
					],
					"target": 659
				},
				{
					"id": 969,
					"name": "ConversationChatSubscribeCallback",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 60,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L60"
						}
					],
					"target": 1
				},
				{
					"id": 960,
					"name": "ConversationContract",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 7,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L7"
						}
					],
					"target": 612
				},
				{
					"id": 1874,
					"name": "ConversationEvent",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 150,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L150"
						}
					],
					"target": 324
				},
				{
					"id": 1875,
					"name": "ConversationEventParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 151,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L151"
						}
					],
					"target": 323
				},
				{
					"id": 977,
					"name": "ConversationMessage",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 96,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L96"
						}
					],
					"target": 670
				},
				{
					"id": 1873,
					"name": "ConversationMessageEvent",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 149,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L149"
						}
					],
					"target": 318
				},
				{
					"id": 1871,
					"name": "ConversationMessageEventName",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 147,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L147"
						}
					],
					"target": 317
				},
				{
					"id": 1872,
					"name": "ConversationMessageEventParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 148,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L148"
						}
					],
					"target": 1837
				},
				{
					"id": 965,
					"name": "ConversationResponse",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 43,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L43"
						}
					],
					"target": 639
				},
				{
					"id": 968,
					"name": "ConversationSubscribeCallback",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 56,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L56"
						}
					],
					"target": 648
				},
				{
					"id": 970,
					"name": "ConversationSubscribeResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 64,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L64"
						}
					],
					"target": 652
				},
				{
					"id": 1870,
					"name": "createSignalWireClient",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 37,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L37"
						}
					],
					"target": 1834
				},
				{
					"id": 1019,
					"name": "CredentialExpiredError",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 408,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L408"
						}
					],
					"target": 186
				},
				{
					"id": 1018,
					"name": "CredentialRefreshError",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 398,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L398"
						}
					],
					"target": 179
				},
				{
					"id": 1012,
					"name": "DEFAULT_CONFIG",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 347,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L347"
						}
					],
					"target": 143
				},
				{
					"id": 1853,
					"name": "DialParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L19"
						}
					],
					"target": 767
				},
				{
					"id": 1007,
					"name": "DisposeClientParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 136,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L136"
						}
					],
					"target": 49
				},
				{
					"id": 951,
					"name": "GetAddressByIdParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 32,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L32"
						}
					],
					"target": 579
				},
				{
					"id": 952,
					"name": "GetAddressByNameParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 36,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L36"
						}
					],
					"target": 581
				},
				{
					"id": 950,
					"name": "GetAddressesParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 24,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L24"
						}
					],
					"target": 573
				},
				{
					"id": 955,
					"name": "GetAddressesResponse",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 44,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L44"
						}
					],
					"target": 585
				},
				{
					"id": 956,
					"name": "GetAddressesResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 46,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L46"
						}
					],
					"target": 586
				},
				{
					"id": 953,
					"name": "GetAddressParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 40,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L40"
						}
					],
					"target": 583
				},
				{
					"id": 948,
					"name": "GetAddressResponse",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 5,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L5"
						}
					],
					"target": 557
				},
				{
					"id": 954,
					"name": "GetAddressResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 42,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L42"
						}
					],
					"target": 584
				},
				{
					"id": 1867,
					"name": "getClientFactory",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 34,
							"character": 24,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L34"
						}
					],
					"target": 1728
				},
				{
					"id": 1005,
					"name": "GetClientParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 115,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L115"
						}
					],
					"target": 42
				},
				{
					"id": 1004,
					"name": "GetClientParamsOptions",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 107,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L107"
						}
					],
					"target": 41
				},
				{
					"id": 1006,
					"name": "GetClientResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 127,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L127"
						}
					],
					"target": 46
				},
				{
					"id": 980,
					"name": "GetConversationChatMessageParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 116,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L116"
						}
					],
					"target": 686
				},
				{
					"id": 981,
					"name": "GetConversationChatMessageResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 121,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L121"
						}
					],
					"target": 689
				},
				{
					"id": 983,
					"name": "GetConversationMessagesParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 127,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L127"
						}
					],
					"target": 698
				},
				{
					"id": 982,
					"name": "GetConversationMessagesResponse",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 124,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L124"
						}
					],
					"target": 690
				},
				{
					"id": 984,
					"name": "GetConversationMessagesResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 132,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L132"
						}
					],
					"target": 701
				},
				{
					"id": 964,
					"name": "GetConversationsParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 39,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L39"
						}
					],
					"target": 637
				},
				{
					"id": 966,
					"name": "GetConversationsResponse",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 52,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L52"
						}
					],
					"target": 646
				},
				{
					"id": 967,
					"name": "GetConversationsResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 54,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L54"
						}
					],
					"target": 647
				},
				{
					"id": 976,
					"name": "GetMessagesParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 92,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L92"
						}
					],
					"target": 668
				},
				{
					"id": 978,
					"name": "GetMessagesResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 109,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L109"
						}
					],
					"target": 681
				},
				{
					"id": 1858,
					"name": "GetSubscriberInfoResponse",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 26,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L26"
						}
					],
					"target": 902
				},
				{
					"id": 1859,
					"name": "GetSubscriberInfoResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L27"
						}
					],
					"target": 919
				},
				{
					"id": 1851,
					"name": "HandlePushNotificationParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L17"
						}
					],
					"target": 762
				},
				{
					"id": 1852,
					"name": "HandlePushNotificationResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 18,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L18"
						}
					],
					"target": 765
				},
				{
					"id": 996,
					"name": "IncomingCallHandler",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 28,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L28"
						}
					],
					"target": 752
				},
				{
					"id": 997,
					"name": "IncomingCallHandlers",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 32,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L32"
						}
					],
					"target": 756
				},
				{
					"id": 995,
					"name": "IncomingCallNotification",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 21,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L21"
						}
					],
					"target": 741
				},
				{
					"id": 993,
					"name": "IncomingInvite",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 6,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L6"
						}
					],
					"target": 722
				},
				{
					"id": 992,
					"name": "IncomingInviteSource",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 4,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L4"
						}
					],
					"target": 721
				},
				{
					"id": 994,
					"name": "IncomingInviteWithSource",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 17,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L17"
						}
					],
					"target": 731
				},
				{
					"id": 1017,
					"name": "InstanceInUseError",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 388,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L388"
						}
					],
					"target": 173
				},
				{
					"id": 1869,
					"name": "InstanceManager",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 36,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L36"
						}
					],
					"target": 1810
				},
				{
					"id": 1010,
					"name": "InstanceManagerContract",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 284,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L284"
						}
					],
					"target": 107
				},
				{
					"id": 1015,
					"name": "InstanceNotFoundError",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 372,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L372"
						}
					],
					"target": 161
				},
				{
					"id": 1863,
					"name": "isCallSession",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 31,
							"character": 22,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L31"
						}
					],
					"target": 1502
				},
				{
					"id": 973,
					"name": "JoinConversationParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 76,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L76"
						}
					],
					"target": 660
				},
				{
					"id": 974,
					"name": "JoinConversationResponse",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 81,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L81"
						}
					],
					"target": 663
				},
				{
					"id": 975,
					"name": "JoinConversationResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 87,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L87"
						}
					],
					"target": 667
				},
				{
					"id": 1864,
					"name": "LocalStorageAdapter",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 32,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L32"
						}
					],
					"target": 1505
				},
				{
					"id": 1001,
					"name": "ManagedInstance",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 70,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L70"
						}
					],
					"target": 30
				},
				{
					"id": 958,
					"name": "MemberCapabilityContract",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 6,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L6"
						}
					],
					"target": 590
				},
				{
					"id": 1850,
					"name": "OnlineParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L16"
						}
					],
					"target": 760
				},
				{
					"id": 1860,
					"name": "PaginatedResponse",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L28"
						}
					],
					"target": 920
				},
				{
					"id": 1861,
					"name": "PaginatedResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L29"
						}
					],
					"target": 929
				},
				{
					"id": 1000,
					"name": "Profile",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 43,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L43"
						}
					],
					"target": 15
				},
				{
					"id": 1016,
					"name": "ProfileExistsError",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 380,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L380"
						}
					],
					"target": 167
				},
				{
					"id": 1868,
					"name": "ProfileManager",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 35,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L35"
						}
					],
					"target": 1730
				},
				{
					"id": 1009,
					"name": "ProfileManagerContract",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 200,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L200"
						}
					],
					"target": 74
				},
				{
					"id": 1014,
					"name": "ProfileNotFoundError",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 366,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L366"
						}
					],
					"target": 155
				},
				{
					"id": 999,
					"name": "ProfileType",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 26,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L26"
						}
					],
					"target": 12
				},
				{
					"id": 1854,
					"name": "ReattachParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 20,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L20"
						}
					],
					"target": 784
				},
				{
					"id": 988,
					"name": "RegisterDeviceParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 3,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L3"
						}
					],
					"target": 708
				},
				{
					"id": 990,
					"name": "RegisterDeviceResponse",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L12"
						}
					],
					"target": 713
				},
				{
					"id": 991,
					"name": "RegisterDeviceResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 21,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L21"
						}
					],
					"target": 720
				},
				{
					"id": 987,
					"name": "RegisterDeviceType",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 1,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L1"
						}
					],
					"target": 707
				},
				{
					"id": 1003,
					"name": "RemoveProfilesParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 103,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L103"
						}
					],
					"target": 39
				},
				{
					"id": 947,
					"name": "ResourceType",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L3"
						}
					],
					"target": 556
				},
				{
					"id": 961,
					"name": "SendConversationMessageParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 22,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L22"
						}
					],
					"target": 625
				},
				{
					"id": 962,
					"name": "SendConversationMessageResponse",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 31,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L31"
						}
					],
					"target": 631
				},
				{
					"id": 963,
					"name": "SendConversationMessageResult",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 37,
							"character": 12,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L37"
						}
					],
					"target": 636
				},
				{
					"id": 1855,
					"name": "SignalWireClient",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L23"
						}
					],
					"target": 801
				},
				{
					"id": 1857,
					"name": "SignalWireClientParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L25"
						}
					],
					"target": 875
				},
				{
					"id": 1856,
					"name": "SignalWireContract",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 24,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L24"
						}
					],
					"target": 802
				},
				{
					"id": 998,
					"name": "SignalWireCredentials",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 9,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L9"
						}
					],
					"target": 5
				},
				{
					"id": 1011,
					"name": "STORAGE_KEYS",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 335,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L335"
						}
					],
					"target": 126
				},
				{
					"id": 1865,
					"name": "StorageWrapper",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/index.ts",
							"line": 33,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L33"
						}
					],
					"target": 1591
				},
				{
					"id": 989,
					"name": "UnregisterDeviceParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 8,
							"character": 17,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L8"
						}
					],
					"target": 711
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						943
					]
				},
				{
					"title": "References",
					"children": [
						1002,
						949,
						959,
						1862,
						957,
						1866,
						1008,
						1013,
						986,
						985,
						979,
						971,
						972,
						969,
						960,
						1874,
						1875,
						977,
						1873,
						1871,
						1872,
						965,
						968,
						970,
						1870,
						1019,
						1018,
						1012,
						1853,
						1007,
						951,
						952,
						950,
						955,
						956,
						953,
						948,
						954,
						1867,
						1005,
						1004,
						1006,
						980,
						981,
						983,
						982,
						984,
						964,
						966,
						967,
						976,
						978,
						1858,
						1859,
						1851,
						1852,
						996,
						997,
						995,
						993,
						992,
						994,
						1017,
						1869,
						1010,
						1015,
						1863,
						973,
						974,
						975,
						1864,
						1001,
						958,
						1850,
						1860,
						1861,
						1000,
						1016,
						1868,
						1009,
						1014,
						999,
						1854,
						988,
						990,
						991,
						987,
						1003,
						947,
						961,
						962,
						963,
						1855,
						1857,
						1856,
						998,
						1011,
						1865,
						989
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/index.ts#L1"
				}
			]
		},
		{
			"id": 1263,
			"name": "WebRTC",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The WebRTC namespace includes functions that give you access to the input and\noutput media devices available on the user's machine. For example, you can\nuse these functions to request permission and get access to the media stream\nfrom a webcam, from a microphone, or from a screen sharing."
					}
				]
			},
			"children": [
				{
					"id": 1899,
					"name": "checkCameraPermissions",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/permissions.ts",
							"line": 67,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/permissions.ts#L67"
						}
					],
					"signatures": [
						{
							"id": 1900,
							"name": "checkCameraPermissions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronously returns whether we have permissions to access the camera."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.checkCameraPermissions()\n// true\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/permissions.ts",
									"line": 67,
									"character": 38,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/permissions.ts#L67"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1901,
					"name": "checkMicrophonePermissions",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/permissions.ts",
							"line": 78,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/permissions.ts#L78"
						}
					],
					"signatures": [
						{
							"id": 1902,
							"name": "checkMicrophonePermissions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronously returns whether we have permissions to access the microphone."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.checkMicrophonePermissions()\n// true\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/permissions.ts",
									"line": 78,
									"character": 42,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/permissions.ts#L78"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1896,
					"name": "checkPermissions",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/permissions.ts",
							"line": 36,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/permissions.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 1897,
							"name": "checkPermissions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronously returns whether we have permissions to access the specified\nresource. Some common parameter values for "
									},
									{
										"kind": "code",
										"text": "`name`"
									},
									{
										"kind": "text",
										"text": " are "
									},
									{
										"kind": "code",
										"text": "`\"camera\"`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`\"microphone\"`"
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "code",
										"text": "`\"speaker\"`"
									},
									{
										"kind": "text",
										"text": ". In those cases, prefer the dedicated methods\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "checkCameraPermissions",
										"target": 1899
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "checkMicrophonePermissions",
										"target": 1901
									},
									{
										"kind": "text",
										"text": ", and\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "checkSpeakerPermissions",
										"target": 1903
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.checkPermissions(\"camera\")\n// true: we have permission for using the camera\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/permissions.ts",
									"line": 36,
									"character": 32,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/permissions.ts#L36"
								}
							],
							"parameters": [
								{
									"id": 1898,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "name of the resource"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/webrtc",
											"packagePath": "src/utils/permissions.ts",
											"qualifiedName": "DevicePermissionName"
										},
										"name": "DevicePermissionName",
										"package": "@signalwire/webrtc"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1903,
					"name": "checkSpeakerPermissions",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/permissions.ts",
							"line": 89,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/permissions.ts#L89"
						}
					],
					"signatures": [
						{
							"id": 1904,
							"name": "checkSpeakerPermissions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronously returns whether we have permissions to access the speakers."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.checkSpeakerPermissions()\n// true\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/permissions.ts",
									"line": 89,
									"character": 39,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/permissions.ts#L89"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1911,
					"name": "createCameraDeviceWatcher",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 654,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L654"
						}
					],
					"signatures": [
						{
							"id": 1912,
							"name": "createCameraDeviceWatcher",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronously returns an event emitter that notifies changes in all camera\ndevices. This is equivalent to calling\n"
									},
									{
										"kind": "code",
										"text": "`createDeviceWatcher({ targets: ['camera'] })`"
									},
									{
										"kind": "text",
										"text": ", so refer to\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "createDeviceWatcher",
										"target": 1908
									},
									{
										"kind": "text",
										"text": " for additional information about the returned\nevent emitter."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 654,
									"character": 41,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L654"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "eventemitter3",
											"packagePath": "index.d.ts",
											"qualifiedName": "EventEmitter"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/deviceHelpers.ts",
													"qualifiedName": "DeviceWatcherEvents"
												},
												"name": "DeviceWatcherEvents",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "EventEmitter",
										"package": "eventemitter3"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1908,
					"name": "createDeviceWatcher",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 563,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L563"
						}
					],
					"signatures": [
						{
							"id": 1909,
							"name": "createDeviceWatcher",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronously returns an event emitter that notifies changes in the devices.\nThe possible events are:\n\n - \"added\": a device has been added\n - \"removed\": a device has been removed\n - \"updated\": a device has been updated\n - \"changed\": any of the previous events occurred\n\nIn all cases, your event handler gets as parameter an object "
									},
									{
										"kind": "code",
										"text": "`e`"
									},
									{
										"kind": "text",
										"text": " with the\nfollowing keys:\n\n - "
									},
									{
										"kind": "code",
										"text": "`e.changes`"
									},
									{
										"kind": "text",
										"text": ": the changed devices. For \"added\", \"removed\", and \"updated\"\n   event handlers, you only get the object associated to the respective event\n   (i.e., only a list of added devices, removed devices, or updated devices).\n   For \"changed\" event handlers, you get all three lists.\n - "
									},
									{
										"kind": "code",
										"text": "`e.devices`"
									},
									{
										"kind": "text",
										"text": ": the new list of devices\n\nFor device-specific helpers, see "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "createCameraDeviceWatcher",
										"target": 1911
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "createMicrophoneDeviceWatcher",
										"target": 1913
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "createSpeakerDeviceWatcher",
										"target": 1915
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "Creating an event listener on the \"changed\" event and printing the received parameter after both connecting and disconnecting external headphones:\n"
											},
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.getUserMedia({audio: true, video: false})\nh = await SignalWire.WebRTC.createDeviceWatcher()\nh.on('changed', (c) => console.log(c))\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "Getting notified just for changes about audio input and output devices, ignoring the camera:\n"
											},
											{
												"kind": "code",
												"text": "```typescript\nh = await SignalWire.WebRTC.createDeviceWatcher({targets: ['microphone', 'speaker']})\nh.on('changed', (c) => console.log(c))\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 563,
									"character": 35,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L563"
								}
							],
							"parameters": [
								{
									"id": 1910,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "if null, the event emitter is associated to all devices for\nwhich we have permission. Otherwise, you can pass an object\n"
											},
											{
												"kind": "code",
												"text": "`{targets: string}`"
											},
											{
												"kind": "text",
												"text": ", where the value for key targets is a list of categories.\nAllowed categories are "
											},
											{
												"kind": "code",
												"text": "`\"camera\"`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`\"microphone\"`"
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "code",
												"text": "`\"speaker\"`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/webrtc",
											"packagePath": "src/utils/deviceHelpers.ts",
											"qualifiedName": "CreateDeviceWatcherOptions"
										},
										"name": "CreateDeviceWatcherOptions",
										"package": "@signalwire/webrtc"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "eventemitter3",
											"packagePath": "index.d.ts",
											"qualifiedName": "EventEmitter"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/deviceHelpers.ts",
													"qualifiedName": "DeviceWatcherEvents"
												},
												"name": "DeviceWatcherEvents",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "EventEmitter",
										"package": "eventemitter3"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1948,
					"name": "createMicrophoneAnalyzer",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 745,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L745"
						}
					],
					"signatures": [
						{
							"id": 1949,
							"name": "createMicrophoneAnalyzer",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes a microphone analyzer. You can use a MicrophoneAnalyzer to track\nthe input audio volume.\n\nTo stop the analyzer, plase call the "
									},
									{
										"kind": "code",
										"text": "`destroy()`"
									},
									{
										"kind": "text",
										"text": " method on the object\nreturned by this method.\n\nThe returned object emits the following events:\n\n  - "
									},
									{
										"kind": "code",
										"text": "`volumeChanged`"
									},
									{
										"kind": "text",
										"text": ": instantaneous volume from 0 to 100\n  - "
									},
									{
										"kind": "code",
										"text": "`destroyed`"
									},
									{
										"kind": "text",
										"text": ": the object has been destroyed. You get a parameter\n    describing the reason, which can be "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " (if you called "
									},
									{
										"kind": "code",
										"text": "`destroy()`"
									},
									{
										"kind": "text",
										"text": "),\n    "
									},
									{
										"kind": "code",
										"text": "`\"error\"`"
									},
									{
										"kind": "text",
										"text": " (in case of errors), or "
									},
									{
										"kind": "code",
										"text": "`\"disconnected\"`"
									},
									{
										"kind": "text",
										"text": " (if the device was\n    disconnected)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\nconst micAnalyzer = await createMicrophoneAnalyzer('device-id')\n\nmicAnalyzer.on('volumeChanged', (vol) => {\n  console.log(\"Volume: \", vol)\n})\nmicAnalyzer.on('destroyed', (reason) => {\n  console.log('Microphone analyzer destroyed', reason)\n})\n\nmicAnalyzer.destroy()\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Asynchronously returns a MicrophoneAnalyzer."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 745,
									"character": 40,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L745"
								}
							],
							"parameters": [
								{
									"id": 1950,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "either the id of the device to analize, or\n[MediaStreamConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints),\nor a\n[MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "MediaStream"
												},
												"name": "MediaStream",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "MediaTrackConstraints"
												},
												"name": "MediaTrackConstraints",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 483,
										"name": "MicrophoneAnalyzer",
										"package": "@signalwire/webrtc"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1913,
					"name": "createMicrophoneDeviceWatcher",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 634,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L634"
						}
					],
					"signatures": [
						{
							"id": 1914,
							"name": "createMicrophoneDeviceWatcher",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronously returns an event emitter that notifies changes in all\nmicrophone devices. This is equivalent to calling\n"
									},
									{
										"kind": "code",
										"text": "`createDeviceWatcher({ targets: ['microphone'] })`"
									},
									{
										"kind": "text",
										"text": ", so refer to\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "createDeviceWatcher",
										"target": 1908
									},
									{
										"kind": "text",
										"text": " for additional information about the returned\nevent emitter."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 634,
									"character": 45,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L634"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "eventemitter3",
											"packagePath": "index.d.ts",
											"qualifiedName": "EventEmitter"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/deviceHelpers.ts",
													"qualifiedName": "DeviceWatcherEvents"
												},
												"name": "DeviceWatcherEvents",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "EventEmitter",
										"package": "eventemitter3"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1915,
					"name": "createSpeakerDeviceWatcher",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 644,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L644"
						}
					],
					"signatures": [
						{
							"id": 1916,
							"name": "createSpeakerDeviceWatcher",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronously returns an event emitter that notifies changes in all speaker\ndevices. This is equivalent to calling\n"
									},
									{
										"kind": "code",
										"text": "`createDeviceWatcher({ targets: ['speaker'] })`"
									},
									{
										"kind": "text",
										"text": ", so refer to\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "createDeviceWatcher",
										"target": 1908
									},
									{
										"kind": "text",
										"text": " for additional information about the returned\nevent emitter."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 644,
									"character": 42,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L644"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "eventemitter3",
											"packagePath": "index.d.ts",
											"qualifiedName": "EventEmitter"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/deviceHelpers.ts",
													"qualifiedName": "DeviceWatcherEvents"
												},
												"name": "DeviceWatcherEvents",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "EventEmitter",
										"package": "eventemitter3"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1929,
					"name": "enumerateDevices",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/enumerateDevices.ts",
							"line": 25,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/enumerateDevices.ts#L25"
						}
					],
					"signatures": [
						{
							"id": 1930,
							"name": "enumerateDevices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enumerates the media input and output devices available on this device.\n\n> 📘\n> Depending on the browser, some information (such as the "
									},
									{
										"kind": "code",
										"text": "`label`"
									},
									{
										"kind": "text",
										"text": " and\n> "
									},
									{
										"kind": "code",
										"text": "`deviceId`"
									},
									{
										"kind": "text",
										"text": " attributes) could be hidden until permission is granted, for\n> example by calling "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getUserMedia",
										"target": 1923
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.enumerateDevices()\n// [\n//   {\n//     \"deviceId\": \"Rug5Bk...4TMhY=\",\n//     \"kind\": \"videoinput\",\n//     \"label\": \"HD FaceTime Camera\",\n//     \"groupId\": \"EEX/N2...AjrOs=\"\n//   },\n//   ...\n// ]\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/enumerateDevices.ts",
									"line": 25,
									"character": 32,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/enumerateDevices.ts#L25"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.dom.d.ts",
												"qualifiedName": "MediaDeviceInfo"
											},
											"name": "MediaDeviceInfo",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1931,
					"name": "enumerateDevicesByKind",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/enumerateDevices.ts",
							"line": 29,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/enumerateDevices.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 1932,
							"name": "enumerateDevicesByKind",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/enumerateDevices.ts",
									"line": 29,
									"character": 38,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/enumerateDevices.ts#L29"
								}
							],
							"parameters": [
								{
									"id": 1933,
									"name": "filterByKind",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaDeviceKind"
										},
										"name": "MediaDeviceKind",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.dom.d.ts",
												"qualifiedName": "MediaDeviceInfo"
											},
											"name": "MediaDeviceInfo",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1880,
					"name": "getCameraDevices",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 213,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L213"
						}
					],
					"signatures": [
						{
							"id": 1881,
							"name": "getCameraDevices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array of camera devices that can be accessed on this device (for which we have permissions)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.getCameraDevices()\n// [\n//   {\n//     \"deviceId\": \"Rug5Bk...4TMhY=\",\n//     \"kind\": \"videoinput\",\n//     \"label\": \"HD FaceTime Camera\",\n//     \"groupId\": \"Su/dzw...ccfnY=\"\n//   }\n// ]\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 213,
									"character": 32,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L213"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.dom.d.ts",
												"qualifiedName": "MediaDeviceInfo"
											},
											"name": "MediaDeviceInfo",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1890,
					"name": "getCameraDevicesWithPermissions",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 79,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L79"
						}
					],
					"signatures": [
						{
							"id": 1891,
							"name": "getCameraDevicesWithPermissions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "After prompting the user for permission, returns an array of camera devices."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.getCameraDevicesWithPermissions()\n// [\n//   {\n//     \"deviceId\": \"Rug5Bk...4TMhY=\",\n//     \"kind\": \"videoinput\",\n//     \"label\": \"HD FaceTime Camera\",\n//     \"groupId\": \"Su/dzw...ccfnY=\"\n//   }\n// ]\n```"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getCameraDevices",
												"target": 1880
											},
											{
												"kind": "text",
												"text": " for better cross browser compatibility."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 79,
									"character": 47,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L79"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.dom.d.ts",
												"qualifiedName": "MediaDeviceInfo"
											},
											"name": "MediaDeviceInfo",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1876,
					"name": "getDevices",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 169,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L169"
						}
					],
					"signatures": [
						{
							"id": 1877,
							"name": "getDevices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enumerates the media input and output devices available on this machine. If\n"
									},
									{
										"kind": "code",
										"text": "`name`"
									},
									{
										"kind": "text",
										"text": " is provided, only the devices of the specified kind are returned.\nPossible values of the "
									},
									{
										"kind": "code",
										"text": "`name`"
									},
									{
										"kind": "text",
										"text": " parameters are "
									},
									{
										"kind": "code",
										"text": "`\"camera\"`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`\"microphone\"`"
									},
									{
										"kind": "text",
										"text": ", and\n"
									},
									{
										"kind": "code",
										"text": "`\"speaker\"`"
									},
									{
										"kind": "text",
										"text": ", which respectively correspond to functions\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getCameraDevices",
										"target": 1880
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getMicrophoneDevices",
										"target": 1882
									},
									{
										"kind": "text",
										"text": ", and\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getSpeakerDevices",
										"target": 1884
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.getDevices(\"camera\", true)\n// [\n//   {\n//     \"deviceId\": \"3c4f97...\",\n//     \"kind\": \"videoinput\",\n//     \"label\": \"HD Camera\",\n//     \"groupId\": \"828fec...\"\n//   }\n// ]\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 169,
									"character": 26,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L169"
								}
							],
							"parameters": [
								{
									"id": 1878,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "filter for this device category"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/webrtc",
											"packagePath": "src/utils/primitives.ts",
											"qualifiedName": "DevicePermissionName"
										},
										"name": "DevicePermissionName",
										"package": "@signalwire/webrtc"
									}
								},
								{
									"id": 1879,
									"name": "fullList",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Default to false. Set to true to retrieve the raw list as returned by\nthe browser, which might include multiple, duplicate deviceIds for the same group."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.dom.d.ts",
												"qualifiedName": "MediaDeviceInfo"
											},
											"name": "MediaDeviceInfo",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1886,
					"name": "getDevicesWithPermissions",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 57,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 1887,
							"name": "getDevicesWithPermissions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "After prompting the user for permission, returns an array of media input and\noutput devices available on this machine. If "
									},
									{
										"kind": "code",
										"text": "`kind`"
									},
									{
										"kind": "text",
										"text": " is not null, only the\ndevices of the specified kind are returned. Possible values of the "
									},
									{
										"kind": "code",
										"text": "`kind`"
									},
									{
										"kind": "text",
										"text": "\nparameters are "
									},
									{
										"kind": "code",
										"text": "`\"camera\"`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`\"microphone\"`"
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "code",
										"text": "`\"speaker\"`"
									},
									{
										"kind": "text",
										"text": ", which\nrespectively correspond to functions\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getCameraDevicesWithPermissions",
										"target": 1890
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getMicrophoneDevicesWithPermissions",
										"target": 1892
									},
									{
										"kind": "text",
										"text": ", and\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getSpeakerDevicesWithPermissions",
										"target": 1894
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.getDevicesWithPermissions(\"camera\")\n// [\n//   {\n//     \"deviceId\": \"Rug5Bk...4TMhY=\",\n//     \"kind\": \"videoinput\",\n//     \"label\": \"HD FaceTime Camera\",\n//     \"groupId\": \"Su/dzw...ccfnY=\"\n//   }\n// ]\n```"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getDevices",
												"target": 1876
											},
											{
												"kind": "text",
												"text": " for better cross browser compatibility."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 57,
									"character": 41,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L57"
								}
							],
							"parameters": [
								{
									"id": 1888,
									"name": "kind",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "filter for this device category"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/webrtc",
											"packagePath": "src/utils/primitives.ts",
											"qualifiedName": "DevicePermissionName"
										},
										"name": "DevicePermissionName",
										"package": "@signalwire/webrtc"
									}
								},
								{
									"id": 1889,
									"name": "fullList",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "By default, only devices for which\nwe have been granted permissions are returned. To obtain a list of devices regardless of\nthe permissions, pass "
											},
											{
												"kind": "code",
												"text": "`fullList=true`"
											},
											{
												"kind": "text",
												"text": ". Note however that some values such as\n"
											},
											{
												"kind": "code",
												"text": "`name`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`deviceId`"
											},
											{
												"kind": "text",
												"text": " could be omitted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.dom.d.ts",
												"qualifiedName": "MediaDeviceInfo"
											},
											"name": "MediaDeviceInfo",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1926,
					"name": "getDisplayMedia",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/getDisplayMedia.ts",
							"line": 18,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/getDisplayMedia.ts#L18"
						}
					],
					"signatures": [
						{
							"id": 1927,
							"name": "getDisplayMedia",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prompts the user to share the screen and asynchronously returns a\n[MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\nobject associated with a display or part of it."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.getDisplayMedia()\n// MediaStream {id: \"HCXy...\", active: true, ...}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/getDisplayMedia.ts",
									"line": 18,
									"character": 31,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/getDisplayMedia.ts#L18"
								}
							],
							"parameters": [
								{
									"id": 1928,
									"name": "constraints",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an optional\n[MediaStreamConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints)\nobject specifying requirements for the returned [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStreamConstraints"
										},
										"name": "MediaStreamConstraints",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStream"
										},
										"name": "MediaStream",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1882,
					"name": "getMicrophoneDevices",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 231,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L231"
						}
					],
					"signatures": [
						{
							"id": 1883,
							"name": "getMicrophoneDevices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array of microphone devices that can be accessed on this device (for which we have permissions)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.getMicrophoneDevices()\n// [\n//   {\n//     \"deviceId\": \"ADciLf...NYgF8=\",\n//     \"kind\": \"audioinput\",\n//     \"label\": \"Internal Microphone\",\n//     \"groupId\": \"rgZgKM...NW1hU=\"\n//   }\n// ]\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 231,
									"character": 36,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L231"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.dom.d.ts",
												"qualifiedName": "MediaDeviceInfo"
											},
											"name": "MediaDeviceInfo",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1892,
					"name": "getMicrophoneDevicesWithPermissions",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 99,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L99"
						}
					],
					"signatures": [
						{
							"id": 1893,
							"name": "getMicrophoneDevicesWithPermissions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "After prompting the user for permission, returns an array of microphone devices."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.getMicrophoneDevicesWithPermissions()\n// [\n//   {\n//     \"deviceId\": \"ADciLf...NYgF8=\",\n//     \"kind\": \"audioinput\",\n//     \"label\": \"Internal Microphone\",\n//     \"groupId\": \"rgZgKM...NW1hU=\"\n//   }\n// ]\n```"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getMicrophoneDevices",
												"target": 1882
											},
											{
												"kind": "text",
												"text": " for better cross browser compatibility."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 99,
									"character": 51,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L99"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.dom.d.ts",
												"qualifiedName": "MediaDeviceInfo"
											},
											"name": "MediaDeviceInfo",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1884,
					"name": "getSpeakerDevices",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 249,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L249"
						}
					],
					"signatures": [
						{
							"id": 1885,
							"name": "getSpeakerDevices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array of speaker devices that can be accessed on this device (for which we have permissions)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.getSpeakerDevices()\n// [\n//   {\n//     \"deviceId\": \"ADciLf...NYgF8=\",\n//     \"kind\": \"audiooutput\",\n//     \"label\": \"External Speaker\",\n//     \"groupId\": \"rgZgKM...NW1hU=\"\n//   }\n// ]\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 249,
									"character": 33,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L249"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.dom.d.ts",
												"qualifiedName": "MediaDeviceInfo"
											},
											"name": "MediaDeviceInfo",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1894,
					"name": "getSpeakerDevicesWithPermissions",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 119,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L119"
						}
					],
					"signatures": [
						{
							"id": 1895,
							"name": "getSpeakerDevicesWithPermissions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "After prompting the user for permission, returns an array of speaker devices."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.getSpeakerDevicesWithPermissions()\n// [\n//   {\n//     \"deviceId\": \"ADciLf...NYgF8=\",\n//     \"kind\": \"audiooutput\",\n//     \"label\": \"External Speaker\",\n//     \"groupId\": \"rgZgKM...NW1hU=\"\n//   }\n// ]\n```"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getSpeakerDevices",
												"target": 1884
											},
											{
												"kind": "text",
												"text": " for better cross browser compatibility."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 119,
									"character": 48,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L119"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.dom.d.ts",
												"qualifiedName": "MediaDeviceInfo"
											},
											"name": "MediaDeviceInfo",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1934,
					"name": "getSupportedConstraints",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/primitives.ts",
							"line": 42,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L42"
						}
					],
					"signatures": [
						{
							"id": 1935,
							"name": "getSupportedConstraints",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a dictionary whose fields specify the constrainable properties the user agent understands."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/primitives.ts",
									"line": 42,
									"character": 39,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L42"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackSupportedConstraints"
								},
								"name": "MediaTrackSupportedConstraints",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1923,
					"name": "getUserMedia",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/getUserMedia.ts",
							"line": 70,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/getUserMedia.ts#L70"
						}
					],
					"signatures": [
						{
							"id": 1924,
							"name": "getUserMedia",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prompts the user to share one or more media devices and asynchronously\nreturns an associated [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\nobject.\n\nFor more information, see ["
									},
									{
										"kind": "code",
										"text": "`MediaDevices.getUserMedia()`"
									},
									{
										"kind": "text",
										"text": "](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To only request audio media:\n\n"
											},
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.getUserMedia({audio: true, video: false})\n// MediaStream {id: \"HCXy...\", active: true, ...}\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To request both audio and video, specifying constraints for the video:\n\n"
											},
											{
												"kind": "code",
												"text": "```typescript\nconst constraints = {\n  audio: true,\n  video: {\n    width: { min: 1024, ideal: 1280, max: 1920 },\n    height: { min: 576, ideal: 720, max: 1080 }\n  }\n}\nawait SignalWire.WebRTC.getUserMedia(constraints)\n// MediaStream {id: \"EDVk...\", active: true, ...}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/getUserMedia.ts",
									"line": 70,
									"character": 28,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/getUserMedia.ts#L70"
								}
							],
							"parameters": [
								{
									"id": 1925,
									"name": "constraints",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an optional [MediaStreamConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints)\n                   object specifying requirements for the returned [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStreamConstraints"
										},
										"name": "MediaStreamConstraints",
										"package": "typescript"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStream"
										},
										"name": "MediaStream",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1905,
					"name": "requestPermissions",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/requestPermissions.ts",
							"line": 29,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/requestPermissions.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 1906,
							"name": "requestPermissions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prompts the user to grant permissions for the devices matching the specified set of constraints."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To only request audio permissions:\n\n"
											},
											{
												"kind": "code",
												"text": "```typescript\nawait SignalWire.WebRTC.requestPermissions({audio: true, video: false})\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To request permissions for both audio and video, specifying constraints for the video:\n"
											},
											{
												"kind": "code",
												"text": "```typescript\nconst constraints = {\n  audio: true,\n  video: {\n    width: { min: 1024, ideal: 1280, max: 1920 },\n    height: { min: 576, ideal: 720, max: 1080 }\n  }\n}\nawait SignalWire.WebRTC.requestPermissions(constraints)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/requestPermissions.ts",
									"line": 29,
									"character": 34,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/requestPermissions.ts#L29"
								}
							],
							"parameters": [
								{
									"id": 1907,
									"name": "constraints",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an optional [MediaStreamConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints)\n                   object specifying requirements for the returned [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStreamConstraints"
										},
										"name": "MediaStreamConstraints",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1938,
					"name": "setMediaElementSinkId",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/primitives.ts",
							"line": 77,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L77"
						}
					],
					"signatures": [
						{
							"id": 1939,
							"name": "setMediaElementSinkId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Assigns the specified audio output device to the specified HTMLMediaElement.\nThe device with id "
									},
									{
										"kind": "code",
										"text": "`deviceId`"
									},
									{
										"kind": "text",
										"text": " must be an audio output device. Asynchronously\nreturns whether the operation had success.\n\n> 📘\n> Some browsers do not support output device selection. You can check by\n> calling ["
									},
									{
										"kind": "code",
										"text": "`supportsMediaOutput`"
									},
									{
										"kind": "text",
										"text": "]("
									},
									{
										"kind": "relative-link",
										"text": "supportsMediaOutput"
									},
									{
										"kind": "text",
										"text": ")."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a promise of whether the operation had success"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst el = document.querySelector('video')\nconst outDevices = await SignalWire.WebRTC.getSpeakerDevicesWithPermissions()\nawait SignalWire.WebRTC.setMediaElementSinkId(el, outDevices[0].deviceId)\n// true\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/primitives.ts",
									"line": 77,
									"character": 37,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L77"
								}
							],
							"parameters": [
								{
									"id": 1940,
									"name": "el",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "target element"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "HTMLMediaElement"
												},
												"name": "HTMLMediaElement",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 1941,
									"name": "deviceId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "id of the audio output device"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1942,
					"name": "stopStream",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/primitives.ts",
							"line": 109,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L109"
						}
					],
					"signatures": [
						{
							"id": 1943,
							"name": "stopStream",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/primitives.ts",
									"line": 109,
									"character": 26,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L109"
								}
							],
							"parameters": [
								{
									"id": 1944,
									"name": "stream",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStream"
										},
										"name": "MediaStream",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1945,
					"name": "stopTrack",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/primitives.ts",
							"line": 115,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L115"
						}
					],
					"signatures": [
						{
							"id": 1946,
							"name": "stopTrack",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/primitives.ts",
									"line": 115,
									"character": 25,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L115"
								}
							],
							"parameters": [
								{
									"id": 1947,
									"name": "track",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStreamTrack"
										},
										"name": "MediaStreamTrack",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1921,
					"name": "supportsGetDisplayMedia",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/primitives.ts",
							"line": 35,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L35"
						}
					],
					"signatures": [
						{
							"id": 1922,
							"name": "supportsGetDisplayMedia",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns whether the current environment supports "
									},
									{
										"kind": "code",
										"text": "`getDisplayMedia`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/primitives.ts",
									"line": 35,
									"character": 39,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1919,
					"name": "supportsGetUserMedia",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/primitives.ts",
							"line": 28,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 1920,
							"name": "supportsGetUserMedia",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns whether the current environment supports "
									},
									{
										"kind": "code",
										"text": "`getUserMedia`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/primitives.ts",
									"line": 28,
									"character": 36,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L28"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1917,
					"name": "supportsMediaDevices",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/primitives.ts",
							"line": 10,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L10"
						}
					],
					"signatures": [
						{
							"id": 1918,
							"name": "supportsMediaDevices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns whether the current environment supports the media devices API."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/primitives.ts",
									"line": 10,
									"character": 36,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L10"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1936,
					"name": "supportsMediaOutput",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/primitives.ts",
							"line": 52,
							"character": 13,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L52"
						}
					],
					"signatures": [
						{
							"id": 1937,
							"name": "supportsMediaOutput",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns whether the current environment supports the selection of a media output device."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/primitives.ts",
									"line": 52,
									"character": 35,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/primitives.ts#L52"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1951,
					"name": "MicrophoneAnalyzer",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/webrtc.ts",
							"line": 33,
							"character": 14,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/webrtc.ts#L33"
						}
					],
					"target": 483
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						1899,
						1901,
						1896,
						1903,
						1911,
						1908,
						1948,
						1913,
						1915,
						1929,
						1931,
						1880,
						1890,
						1876,
						1886,
						1926,
						1882,
						1892,
						1884,
						1894,
						1934,
						1923,
						1905,
						1938,
						1942,
						1945,
						1921,
						1919,
						1917,
						1936
					]
				},
				{
					"title": "References",
					"children": [
						1951
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/webrtc.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/webrtc.ts#L1"
				}
			]
		},
		{
			"id": 12,
			"name": "ProfileType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Types of authentication profiles"
					}
				]
			},
			"children": [
				{
					"id": 14,
					"name": "DYNAMIC",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Dynamic profile that exists only in memory.\nUsed for shared resource access or temporary authentication."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 37,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L37"
						}
					],
					"type": {
						"type": "literal",
						"value": "dynamic"
					}
				},
				{
					"id": 13,
					"name": "STATIC",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Static profile with credentials that are persisted to storage.\nTypically used for subscriber authentication."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L31"
						}
					],
					"type": {
						"type": "literal",
						"value": "static"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						14,
						13
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 26,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L26"
				}
			]
		},
		{
			"id": 1665,
			"name": "ClientFactory",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Singleton factory for managing SignalWire client instances and authentication profiles.\nProvides a centralized way to create, manage, and dispose of client instances."
					}
				]
			},
			"children": [
				{
					"id": 1697,
					"name": "addDynamicProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 364,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L364"
						}
					],
					"signatures": [
						{
							"id": 1698,
							"name": "addDynamicProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a dynamic profile (memory-only, not persisted)\nConvenience method for creating temporary authentication profiles"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Created profile"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 364,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L364"
								}
							],
							"parameters": [
								{
									"id": 1699,
									"name": "credentialsId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Unique identifier for credentials"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1700,
									"name": "credentials",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Authentication credentials"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5,
										"name": "SignalWireCredentials",
										"package": "@signalwire/client"
									}
								},
								{
									"id": 1701,
									"name": "addressId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "SignalWire address ID"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1702,
									"name": "addressDetails",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional address details"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1703,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1707,
													"name": "channels",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/client/src/unified/ClientFactory.ts",
															"line": 372,
															"character": 6,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L372"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1706,
													"name": "displayName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/client/src/unified/ClientFactory.ts",
															"line": 371,
															"character": 6,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L371"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1705,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/ClientFactory.ts",
															"line": 370,
															"character": 6,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L370"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1704,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/ClientFactory.ts",
															"line": 369,
															"character": 6,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L369"
														}
													],
													"type": {
														"type": "reference",
														"target": 556,
														"name": "ResourceType",
														"package": "@signalwire/client"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1707,
														1706,
														1705,
														1704
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/client/src/unified/ClientFactory.ts",
													"line": 368,
													"character": 21,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L368"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15,
										"name": "Profile",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1678,
					"name": "addProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 78,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L78"
						}
					],
					"signatures": [
						{
							"id": 1679,
							"name": "addProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add one or more authentication profiles"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of created profiles"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 78,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L78"
								}
							],
							"parameters": [
								{
									"id": 1680,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profiles to add"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 37,
										"name": "AddProfilesParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15,
											"name": "Profile",
											"package": "@signalwire/client"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 56,
								"name": "ClientFactoryContract.addProfiles"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 55,
						"name": "ClientFactoryContract.addProfiles"
					}
				},
				{
					"id": 1708,
					"name": "addStaticProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 404,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L404"
						}
					],
					"signatures": [
						{
							"id": 1709,
							"name": "addStaticProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a static profile (persisted to storage)\nConvenience method for creating persistent authentication profiles"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Created profile"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 404,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L404"
								}
							],
							"parameters": [
								{
									"id": 1710,
									"name": "credentialsId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Unique identifier for credentials"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1711,
									"name": "credentials",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Authentication credentials"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5,
										"name": "SignalWireCredentials",
										"package": "@signalwire/client"
									}
								},
								{
									"id": 1712,
									"name": "addressId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "SignalWire address ID"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1713,
									"name": "addressDetails",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional address details"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1714,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1718,
													"name": "channels",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/client/src/unified/ClientFactory.ts",
															"line": 412,
															"character": 6,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L412"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1717,
													"name": "displayName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/client/src/unified/ClientFactory.ts",
															"line": 411,
															"character": 6,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L411"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1716,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/ClientFactory.ts",
															"line": 410,
															"character": 6,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L410"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1715,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/ClientFactory.ts",
															"line": 409,
															"character": 6,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L409"
														}
													],
													"type": {
														"type": "reference",
														"target": 556,
														"name": "ResourceType",
														"package": "@signalwire/client"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1718,
														1717,
														1716,
														1715
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/client/src/unified/ClientFactory.ts",
													"line": 408,
													"character": 21,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L408"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15,
										"name": "Profile",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1721,
					"name": "dispose",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 450,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L450"
						}
					],
					"signatures": [
						{
							"id": 1722,
							"name": "dispose",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Dispose of all resources and reset the factory\nThis will dispose of all active instances and clear all profiles"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 450,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L450"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1692,
					"name": "disposeClient",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 327,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L327"
						}
					],
					"signatures": [
						{
							"id": 1693,
							"name": "disposeClient",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Dispose of a client instance"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the instance was successfully disposed"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 327,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L327"
								}
							],
							"parameters": [
								{
									"id": 1694,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disposal parameters"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 49,
										"name": "DisposeClientParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 70,
								"name": "ClientFactoryContract.disposeClient"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 69,
						"name": "ClientFactoryContract.disposeClient"
					}
				},
				{
					"id": 1689,
					"name": "getClient",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 238,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L238"
						}
					],
					"signatures": [
						{
							"id": 1690,
							"name": "getClient",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get or create a client instance for a profile"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Client instance information"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 238,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L238"
								}
							],
							"parameters": [
								{
									"id": 1691,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Client request parameters"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 42,
										"name": "GetClientParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 46,
										"name": "GetClientResult",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 67,
								"name": "ClientFactoryContract.getClient"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 66,
						"name": "ClientFactoryContract.getClient"
					}
				},
				{
					"id": 1686,
					"name": "getProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 228,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L228"
						}
					],
					"signatures": [
						{
							"id": 1687,
							"name": "getProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a specific profile by ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Profile or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 228,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L228"
								}
							],
							"parameters": [
								{
									"id": 1688,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 15,
												"name": "Profile",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 64,
								"name": "ClientFactoryContract.getProfile"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 63,
						"name": "ClientFactoryContract.getProfile"
					}
				},
				{
					"id": 1719,
					"name": "getStorageInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 439,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L439"
						}
					],
					"signatures": [
						{
							"id": 1720,
							"name": "getStorageInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get storage information"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Storage information if available"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 439,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L439"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 418,
												"name": "StorageInfo",
												"package": "@signalwire/core"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1675,
					"name": "init",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 56,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L56"
						}
					],
					"signatures": [
						{
							"id": 1676,
							"name": "init",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initialize the factory with storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 56,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L56"
								}
							],
							"parameters": [
								{
									"id": 1677,
									"name": "storage",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional storage implementation (defaults to LocalStorageAdapter)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 359,
										"name": "SignalWireStorageContract",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 53,
								"name": "ClientFactoryContract.init"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 52,
						"name": "ClientFactoryContract.init"
					}
				},
				{
					"id": 1695,
					"name": "listActiveClients",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 350,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L350"
						}
					],
					"signatures": [
						{
							"id": 1696,
							"name": "listActiveClients",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all active client instances"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of active instances"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 350,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L350"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30,
											"name": "ManagedInstance",
											"package": "@signalwire/client"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 73,
								"name": "ClientFactoryContract.listActiveClients"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 72,
						"name": "ClientFactoryContract.listActiveClients"
					}
				},
				{
					"id": 1684,
					"name": "listProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 218,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L218"
						}
					],
					"signatures": [
						{
							"id": 1685,
							"name": "listProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all available profiles"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of all profiles"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 218,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L218"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15,
											"name": "Profile",
											"package": "@signalwire/client"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 62,
								"name": "ClientFactoryContract.listProfiles"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 61,
						"name": "ClientFactoryContract.listProfiles"
					}
				},
				{
					"id": 1681,
					"name": "removeProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 181,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L181"
						}
					],
					"signatures": [
						{
							"id": 1682,
							"name": "removeProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove one or more authentication profiles"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of successfully removed profile IDs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 181,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L181"
								}
							],
							"parameters": [
								{
									"id": 1683,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile IDs to remove"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 39,
										"name": "RemoveProfilesParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 59,
								"name": "ClientFactoryContract.removeProfiles"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 58,
						"name": "ClientFactoryContract.removeProfiles"
					}
				},
				{
					"id": 1667,
					"name": "getInstance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 45,
							"character": 16,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L45"
						}
					],
					"signatures": [
						{
							"id": 1668,
							"name": "getInstance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the singleton instance of ClientFactory"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "ClientFactory instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ClientFactory.ts",
									"line": 45,
									"character": 16,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L45"
								}
							],
							"type": {
								"type": "reference",
								"target": 1665,
								"name": "ClientFactory",
								"package": "@signalwire/client"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						1697,
						1678,
						1708,
						1721,
						1692,
						1689,
						1686,
						1719,
						1675,
						1695,
						1684,
						1681,
						1667
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/ClientFactory.ts",
					"line": 29,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L29"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 51,
					"name": "ClientFactoryContract",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 147,
			"name": "ClientFactoryError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Error types for ClientFactory operations"
					}
				]
			},
			"children": [
				{
					"id": 148,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 356,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L356"
						}
					],
					"signatures": [
						{
							"id": 149,
							"name": "ClientFactoryError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 356,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L356"
								}
							],
							"parameters": [
								{
									"id": 150,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 151,
									"name": "code",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 152,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 147,
								"name": "ClientFactoryError",
								"package": "@signalwire/client"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				},
				{
					"id": 153,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 358,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L358"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 154,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 359,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L359"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						148
					]
				},
				{
					"title": "Properties",
					"children": [
						153,
						154
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 355,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L355"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "typescript",
						"packagePath": "lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 155,
					"name": "ProfileNotFoundError"
				},
				{
					"type": "reference",
					"target": 161,
					"name": "InstanceNotFoundError"
				},
				{
					"type": "reference",
					"target": 167,
					"name": "ProfileExistsError"
				},
				{
					"type": "reference",
					"target": 173,
					"name": "InstanceInUseError"
				},
				{
					"type": "reference",
					"target": 179,
					"name": "CredentialRefreshError"
				},
				{
					"type": "reference",
					"target": 186,
					"name": "CredentialExpiredError"
				}
			]
		},
		{
			"id": 186,
			"name": "CredentialExpiredError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Error types for ClientFactory operations"
					}
				]
			},
			"children": [
				{
					"id": 187,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 409,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L409"
						}
					],
					"signatures": [
						{
							"id": 188,
							"name": "CredentialExpiredError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 409,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L409"
								}
							],
							"parameters": [
								{
									"id": 189,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 190,
									"name": "expiredAt",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 186,
								"name": "CredentialExpiredError",
								"package": "@signalwire/client"
							},
							"overwrites": {
								"type": "reference",
								"target": 149,
								"name": "ClientFactoryError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 148,
						"name": "ClientFactoryError.constructor"
					}
				},
				{
					"id": 191,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 358,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L358"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 153,
						"name": "ClientFactoryError.code"
					}
				},
				{
					"id": 192,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 359,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L359"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 154,
						"name": "ClientFactoryError.context"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						187
					]
				},
				{
					"title": "Properties",
					"children": [
						191,
						192
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 408,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L408"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 147,
					"name": "ClientFactoryError",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 179,
			"name": "CredentialRefreshError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Error types for ClientFactory operations"
					}
				]
			},
			"children": [
				{
					"id": 180,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 399,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L399"
						}
					],
					"signatures": [
						{
							"id": 181,
							"name": "CredentialRefreshError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 399,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L399"
								}
							],
							"parameters": [
								{
									"id": 182,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 183,
									"name": "originalError",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 179,
								"name": "CredentialRefreshError",
								"package": "@signalwire/client"
							},
							"overwrites": {
								"type": "reference",
								"target": 149,
								"name": "ClientFactoryError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 148,
						"name": "ClientFactoryError.constructor"
					}
				},
				{
					"id": 184,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 358,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L358"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 153,
						"name": "ClientFactoryError.code"
					}
				},
				{
					"id": 185,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 359,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L359"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 154,
						"name": "ClientFactoryError.context"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						180
					]
				},
				{
					"title": "Properties",
					"children": [
						184,
						185
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 398,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L398"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 147,
					"name": "ClientFactoryError",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 173,
			"name": "InstanceInUseError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Error types for ClientFactory operations"
					}
				]
			},
			"children": [
				{
					"id": 174,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 389,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L389"
						}
					],
					"signatures": [
						{
							"id": 175,
							"name": "InstanceInUseError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 389,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L389"
								}
							],
							"parameters": [
								{
									"id": 176,
									"name": "instanceId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 173,
								"name": "InstanceInUseError",
								"package": "@signalwire/client"
							},
							"overwrites": {
								"type": "reference",
								"target": 149,
								"name": "ClientFactoryError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 148,
						"name": "ClientFactoryError.constructor"
					}
				},
				{
					"id": 177,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 358,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L358"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 153,
						"name": "ClientFactoryError.code"
					}
				},
				{
					"id": 178,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 359,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L359"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 154,
						"name": "ClientFactoryError.context"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						174
					]
				},
				{
					"title": "Properties",
					"children": [
						177,
						178
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 388,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L388"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 147,
					"name": "ClientFactoryError",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 1810,
			"name": "InstanceManager",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Manages the lifecycle of SignalWire client instances.\nHandles creation, disposal, and tracking of active instances."
					}
				]
			},
			"children": [
				{
					"id": 1811,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1812,
							"name": "InstanceManager",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1810,
								"name": "InstanceManager",
								"package": "@signalwire/client"
							}
						}
					]
				},
				{
					"id": 1814,
					"name": "createInstance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/InstanceManager.ts",
							"line": 22,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L22"
						}
					],
					"signatures": [
						{
							"id": 1815,
							"name": "createInstance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new client instance"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Created instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/InstanceManager.ts",
									"line": 22,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L22"
								}
							],
							"parameters": [
								{
									"id": 1816,
									"name": "profile",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile data"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15,
										"name": "Profile",
										"package": "@signalwire/client"
									}
								},
								{
									"id": 1817,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 41,
										"name": "GetClientParamsOptions",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 30,
										"name": "ManagedInstance",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 109,
								"name": "InstanceManagerContract.createInstance"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 108,
						"name": "InstanceManagerContract.createInstance"
					}
				},
				{
					"id": 1832,
					"name": "dispose",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/InstanceManager.ts",
							"line": 150,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L150"
						}
					],
					"signatures": [
						{
							"id": 1833,
							"name": "dispose",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clean up all resources when the manager is being destroyed"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/InstanceManager.ts",
									"line": 150,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L150"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1818,
					"name": "disposeInstance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/InstanceManager.ts",
							"line": 82,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L82"
						}
					],
					"signatures": [
						{
							"id": 1819,
							"name": "disposeInstance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Dispose of a client instance"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the instance was disposed"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/InstanceManager.ts",
									"line": 82,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L82"
								}
							],
							"parameters": [
								{
									"id": 1820,
									"name": "instanceId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Instance ID to dispose"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 113,
								"name": "InstanceManagerContract.disposeInstance"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 112,
						"name": "InstanceManagerContract.disposeInstance"
					}
				},
				{
					"id": 1821,
					"name": "getInstance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/InstanceManager.ts",
							"line": 101,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L101"
						}
					],
					"signatures": [
						{
							"id": 1822,
							"name": "getInstance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get an existing instance"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Instance or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/InstanceManager.ts",
									"line": 101,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L101"
								}
							],
							"parameters": [
								{
									"id": 1823,
									"name": "instanceId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Instance identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 30,
												"name": "ManagedInstance",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 116,
								"name": "InstanceManagerContract.getInstance"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 115,
						"name": "InstanceManagerContract.getInstance"
					}
				},
				{
					"id": 1824,
					"name": "getInstanceByProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/InstanceManager.ts",
							"line": 116,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L116"
						}
					],
					"signatures": [
						{
							"id": 1825,
							"name": "getInstanceByProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get instance by profile ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Instance or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/InstanceManager.ts",
									"line": 116,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L116"
								}
							],
							"parameters": [
								{
									"id": 1826,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 30,
												"name": "ManagedInstance",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 119,
								"name": "InstanceManagerContract.getInstanceByProfile"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 118,
						"name": "InstanceManagerContract.getInstanceByProfile"
					}
				},
				{
					"id": 1827,
					"name": "listInstances",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/InstanceManager.ts",
							"line": 126,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L126"
						}
					],
					"signatures": [
						{
							"id": 1828,
							"name": "listInstances",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all active instances"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of active instances"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/InstanceManager.ts",
									"line": 126,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L126"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30,
											"name": "ManagedInstance",
											"package": "@signalwire/client"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 122,
								"name": "InstanceManagerContract.listInstances"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 121,
						"name": "InstanceManagerContract.listInstances"
					}
				},
				{
					"id": 1829,
					"name": "updateInstanceAccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/InstanceManager.ts",
							"line": 136,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L136"
						}
					],
					"signatures": [
						{
							"id": 1830,
							"name": "updateInstanceAccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update instance access tracking"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/InstanceManager.ts",
									"line": 136,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L136"
								}
							],
							"parameters": [
								{
									"id": 1831,
									"name": "instanceId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Instance identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 124,
								"name": "InstanceManagerContract.updateInstanceAccess"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 123,
						"name": "InstanceManagerContract.updateInstanceAccess"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1811
					]
				},
				{
					"title": "Methods",
					"children": [
						1814,
						1832,
						1818,
						1821,
						1824,
						1827,
						1829
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/InstanceManager.ts",
					"line": 13,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/InstanceManager.ts#L13"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 107,
					"name": "InstanceManagerContract",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 161,
			"name": "InstanceNotFoundError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Error types for ClientFactory operations"
					}
				]
			},
			"children": [
				{
					"id": 162,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 373,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L373"
						}
					],
					"signatures": [
						{
							"id": 163,
							"name": "InstanceNotFoundError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 373,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L373"
								}
							],
							"parameters": [
								{
									"id": 164,
									"name": "instanceId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 161,
								"name": "InstanceNotFoundError",
								"package": "@signalwire/client"
							},
							"overwrites": {
								"type": "reference",
								"target": 149,
								"name": "ClientFactoryError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 148,
						"name": "ClientFactoryError.constructor"
					}
				},
				{
					"id": 165,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 358,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L358"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 153,
						"name": "ClientFactoryError.code"
					}
				},
				{
					"id": 166,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 359,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L359"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 154,
						"name": "ClientFactoryError.context"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						162
					]
				},
				{
					"title": "Properties",
					"children": [
						165,
						166
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 372,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L372"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 147,
					"name": "ClientFactoryError",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 1505,
			"name": "LocalStorageAdapter",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Browser-based storage adapter using localStorage and sessionStorage"
					}
				]
			},
			"children": [
				{
					"id": 1506,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 10,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L10"
						}
					],
					"signatures": [
						{
							"id": 1507,
							"name": "LocalStorageAdapter",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L10"
								}
							],
							"type": {
								"type": "reference",
								"target": 1505,
								"name": "LocalStorageAdapter",
								"package": "@signalwire/client"
							}
						}
					]
				},
				{
					"id": 1554,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 156,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L156"
						}
					],
					"signatures": [
						{
							"id": 1555,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear all items from persistent storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 156,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L156"
								}
							],
							"parameters": [
								{
									"id": 1556,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional prefix to only clear matching keys"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 386,
								"name": "SignalWireStorageContract.clear"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 385,
						"name": "SignalWireStorageContract.clear"
					}
				},
				{
					"id": 1586,
					"name": "clearSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 270,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L270"
						}
					],
					"signatures": [
						{
							"id": 1587,
							"name": "clearSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear all items from session storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 270,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L270"
								}
							],
							"parameters": [
								{
									"id": 1588,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional prefix to only clear matching keys"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 414,
								"name": "SignalWireStorageContract.clearSession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 413,
						"name": "SignalWireStorageContract.clearSession"
					}
				},
				{
					"id": 1534,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 87,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L87"
						}
					],
					"signatures": [
						{
							"id": 1535,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a value from persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the item was deleted, false if it didn't exist"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 87,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L87"
								}
							],
							"parameters": [
								{
									"id": 1536,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 368,
								"name": "SignalWireStorageContract.delete"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 367,
						"name": "SignalWireStorageContract.delete"
					}
				},
				{
					"id": 1548,
					"name": "deleteMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 130,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L130"
						}
					],
					"signatures": [
						{
							"id": 1549,
							"name": "deleteMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete multiple values from persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Map of keys to deletion results"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 130,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L130"
								}
							],
							"parameters": [
								{
									"id": 1550,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 380,
								"name": "SignalWireStorageContract.deleteMany"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 379,
						"name": "SignalWireStorageContract.deleteMany"
					}
				},
				{
					"id": 1580,
					"name": "deleteManySession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 244,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L244"
						}
					],
					"signatures": [
						{
							"id": 1581,
							"name": "deleteManySession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete multiple values from session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Map of keys to deletion results"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 244,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L244"
								}
							],
							"parameters": [
								{
									"id": 1582,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 408,
								"name": "SignalWireStorageContract.deleteManySession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 407,
						"name": "SignalWireStorageContract.deleteManySession"
					}
				},
				{
					"id": 1566,
					"name": "deleteSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 199,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L199"
						}
					],
					"signatures": [
						{
							"id": 1567,
							"name": "deleteSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a value from session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the item was deleted, false if it didn't exist"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 199,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L199"
								}
							],
							"parameters": [
								{
									"id": 1568,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 396,
								"name": "SignalWireStorageContract.deleteSession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 395,
						"name": "SignalWireStorageContract.deleteSession"
					}
				},
				{
					"id": 1525,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 63,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L63"
						}
					],
					"signatures": [
						{
							"id": 1526,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a value from persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The stored value or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 63,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L63"
								}
							],
							"typeParameters": [
								{
									"id": 1527,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 1528,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 1527,
												"name": "T",
												"package": "@signalwire/client",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 361,
								"name": "SignalWireStorageContract.get"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 360,
						"name": "SignalWireStorageContract.get"
					}
				},
				{
					"id": 1540,
					"name": "getMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 113,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L113"
						}
					],
					"signatures": [
						{
							"id": 1541,
							"name": "getMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get multiple values from persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Map of keys to values (null if not found)"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 113,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L113"
								}
							],
							"typeParameters": [
								{
									"id": 1542,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 1543,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 1542,
														"name": "T",
														"package": "@signalwire/client",
														"refersToTypeParameter": true
													}
												]
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 374,
								"name": "SignalWireStorageContract.getMany"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 373,
						"name": "SignalWireStorageContract.getMany"
					}
				},
				{
					"id": 1572,
					"name": "getManySession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 225,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L225"
						}
					],
					"signatures": [
						{
							"id": 1573,
							"name": "getManySession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get multiple values from session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Map of keys to values (null if not found)"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 225,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L225"
								}
							],
							"typeParameters": [
								{
									"id": 1574,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 1575,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 1574,
														"name": "T",
														"package": "@signalwire/client",
														"refersToTypeParameter": true
													}
												]
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 402,
								"name": "SignalWireStorageContract.getManySession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 401,
						"name": "SignalWireStorageContract.getManySession"
					}
				},
				{
					"id": 1557,
					"name": "getSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 175,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L175"
						}
					],
					"signatures": [
						{
							"id": 1558,
							"name": "getSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a value from session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The stored value or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 175,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L175"
								}
							],
							"typeParameters": [
								{
									"id": 1559,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 1560,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 1559,
												"name": "T",
												"package": "@signalwire/client",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 389,
								"name": "SignalWireStorageContract.getSession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 388,
						"name": "SignalWireStorageContract.getSession"
					}
				},
				{
					"id": 1589,
					"name": "getStorageInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 289,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L289"
						}
					],
					"signatures": [
						{
							"id": 1590,
							"name": "getStorageInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get information about the storage implementation"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Storage information including type and availability"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 289,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L289"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 418,
										"name": "StorageInfo",
										"package": "@signalwire/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 417,
								"name": "SignalWireStorageContract.getStorageInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 416,
						"name": "SignalWireStorageContract.getStorageInfo"
					}
				},
				{
					"id": 1537,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 102,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L102"
						}
					],
					"signatures": [
						{
							"id": 1538,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if a key exists in persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the key exists"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 102,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L102"
								}
							],
							"parameters": [
								{
									"id": 1539,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 371,
								"name": "SignalWireStorageContract.has"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 370,
						"name": "SignalWireStorageContract.has"
					}
				},
				{
					"id": 1569,
					"name": "hasSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 214,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L214"
						}
					],
					"signatures": [
						{
							"id": 1570,
							"name": "hasSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if a key exists in session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the key exists"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 214,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L214"
								}
							],
							"parameters": [
								{
									"id": 1571,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 399,
								"name": "SignalWireStorageContract.hasSession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 398,
						"name": "SignalWireStorageContract.hasSession"
					}
				},
				{
					"id": 1551,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 138,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L138"
						}
					],
					"signatures": [
						{
							"id": 1552,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all keys in persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of matching keys"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 138,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L138"
								}
							],
							"parameters": [
								{
									"id": 1553,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional prefix to filter keys"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 383,
								"name": "SignalWireStorageContract.list"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 382,
						"name": "SignalWireStorageContract.list"
					}
				},
				{
					"id": 1583,
					"name": "listSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 252,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L252"
						}
					],
					"signatures": [
						{
							"id": 1584,
							"name": "listSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all keys in session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of matching keys"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 252,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L252"
								}
							],
							"parameters": [
								{
									"id": 1585,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional prefix to filter keys"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 411,
								"name": "SignalWireStorageContract.listSession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 410,
						"name": "SignalWireStorageContract.listSession"
					}
				},
				{
					"id": 1529,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 75,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L75"
						}
					],
					"signatures": [
						{
							"id": 1530,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set a value in persistent storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 75,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L75"
								}
							],
							"typeParameters": [
								{
									"id": 1531,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 1532,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1533,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to store"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1531,
										"name": "T",
										"package": "@signalwire/client",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 364,
								"name": "SignalWireStorageContract.set"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 363,
						"name": "SignalWireStorageContract.set"
					}
				},
				{
					"id": 1544,
					"name": "setMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 121,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L121"
						}
					],
					"signatures": [
						{
							"id": 1545,
							"name": "setMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set multiple values in persistent storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 121,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L121"
								}
							],
							"typeParameters": [
								{
									"id": 1546,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 1547,
									"name": "entries",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Map or array of key-value pairs"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es2015.collection.d.ts",
													"qualifiedName": "Map"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 1546,
														"name": "T",
														"package": "@signalwire/client",
														"refersToTypeParameter": true
													}
												],
												"name": "Map",
												"package": "typescript"
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "reference",
															"target": 1546,
															"name": "T",
															"package": "@signalwire/client",
															"refersToTypeParameter": true
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 377,
								"name": "SignalWireStorageContract.setMany"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 376,
						"name": "SignalWireStorageContract.setMany"
					}
				},
				{
					"id": 1576,
					"name": "setManySession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 235,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L235"
						}
					],
					"signatures": [
						{
							"id": 1577,
							"name": "setManySession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set multiple values in session storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 235,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L235"
								}
							],
							"typeParameters": [
								{
									"id": 1578,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 1579,
									"name": "entries",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Map or array of key-value pairs"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es2015.collection.d.ts",
													"qualifiedName": "Map"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 1578,
														"name": "T",
														"package": "@signalwire/client",
														"refersToTypeParameter": true
													}
												],
												"name": "Map",
												"package": "typescript"
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "reference",
															"target": 1578,
															"name": "T",
															"package": "@signalwire/client",
															"refersToTypeParameter": true
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 405,
								"name": "SignalWireStorageContract.setManySession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 404,
						"name": "SignalWireStorageContract.setManySession"
					}
				},
				{
					"id": 1561,
					"name": "setSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
							"line": 187,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L187"
						}
					],
					"signatures": [
						{
							"id": 1562,
							"name": "setSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set a value in session storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
									"line": 187,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L187"
								}
							],
							"typeParameters": [
								{
									"id": 1563,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 1564,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1565,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to store"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1563,
										"name": "T",
										"package": "@signalwire/client",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 392,
								"name": "SignalWireStorageContract.setSession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 391,
						"name": "SignalWireStorageContract.setSession"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1506
					]
				},
				{
					"title": "Methods",
					"children": [
						1554,
						1586,
						1534,
						1548,
						1580,
						1566,
						1525,
						1540,
						1572,
						1557,
						1589,
						1537,
						1569,
						1551,
						1583,
						1529,
						1544,
						1576,
						1561
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/storage/LocalStorageAdapter.ts",
					"line": 6,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/storage/LocalStorageAdapter.ts#L6"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 359,
					"name": "SignalWireStorageContract",
					"package": "@signalwire/core"
				}
			]
		},
		{
			"id": 1267,
			"name": "LocalVideoOverlay",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1268,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 72,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L72"
						}
					],
					"signatures": [
						{
							"id": 1269,
							"name": "LocalVideoOverlay",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/VideoOverlays.ts",
									"line": 72,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L72"
								}
							],
							"parameters": [
								{
									"id": 1270,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/client",
											"packagePath": "src/VideoOverlays.ts",
											"qualifiedName": "LocalVideoOverlayOptions"
										},
										"name": "LocalVideoOverlayOptions",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1267,
								"name": "LocalVideoOverlay",
								"package": "@signalwire/client"
							},
							"overwrites": {
								"type": "reference",
								"target": 1313,
								"name": "UserOverlay.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 1312,
						"name": "UserOverlay.constructor"
					}
				},
				{
					"id": 1297,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 15,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1315,
						"name": "UserOverlay.id"
					}
				},
				{
					"id": 1298,
					"name": "domElement",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 28,
							"character": 6,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L28"
						},
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 32,
							"character": 6,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L32"
						}
					],
					"getSignature": {
						"id": 1299,
						"name": "domElement",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isInherited": true
						},
						"sources": [
							{
								"fileName": "packages/client/src/VideoOverlays.ts",
								"line": 28,
								"character": 6,
								"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L28"
							}
						],
						"type": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "undefined"
								},
								{
									"type": "reference",
									"target": {
										"packageName": "typescript",
										"packagePath": "lib/lib.dom.d.ts",
										"qualifiedName": "HTMLDivElement"
									},
									"name": "HTMLDivElement",
									"package": "typescript"
								}
							]
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "UserOverlay.domElement"
						}
					},
					"setSignature": {
						"id": 1300,
						"name": "domElement",
						"variant": "signature",
						"kind": 1048576,
						"flags": {
							"isInherited": true
						},
						"sources": [
							{
								"fileName": "packages/client/src/VideoOverlays.ts",
								"line": 32,
								"character": 6,
								"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L32"
							}
						],
						"parameters": [
							{
								"id": 1301,
								"name": "element",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.dom.d.ts",
												"qualifiedName": "HTMLDivElement"
											},
											"name": "HTMLDivElement",
											"package": "typescript"
										}
									]
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "UserOverlay.domElement"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1320,
						"name": "UserOverlay.domElement"
					}
				},
				{
					"id": 1275,
					"name": "mirrored",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 90,
							"character": 6,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L90"
						}
					],
					"getSignature": {
						"id": 1276,
						"name": "mirrored",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "packages/client/src/VideoOverlays.ts",
								"line": 90,
								"character": 6,
								"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L90"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 1302,
					"name": "status",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 37,
							"character": 6,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L37"
						},
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 41,
							"character": 6,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L41"
						}
					],
					"getSignature": {
						"id": 1303,
						"name": "status",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isInherited": true
						},
						"sources": [
							{
								"fileName": "packages/client/src/VideoOverlays.ts",
								"line": 37,
								"character": 6,
								"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L37"
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"packageName": "@signalwire/client",
								"packagePath": "src/VideoOverlays.ts",
								"qualifiedName": "OverlayStatus"
							},
							"name": "OverlayStatus",
							"package": "@signalwire/client"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "UserOverlay.status"
						}
					},
					"setSignature": {
						"id": 1304,
						"name": "status",
						"variant": "signature",
						"kind": 1048576,
						"flags": {
							"isInherited": true
						},
						"sources": [
							{
								"fileName": "packages/client/src/VideoOverlays.ts",
								"line": 41,
								"character": 6,
								"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L41"
							}
						],
						"parameters": [
							{
								"id": 1305,
								"name": "status",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "reference",
									"target": {
										"packageName": "@signalwire/client",
										"packagePath": "src/VideoOverlays.ts",
										"qualifiedName": "OverlayStatus"
									},
									"name": "OverlayStatus",
									"package": "@signalwire/client"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "UserOverlay.status"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1324,
						"name": "UserOverlay.status"
					}
				},
				{
					"id": 1273,
					"name": "userId",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 86,
							"character": 6,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L86"
						}
					],
					"getSignature": {
						"id": 1274,
						"name": "userId",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "packages/client/src/VideoOverlays.ts",
								"line": 86,
								"character": 6,
								"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L86"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"overwrites": {
							"type": "reference",
							"target": -1,
							"name": "UserOverlay.userId"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": 1318,
						"name": "UserOverlay.userId"
					}
				},
				{
					"id": 1279,
					"name": "detachListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 109,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L109"
						}
					],
					"signatures": [
						{
							"id": 1280,
							"name": "detachListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/VideoOverlays.ts",
									"line": 109,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L109"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1306,
					"name": "hide",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 45,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L45"
						}
					],
					"signatures": [
						{
							"id": 1307,
							"name": "hide",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/client/src/VideoOverlays.ts",
									"line": 45,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L45"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1329,
								"name": "UserOverlay.hide"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 1328,
						"name": "UserOverlay.hide"
					}
				},
				{
					"id": 1291,
					"name": "setMediaStream",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 146,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L146"
						}
					],
					"signatures": [
						{
							"id": 1292,
							"name": "setMediaStream",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/VideoOverlays.ts",
									"line": 146,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L146"
								}
							],
							"parameters": [
								{
									"id": 1293,
									"name": "stream",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStream"
										},
										"name": "MediaStream",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1294,
					"name": "setMirror",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 156,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L156"
						}
					],
					"signatures": [
						{
							"id": 1295,
							"name": "setMirror",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/VideoOverlays.ts",
									"line": 156,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L156"
								}
							],
							"parameters": [
								{
									"id": 1296,
									"name": "mirror",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1308,
					"name": "show",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 53,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L53"
						}
					],
					"signatures": [
						{
							"id": 1309,
							"name": "show",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/client/src/VideoOverlays.ts",
									"line": 53,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1331,
								"name": "UserOverlay.show"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 1330,
						"name": "UserOverlay.show"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1268
					]
				},
				{
					"title": "Properties",
					"children": [
						1297
					]
				},
				{
					"title": "Accessors",
					"children": [
						1298,
						1275,
						1302,
						1273
					]
				},
				{
					"title": "Methods",
					"children": [
						1279,
						1306,
						1291,
						1294,
						1308
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/VideoOverlays.ts",
					"line": 68,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L68"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1311,
					"name": "UserOverlay",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 167,
			"name": "ProfileExistsError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Error types for ClientFactory operations"
					}
				]
			},
			"children": [
				{
					"id": 168,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 381,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L381"
						}
					],
					"signatures": [
						{
							"id": 169,
							"name": "ProfileExistsError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 381,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L381"
								}
							],
							"parameters": [
								{
									"id": 170,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 167,
								"name": "ProfileExistsError",
								"package": "@signalwire/client"
							},
							"overwrites": {
								"type": "reference",
								"target": 149,
								"name": "ClientFactoryError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 148,
						"name": "ClientFactoryError.constructor"
					}
				},
				{
					"id": 171,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 358,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L358"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 153,
						"name": "ClientFactoryError.code"
					}
				},
				{
					"id": 172,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 359,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L359"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 154,
						"name": "ClientFactoryError.context"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						168
					]
				},
				{
					"title": "Properties",
					"children": [
						171,
						172
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 380,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L380"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 147,
					"name": "ClientFactoryError",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 1730,
			"name": "ProfileManager",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Manages authentication profiles for SignalWire client instances.\nHandles both persistent (static) and memory-only (dynamic) profiles."
					}
				]
			},
			"children": [
				{
					"id": 1731,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1732,
							"name": "ProfileManager",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1730,
								"name": "ProfileManager",
								"package": "@signalwire/client"
							}
						}
					]
				},
				{
					"id": 1746,
					"name": "addProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 65,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L65"
						}
					],
					"signatures": [
						{
							"id": 1747,
							"name": "addProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a new profile"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Created profile ID"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 65,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L65"
								}
							],
							"parameters": [
								{
									"id": 1748,
									"name": "profile",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile to add (without id, createdAt, updatedAt, lastUsed)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15,
												"name": "Profile",
												"package": "@signalwire/client"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "id"
													},
													{
														"type": "literal",
														"value": "createdAt"
													},
													{
														"type": "literal",
														"value": "updatedAt"
													},
													{
														"type": "literal",
														"value": "lastUsed"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 79,
								"name": "ProfileManagerContract.addProfile"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 78,
						"name": "ProfileManagerContract.addProfile"
					}
				},
				{
					"id": 1788,
					"name": "cleanup",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 464,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L464"
						}
					],
					"signatures": [
						{
							"id": 1789,
							"name": "cleanup",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Cleanup all timers and resources"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 464,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L464"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1806,
					"name": "createDynamicProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 681,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L681"
						}
					],
					"signatures": [
						{
							"id": 1807,
							"name": "createDynamicProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a dynamic profile for accessing a shared resource"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Created dynamic profile"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 681,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L681"
								}
							],
							"parameters": [
								{
									"id": 1808,
									"name": "parentProfile",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile to inherit credentials from"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15,
										"name": "Profile",
										"package": "@signalwire/client"
									}
								},
								{
									"id": 1809,
									"name": "addressId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address ID for the shared resource"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15,
										"name": "Profile",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 104,
								"name": "ProfileManagerContract.createDynamicProfile"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 103,
						"name": "ProfileManagerContract.createDynamicProfile"
					}
				},
				{
					"id": 1800,
					"name": "findProfileForAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 577,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L577"
						}
					],
					"signatures": [
						{
							"id": 1801,
							"name": "findProfileForAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find a profile that has access to a specific address"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Profile that has access or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 577,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L577"
								}
							],
							"parameters": [
								{
									"id": 1802,
									"name": "addressId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address identifier to search for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 15,
												"name": "Profile",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 98,
								"name": "ProfileManagerContract.findProfileForAddress"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 97,
						"name": "ProfileManagerContract.findProfileForAddress"
					}
				},
				{
					"id": 1756,
					"name": "getProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 184,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L184"
						}
					],
					"signatures": [
						{
							"id": 1757,
							"name": "getProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a profile by ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Profile or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 184,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L184"
								}
							],
							"parameters": [
								{
									"id": 1758,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 15,
												"name": "Profile",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 89,
								"name": "ProfileManagerContract.getProfile"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 88,
						"name": "ProfileManagerContract.getProfile"
					}
				},
				{
					"id": 1803,
					"name": "getProfilesByCredentialId",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 661,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L661"
						}
					],
					"signatures": [
						{
							"id": 1804,
							"name": "getProfilesByCredentialId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get all profiles associated with a credential ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of profiles with the given credential ID"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 661,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L661"
								}
							],
							"parameters": [
								{
									"id": 1805,
									"name": "credentialId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Credential identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15,
											"name": "Profile",
											"package": "@signalwire/client"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 101,
								"name": "ProfileManagerContract.getProfilesByCredentialId"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 100,
						"name": "ProfileManagerContract.getProfilesByCredentialId"
					}
				},
				{
					"id": 1762,
					"name": "hasProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 231,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L231"
						}
					],
					"signatures": [
						{
							"id": 1763,
							"name": "hasProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if a profile exists"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the profile exists"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 231,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L231"
								}
							],
							"parameters": [
								{
									"id": 1764,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 95,
								"name": "ProfileManagerContract.hasProfile"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 94,
						"name": "ProfileManagerContract.hasProfile"
					}
				},
				{
					"id": 1738,
					"name": "init",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 34,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L34"
						}
					],
					"signatures": [
						{
							"id": 1739,
							"name": "init",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initialize the profile manager with storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 34,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L34"
								}
							],
							"parameters": [
								{
									"id": 1740,
									"name": "storage",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Storage implementation for persistent profiles"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 359,
										"name": "SignalWireStorageContract",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 76,
								"name": "ProfileManagerContract.init"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 75,
						"name": "ProfileManagerContract.init"
					}
				},
				{
					"id": 1759,
					"name": "listProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 206,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L206"
						}
					],
					"signatures": [
						{
							"id": 1760,
							"name": "listProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all profiles"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of profiles"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 206,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L206"
								}
							],
							"parameters": [
								{
									"id": 1761,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional filter by profile type"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12,
										"name": "ProfileType",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15,
											"name": "Profile",
											"package": "@signalwire/client"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 92,
								"name": "ProfileManagerContract.listProfiles"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 91,
						"name": "ProfileManagerContract.listProfiles"
					}
				},
				{
					"id": 1776,
					"name": "refreshCredentials",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 328,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L328"
						}
					],
					"signatures": [
						{
							"id": 1777,
							"name": "refreshCredentials",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Refresh credentials for a profile"
									}
								],
								"blockTags": [
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "CredentialRefreshError if refresh fails"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 328,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L328"
								}
							],
							"parameters": [
								{
									"id": 1778,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile ID to refresh credentials for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1753,
					"name": "removeProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 149,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L149"
						}
					],
					"signatures": [
						{
							"id": 1754,
							"name": "removeProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove a profile"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the profile was removed"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 149,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L149"
								}
							],
							"parameters": [
								{
									"id": 1755,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile ID to remove"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 86,
								"name": "ProfileManagerContract.removeProfile"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 85,
						"name": "ProfileManagerContract.removeProfile"
					}
				},
				{
					"id": 1782,
					"name": "scheduleRefresh",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 410,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L410"
						}
					],
					"signatures": [
						{
							"id": 1783,
							"name": "scheduleRefresh",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Schedule automatic credential refresh"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 410,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L410"
								}
							],
							"parameters": [
								{
									"id": 1784,
									"name": "profile",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile to schedule refresh for"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15,
										"name": "Profile",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1749,
					"name": "updateProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 114,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L114"
						}
					],
					"signatures": [
						{
							"id": 1750,
							"name": "updateProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update an existing profile"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the profile was updated"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 114,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L114"
								}
							],
							"parameters": [
								{
									"id": 1751,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile ID to update"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1752,
									"name": "updates",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Partial profile updates"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 15,
														"name": "Profile",
														"package": "@signalwire/client"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "id"
															},
															{
																"type": "literal",
																"value": "createdAt"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 82,
								"name": "ProfileManagerContract.updateProfile"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 81,
						"name": "ProfileManagerContract.updateProfile"
					}
				},
				{
					"id": 1779,
					"name": "validateCredentials",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ProfileManager.ts",
							"line": 375,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L375"
						}
					],
					"signatures": [
						{
							"id": 1780,
							"name": "validateCredentials",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Validate if credentials are still valid"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "true if credentials are valid, false otherwise"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/ProfileManager.ts",
									"line": 375,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L375"
								}
							],
							"parameters": [
								{
									"id": 1781,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile ID to validate"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1731
					]
				},
				{
					"title": "Methods",
					"children": [
						1746,
						1788,
						1806,
						1800,
						1756,
						1803,
						1762,
						1738,
						1759,
						1776,
						1753,
						1782,
						1749,
						1779
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/ProfileManager.ts",
					"line": 22,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ProfileManager.ts#L22"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 74,
					"name": "ProfileManagerContract",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 155,
			"name": "ProfileNotFoundError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Error types for ClientFactory operations"
					}
				]
			},
			"children": [
				{
					"id": 156,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 367,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L367"
						}
					],
					"signatures": [
						{
							"id": 157,
							"name": "ProfileNotFoundError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 367,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L367"
								}
							],
							"parameters": [
								{
									"id": 158,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 155,
								"name": "ProfileNotFoundError",
								"package": "@signalwire/client"
							},
							"overwrites": {
								"type": "reference",
								"target": 149,
								"name": "ClientFactoryError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 148,
						"name": "ClientFactoryError.constructor"
					}
				},
				{
					"id": 159,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 358,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L358"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 153,
						"name": "ClientFactoryError.code"
					}
				},
				{
					"id": 160,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 359,
							"character": 20,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L359"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 154,
						"name": "ClientFactoryError.context"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						156
					]
				},
				{
					"title": "Properties",
					"children": [
						159,
						160
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 366,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L366"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 147,
					"name": "ClientFactoryError",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 1591,
			"name": "StorageWrapper",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A wrapper that adds client-specific prefixing to any storage implementation.\nAll keys are automatically prefixed with "
					},
					{
						"kind": "code",
						"text": "`swcf:${profileId}:`"
					},
					{
						"kind": "text",
						"text": " to ensure isolation\nbetween different client instances."
					}
				]
			},
			"children": [
				{
					"id": 1592,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 1593,
							"name": "StorageWrapper",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new StorageWrapper instance"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L16"
								}
							],
							"parameters": [
								{
									"id": 1594,
									"name": "storage",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The underlying storage implementation (can be undefined)"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 359,
												"name": "SignalWireStorageContract",
												"package": "@signalwire/core"
											}
										]
									}
								},
								{
									"id": 1595,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The client identifier for key prefixing"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1591,
								"name": "StorageWrapper",
								"package": "@signalwire/client"
							}
						}
					]
				},
				{
					"id": 1632,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 156,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L156"
						}
					],
					"signatures": [
						{
							"id": 1633,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear all items from persistent storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 156,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L156"
								}
							],
							"parameters": [
								{
									"id": 1634,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional prefix to only clear matching keys"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 386,
								"name": "SignalWireStorageContract.clear"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 385,
						"name": "SignalWireStorageContract.clear"
					}
				},
				{
					"id": 1660,
					"name": "clearSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 272,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L272"
						}
					],
					"signatures": [
						{
							"id": 1661,
							"name": "clearSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear all items from session storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 272,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L272"
								}
							],
							"parameters": [
								{
									"id": 1662,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional prefix to only clear matching keys"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 414,
								"name": "SignalWireStorageContract.clearSession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 413,
						"name": "SignalWireStorageContract.clearSession"
					}
				},
				{
					"id": 1614,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 60,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L60"
						}
					],
					"signatures": [
						{
							"id": 1615,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a value from persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the item was deleted, false if it didn't exist"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 60,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L60"
								}
							],
							"parameters": [
								{
									"id": 1616,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 368,
								"name": "SignalWireStorageContract.delete"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 367,
						"name": "SignalWireStorageContract.delete"
					}
				},
				{
					"id": 1626,
					"name": "deleteMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 116,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L116"
						}
					],
					"signatures": [
						{
							"id": 1627,
							"name": "deleteMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete multiple values from persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Map of keys to deletion results"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 116,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L116"
								}
							],
							"parameters": [
								{
									"id": 1628,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 380,
								"name": "SignalWireStorageContract.deleteMany"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 379,
						"name": "SignalWireStorageContract.deleteMany"
					}
				},
				{
					"id": 1654,
					"name": "deleteManySession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 232,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L232"
						}
					],
					"signatures": [
						{
							"id": 1655,
							"name": "deleteManySession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete multiple values from session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Map of keys to deletion results"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 232,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L232"
								}
							],
							"parameters": [
								{
									"id": 1656,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 408,
								"name": "SignalWireStorageContract.deleteManySession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 407,
						"name": "SignalWireStorageContract.deleteManySession"
					}
				},
				{
					"id": 1642,
					"name": "deleteSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 176,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L176"
						}
					],
					"signatures": [
						{
							"id": 1643,
							"name": "deleteSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a value from session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the item was deleted, false if it didn't exist"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 176,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L176"
								}
							],
							"parameters": [
								{
									"id": 1644,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 396,
								"name": "SignalWireStorageContract.deleteSession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 395,
						"name": "SignalWireStorageContract.deleteSession"
					}
				},
				{
					"id": 1607,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 48,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 1608,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a value from persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The stored value or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 48,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L48"
								}
							],
							"parameters": [
								{
									"id": 1609,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 361,
								"name": "SignalWireStorageContract.get"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 360,
						"name": "SignalWireStorageContract.get"
					}
				},
				{
					"id": 1620,
					"name": "getMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 70,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L70"
						}
					],
					"signatures": [
						{
							"id": 1621,
							"name": "getMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get multiple values from persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Map of keys to values (null if not found)"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 70,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L70"
								}
							],
							"parameters": [
								{
									"id": 1622,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 374,
								"name": "SignalWireStorageContract.getMany"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 373,
						"name": "SignalWireStorageContract.getMany"
					}
				},
				{
					"id": 1648,
					"name": "getManySession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 186,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L186"
						}
					],
					"signatures": [
						{
							"id": 1649,
							"name": "getManySession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get multiple values from session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Map of keys to values (null if not found)"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 186,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L186"
								}
							],
							"parameters": [
								{
									"id": 1650,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 402,
								"name": "SignalWireStorageContract.getManySession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 401,
						"name": "SignalWireStorageContract.getManySession"
					}
				},
				{
					"id": 1635,
					"name": "getSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 164,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L164"
						}
					],
					"signatures": [
						{
							"id": 1636,
							"name": "getSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a value from session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The stored value or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 164,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L164"
								}
							],
							"parameters": [
								{
									"id": 1637,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 389,
								"name": "SignalWireStorageContract.getSession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 388,
						"name": "SignalWireStorageContract.getSession"
					}
				},
				{
					"id": 1663,
					"name": "getStorageInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 280,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L280"
						}
					],
					"signatures": [
						{
							"id": 1664,
							"name": "getStorageInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get information about the storage implementation"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Storage information including type and availability"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 280,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L280"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 418,
										"name": "StorageInfo",
										"package": "@signalwire/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 417,
								"name": "SignalWireStorageContract.getStorageInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 416,
						"name": "SignalWireStorageContract.getStorageInfo"
					}
				},
				{
					"id": 1617,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 65,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L65"
						}
					],
					"signatures": [
						{
							"id": 1618,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if a key exists in persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the key exists"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 65,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L65"
								}
							],
							"parameters": [
								{
									"id": 1619,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 371,
								"name": "SignalWireStorageContract.has"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 370,
						"name": "SignalWireStorageContract.has"
					}
				},
				{
					"id": 1645,
					"name": "hasSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 181,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L181"
						}
					],
					"signatures": [
						{
							"id": 1646,
							"name": "hasSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if a key exists in session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the key exists"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 181,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L181"
								}
							],
							"parameters": [
								{
									"id": 1647,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 399,
								"name": "SignalWireStorageContract.hasSession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 398,
						"name": "SignalWireStorageContract.hasSession"
					}
				},
				{
					"id": 1629,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 145,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L145"
						}
					],
					"signatures": [
						{
							"id": 1630,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all keys in persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of matching keys"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 145,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L145"
								}
							],
							"parameters": [
								{
									"id": 1631,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional prefix to filter keys"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 383,
								"name": "SignalWireStorageContract.list"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 382,
						"name": "SignalWireStorageContract.list"
					}
				},
				{
					"id": 1657,
					"name": "listSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 261,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L261"
						}
					],
					"signatures": [
						{
							"id": 1658,
							"name": "listSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all keys in session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of matching keys"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 261,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L261"
								}
							],
							"parameters": [
								{
									"id": 1659,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional prefix to filter keys"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 411,
								"name": "SignalWireStorageContract.listSession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 410,
						"name": "SignalWireStorageContract.listSession"
					}
				},
				{
					"id": 1610,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 53,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L53"
						}
					],
					"signatures": [
						{
							"id": 1611,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set a value in persistent storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 53,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L53"
								}
							],
							"parameters": [
								{
									"id": 1612,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1613,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to store"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 364,
								"name": "SignalWireStorageContract.set"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 363,
						"name": "SignalWireStorageContract.set"
					}
				},
				{
					"id": 1623,
					"name": "setMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 99,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L99"
						}
					],
					"signatures": [
						{
							"id": 1624,
							"name": "setMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set multiple values in persistent storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 99,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L99"
								}
							],
							"parameters": [
								{
									"id": 1625,
									"name": "entries",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Map or array of key-value pairs"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es2015.collection.d.ts",
													"qualifiedName": "Map"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Map",
												"package": "typescript"
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 377,
								"name": "SignalWireStorageContract.setMany"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 376,
						"name": "SignalWireStorageContract.setMany"
					}
				},
				{
					"id": 1651,
					"name": "setManySession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 215,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L215"
						}
					],
					"signatures": [
						{
							"id": 1652,
							"name": "setManySession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set multiple values in session storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 215,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L215"
								}
							],
							"parameters": [
								{
									"id": 1653,
									"name": "entries",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Map or array of key-value pairs"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es2015.collection.d.ts",
													"qualifiedName": "Map"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Map",
												"package": "typescript"
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 405,
								"name": "SignalWireStorageContract.setManySession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 404,
						"name": "SignalWireStorageContract.setManySession"
					}
				},
				{
					"id": 1638,
					"name": "setSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
							"line": 169,
							"character": 8,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L169"
						}
					],
					"signatures": [
						{
							"id": 1639,
							"name": "setSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set a value in session storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
									"line": 169,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L169"
								}
							],
							"parameters": [
								{
									"id": 1640,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1641,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to store"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 392,
								"name": "SignalWireStorageContract.setSession"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 391,
						"name": "SignalWireStorageContract.setSession"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1592
					]
				},
				{
					"title": "Methods",
					"children": [
						1632,
						1660,
						1614,
						1626,
						1654,
						1642,
						1607,
						1620,
						1648,
						1635,
						1663,
						1617,
						1645,
						1629,
						1657,
						1610,
						1623,
						1651,
						1638
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/utils/StorageWrapper.ts",
					"line": 8,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/utils/StorageWrapper.ts#L8"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 359,
					"name": "SignalWireStorageContract",
					"package": "@signalwire/core"
				}
			]
		},
		{
			"id": 1311,
			"name": "UserOverlay",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1312,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L19"
						}
					],
					"signatures": [
						{
							"id": 1313,
							"name": "UserOverlay",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/VideoOverlays.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L19"
								}
							],
							"parameters": [
								{
									"id": 1314,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/client",
											"packagePath": "src/VideoOverlays.ts",
											"qualifiedName": "UserOverlayOptions"
										},
										"name": "UserOverlayOptions",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1311,
								"name": "UserOverlay",
								"package": "@signalwire/client"
							}
						}
					]
				},
				{
					"id": 1315,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 15,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1320,
					"name": "domElement",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 28,
							"character": 6,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L28"
						},
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 32,
							"character": 6,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L32"
						}
					],
					"getSignature": {
						"id": 1321,
						"name": "domElement",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "packages/client/src/VideoOverlays.ts",
								"line": 28,
								"character": 6,
								"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L28"
							}
						],
						"type": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "undefined"
								},
								{
									"type": "reference",
									"target": {
										"packageName": "typescript",
										"packagePath": "lib/lib.dom.d.ts",
										"qualifiedName": "HTMLDivElement"
									},
									"name": "HTMLDivElement",
									"package": "typescript"
								}
							]
						}
					},
					"setSignature": {
						"id": 1322,
						"name": "domElement",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"sources": [
							{
								"fileName": "packages/client/src/VideoOverlays.ts",
								"line": 32,
								"character": 6,
								"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L32"
							}
						],
						"parameters": [
							{
								"id": 1323,
								"name": "element",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.dom.d.ts",
												"qualifiedName": "HTMLDivElement"
											},
											"name": "HTMLDivElement",
											"package": "typescript"
										}
									]
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 1324,
					"name": "status",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 37,
							"character": 6,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L37"
						},
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 41,
							"character": 6,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L41"
						}
					],
					"getSignature": {
						"id": 1325,
						"name": "status",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "packages/client/src/VideoOverlays.ts",
								"line": 37,
								"character": 6,
								"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L37"
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"packageName": "@signalwire/client",
								"packagePath": "src/VideoOverlays.ts",
								"qualifiedName": "OverlayStatus"
							},
							"name": "OverlayStatus",
							"package": "@signalwire/client"
						}
					},
					"setSignature": {
						"id": 1326,
						"name": "status",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"sources": [
							{
								"fileName": "packages/client/src/VideoOverlays.ts",
								"line": 41,
								"character": 6,
								"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L41"
							}
						],
						"parameters": [
							{
								"id": 1327,
								"name": "status",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "reference",
									"target": {
										"packageName": "@signalwire/client",
										"packagePath": "src/VideoOverlays.ts",
										"qualifiedName": "OverlayStatus"
									},
									"name": "OverlayStatus",
									"package": "@signalwire/client"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 1318,
					"name": "userId",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 24,
							"character": 6,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L24"
						}
					],
					"getSignature": {
						"id": 1319,
						"name": "userId",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "packages/client/src/VideoOverlays.ts",
								"line": 24,
								"character": 6,
								"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L24"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1328,
					"name": "hide",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 45,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L45"
						}
					],
					"signatures": [
						{
							"id": 1329,
							"name": "hide",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/VideoOverlays.ts",
									"line": 45,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L45"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1330,
					"name": "show",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/VideoOverlays.ts",
							"line": 53,
							"character": 9,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L53"
						}
					],
					"signatures": [
						{
							"id": 1331,
							"name": "show",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/VideoOverlays.ts",
									"line": 53,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1312
					]
				},
				{
					"title": "Properties",
					"children": [
						1315
					]
				},
				{
					"title": "Accessors",
					"children": [
						1320,
						1324,
						1318
					]
				},
				{
					"title": "Methods",
					"children": [
						1328,
						1330
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/VideoOverlays.ts",
					"line": 14,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L14"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1267,
					"name": "LocalVideoOverlay"
				}
			]
		},
		{
			"id": 37,
			"name": "AddProfilesParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters for adding profiles"
					}
				]
			},
			"children": [
				{
					"id": 38,
					"name": "profiles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 94,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L94"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"packageName": "typescript",
								"packagePath": "lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 15,
									"name": "Profile",
									"package": "@signalwire/client"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "id"
										},
										{
											"type": "literal",
											"value": "createdAt"
										},
										{
											"type": "literal",
											"value": "updatedAt"
										},
										{
											"type": "literal",
											"value": "lastUsed"
										},
										{
											"type": "literal",
											"value": "addressId"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 93,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L93"
				}
			]
		},
		{
			"id": 193,
			"name": "BaseComponentOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 208,
					"name": "customSagas",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 148,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L148"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"packageName": "@signalwire/core",
								"packagePath": "src/redux/interfaces.ts",
								"qualifiedName": "CustomSaga"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "CustomSaga",
							"package": "@signalwire/core"
						}
					}
				},
				{
					"id": 194,
					"name": "store",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 147,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L147"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 195,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 205,
									"name": "channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/core/src/redux/index.ts",
											"line": 103,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/redux/index.ts#L103"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/utils/interfaces.ts",
											"qualifiedName": "InternalChannels"
										},
										"name": "InternalChannels",
										"package": "@signalwire/core"
									}
								},
								{
									"id": 206,
									"name": "instanceMap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/core/src/redux/index.ts",
											"line": 104,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/redux/index.ts#L104"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/utils/interfaces.ts",
											"qualifiedName": "InstanceMap"
										},
										"name": "InstanceMap",
										"package": "@signalwire/core"
									}
								},
								{
									"id": 196,
									"name": "runSaga",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/core/src/redux/index.ts",
											"line": 102,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/redux/index.ts#L102"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 197,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/core/src/redux/index.ts",
													"line": 77,
													"character": 18,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/redux/index.ts#L77"
												}
											],
											"signatures": [
												{
													"id": 198,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/core/src/redux/index.ts",
															"line": 77,
															"character": 18,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/redux/index.ts#L77"
														}
													],
													"typeParameters": [
														{
															"id": 199,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 200,
															"name": "saga",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "@redux-saga/types",
																	"packagePath": "types/ts3.6/index.d.ts",
																	"qualifiedName": "Saga"
																},
																"name": "Saga",
																"package": "@redux-saga/types"
															}
														},
														{
															"id": 201,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 202,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 203,
																			"name": "instance",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/core/src/redux/index.ts",
																					"line": 80,
																					"character": 6,
																					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/redux/index.ts#L80"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 199,
																				"name": "T",
																				"package": "@signalwire/core",
																				"refersToTypeParameter": true
																			}
																		},
																		{
																			"id": 204,
																			"name": "runSaga",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/core/src/redux/index.ts",
																					"line": 81,
																					"character": 6,
																					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/redux/index.ts#L81"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				203,
																				204
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/core/src/redux/index.ts",
																			"line": 79,
																			"character": 10,
																			"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/redux/index.ts#L79"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@redux-saga/types",
															"packagePath": "types/ts3.6/index.d.ts",
															"qualifiedName": "Task"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Task",
														"package": "@redux-saga/types"
													}
												}
											]
										}
									}
								},
								{
									"id": 207,
									"name": "sessionEmitter",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/core/src/redux/index.ts",
											"line": 105,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/redux/index.ts#L105"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "eventemitter3",
											"packagePath": "index.d.ts",
											"qualifiedName": "EventEmitter"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 210,
												"name": "ClientEvents",
												"package": "@signalwire/core"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "EventEmitter",
										"package": "eventemitter3"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										205,
										206,
										196,
										207
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/redux/index.ts",
									"line": 100,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/redux/index.ts#L100"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						208,
						194
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/utils/interfaces.ts",
					"line": 146,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L146"
				}
			]
		},
		{
			"id": 602,
			"name": "CallCapabilitiesContract",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 610,
					"name": "device",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 605,
					"name": "end",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 609,
					"name": "lock",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L27"
						}
					],
					"type": {
						"type": "reference",
						"target": 587,
						"name": "CapabilityOnOffStateContract",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 604,
					"name": "member",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 22,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L22"
						}
					],
					"type": {
						"type": "reference",
						"target": 590,
						"name": "MemberCapabilityContract",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 611,
					"name": "screenshare",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 603,
					"name": "self",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 21,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L21"
						}
					],
					"type": {
						"type": "reference",
						"target": 590,
						"name": "MemberCapabilityContract",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 607,
					"name": "sendDigit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 606,
					"name": "setLayout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 24,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 608,
					"name": "vmutedHide",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 26,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L26"
						}
					],
					"type": {
						"type": "reference",
						"target": 587,
						"name": "CapabilityOnOffStateContract",
						"package": "@signalwire/client"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						610,
						605,
						609,
						604,
						611,
						603,
						607,
						606,
						608
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
					"line": 20,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L20"
				}
			]
		},
		{
			"id": 300,
			"name": "CallConnectEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "call.connect"
					}
				]
			},
			"children": [
				{
					"id": 302,
					"name": "call_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 718,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L718"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 301,
					"name": "connect_state",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 717,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L717"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/fabricRoomSession.ts",
							"qualifiedName": "CallConnectStates"
						},
						"name": "CallConnectStates",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 303,
					"name": "node_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 719,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L719"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 306,
					"name": "peer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 722,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L722"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 307,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 308,
									"name": "call_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/core/src/types/fabricRoomSession.ts",
											"line": 723,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L723"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 310,
									"name": "device",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/core/src/types/fabricRoomSession.ts",
											"line": 725,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L725"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/fabricRoomSession.ts",
											"qualifiedName": "CallDevice"
										},
										"name": "CallDevice",
										"package": "@signalwire/core"
									}
								},
								{
									"id": 309,
									"name": "node_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/core/src/types/fabricRoomSession.ts",
											"line": 724,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L724"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										308,
										310,
										309
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 722,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L722"
								}
							]
						}
					}
				},
				{
					"id": 305,
					"name": "room_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 721,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L721"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 304,
					"name": "segment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 720,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L720"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						302,
						301,
						303,
						306,
						305,
						304
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricRoomSession.ts",
					"line": 716,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L716"
				}
			]
		},
		{
			"id": 331,
			"name": "CallLayoutChangedEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "layout.changed"
					}
				]
			},
			"children": [
				{
					"id": 334,
					"name": "layout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricLayout.ts",
							"line": 18,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricLayout.ts#L18"
						}
					],
					"type": {
						"type": "reference",
						"target": 266,
						"name": "InternalVideoLayout",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 332,
					"name": "room_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricLayout.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricLayout.ts#L16"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 333,
					"name": "room_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricLayout.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricLayout.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						334,
						332,
						333
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricLayout.ts",
					"line": 15,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricLayout.ts#L15"
				}
			]
		},
		{
			"id": 275,
			"name": "CallLeftEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "call.left"
					}
				]
			},
			"children": [
				{
					"id": 279,
					"name": "call_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 665,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L665"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 280,
					"name": "member_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 666,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L666"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 281,
					"name": "origin_call_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 667,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L667"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 282,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 668,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L668"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 277,
					"name": "room_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 663,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L663"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 276,
					"name": "room_session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 662,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L662"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/fabricRoomSession.ts",
							"qualifiedName": "InternalCallSessionEntity"
						},
						"name": "InternalCallSessionEntity",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 278,
					"name": "room_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 664,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L664"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						279,
						280,
						281,
						282,
						277,
						276,
						278
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricRoomSession.ts",
					"line": 661,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L661"
				}
			]
		},
		{
			"id": 294,
			"name": "CallPlayEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "call.play"
					}
				]
			},
			"children": [
				{
					"id": 296,
					"name": "call_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 702,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L702"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 295,
					"name": "control_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 701,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L701"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 297,
					"name": "node_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 703,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L703"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 299,
					"name": "room_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 705,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L705"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 298,
					"name": "state",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 704,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L704"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/fabricRoomSession.ts",
							"qualifiedName": "CallPlayState"
						},
						"name": "CallPlayState",
						"package": "@signalwire/core"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						296,
						295,
						297,
						299,
						298
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricRoomSession.ts",
					"line": 700,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L700"
				}
			]
		},
		{
			"id": 1332,
			"name": "CallSession",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1431,
					"name": "active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the connection is currently active"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 107,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L107"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.active"
					}
				},
				{
					"id": 1429,
					"name": "callId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The underlying connection id - callId"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 103,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L103"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.callId"
					}
				},
				{
					"id": 1418,
					"name": "cameraConstraints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The constraints applied to the video device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 73,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L73"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackConstraints"
								},
								"name": "MediaTrackConstraints",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.cameraConstraints"
					}
				},
				{
					"id": 1416,
					"name": "cameraId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the video device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 69,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L69"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.cameraId"
					}
				},
				{
					"id": 1417,
					"name": "cameraLabel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the video device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 71,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L71"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.cameraLabel"
					}
				},
				{
					"id": 1334,
					"name": "currentLayout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The layout returned from the "
							},
							{
								"kind": "code",
								"text": "`layout.changed`"
							},
							{
								"kind": "text",
								"text": " event based on the current room layout"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/fabric.ts",
							"line": 210,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L210"
						}
					],
					"type": {
						"type": "reference",
						"target": 266,
						"name": "InternalVideoLayout",
						"package": "@signalwire/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionContract.currentLayout"
					}
				},
				{
					"id": 1333,
					"name": "currentLayoutEvent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`layout.changed`"
							},
							{
								"kind": "text",
								"text": " event based on the current room layout"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/fabric.ts",
							"line": 208,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L208"
						}
					],
					"type": {
						"type": "reference",
						"target": 331,
						"name": "CallLayoutChangedEventParams",
						"package": "@signalwire/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionContract.currentLayoutEvent"
					}
				},
				{
					"id": 1335,
					"name": "currentPosition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current position of the member returned from the "
							},
							{
								"kind": "code",
								"text": "`layout.changed`"
							},
							{
								"kind": "text",
								"text": " event"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/fabric.ts",
							"line": 212,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L212"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": 269,
								"name": "VideoPosition",
								"package": "@signalwire/core"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionContract.currentPosition"
					}
				},
				{
					"id": 1401,
					"name": "getMemberOverlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Return the member overlay on top of the root element"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/base.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L25"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1402,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/base.ts",
									"line": 25,
									"character": 20,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L25"
								}
							],
							"signatures": [
								{
									"id": 1403,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/base.ts",
											"line": 25,
											"character": 20,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L25"
										}
									],
									"parameters": [
										{
											"id": 1404,
											"name": "memberId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 1311,
												"name": "UserOverlay",
												"package": "@signalwire/client"
											}
										]
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseRoomSessionContract.getMemberOverlay"
					}
				},
				{
					"id": 1413,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Unique id for this room session"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 61,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L61"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.id"
					}
				},
				{
					"id": 1415,
					"name": "leaveReason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 66,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L66"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "literal",
								"value": "RECONNECTION_ATTEMPT_TIMEOUT"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.leaveReason"
					}
				},
				{
					"id": 1422,
					"name": "localAudioTrack",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides access to the local audio\n[MediaStreamTrack](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack)."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 84,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L84"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaStreamTrack"
								},
								"name": "MediaStreamTrack",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.localAudioTrack"
					}
				},
				{
					"id": 1419,
					"name": "localStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides access to the local [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 75,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L75"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaStream"
								},
								"name": "MediaStream",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.localStream"
					}
				},
				{
					"id": 1397,
					"name": "localVideoOverlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Local video overlay object that the SDK injects in the DOM element inside the MCU"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/base.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L13"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": 1267,
								"name": "LocalVideoOverlay",
								"package": "@signalwire/client"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseRoomSessionContract.localVideoOverlay"
					}
				},
				{
					"id": 1423,
					"name": "localVideoTrack",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides access to the local video\n[MediaStreamTrack](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack)."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 89,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L89"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaStreamTrack"
								},
								"name": "MediaStreamTrack",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.localVideoTrack"
					}
				},
				{
					"id": 1432,
					"name": "memberId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the current member within the room"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 109,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L109"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.memberId"
					}
				},
				{
					"id": 1426,
					"name": "microphoneConstraints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The constraints applied to the audio input device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 95,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L95"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackConstraints"
								},
								"name": "MediaTrackConstraints",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.microphoneConstraints"
					}
				},
				{
					"id": 1424,
					"name": "microphoneId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the audio input device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 91,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L91"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.microphoneId"
					}
				},
				{
					"id": 1425,
					"name": "microphoneLabel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the audio input device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 93,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L93"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.microphoneLabel"
					}
				},
				{
					"id": 1414,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The BaseConnection options"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 63,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L63"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.options"
					}
				},
				{
					"id": 1396,
					"name": "overlayMap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A JS Map containing all the layers on top of the Root Element"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/base.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L9"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": 1310,
								"name": "OverlayMap",
								"package": "@signalwire/client"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseRoomSessionContract.overlayMap"
					}
				},
				{
					"id": 1433,
					"name": "previewUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The preview_url for the room. Only with \"enable_room_previews: true\" on Room configuration."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 111,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L111"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.previewUrl"
					}
				},
				{
					"id": 1427,
					"name": "remoteStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides access to the remote [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 99,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L99"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaStream"
								},
								"name": "MediaStream",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.remoteStream"
					}
				},
				{
					"id": 1428,
					"name": "roomId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the room"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 101,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L101"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.roomId"
					}
				},
				{
					"id": 1430,
					"name": "roomSessionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the room session"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 105,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L105"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.roomSessionId"
					}
				},
				{
					"id": 1398,
					"name": "screenShareList",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of screen share objects"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/base.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L17"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1021,
							"name": "RoomSessionScreenShare",
							"package": "@signalwire/client"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseRoomSessionContract.screenShareList"
					}
				},
				{
					"id": 1420,
					"name": "withAudio",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if there is any receiving audio"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 77,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L77"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.withAudio"
					}
				},
				{
					"id": 1421,
					"name": "withVideo",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if there is any receiving video"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 79,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L79"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.withVideo"
					}
				},
				{
					"id": 1338,
					"name": "answer",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/fabric.ts",
							"line": 231,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L231"
						}
					],
					"signatures": [
						{
							"id": 1339,
							"name": "answer",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Answers the incoming call and starts the WebRTC connection\n\n@example:\n"
									},
									{
										"kind": "code",
										"text": "```typescript\nawait call.answer()\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/fabric.ts",
									"line": 231,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L231"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionContract.answer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionContract.answer"
					}
				},
				{
					"id": 1343,
					"name": "audioMute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 135,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L135"
						}
					],
					"signatures": [
						{
							"id": 1344,
							"name": "audioMute",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Puts the microphone on mute. The other participants will not hear audio\nfrom the muted participant anymore. You can use this method to mute\neither yourself or another participant in the room."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.audio_mute`"
											},
											{
												"kind": "text",
												"text": ": to mute a local device\n - "
											},
											{
												"kind": "code",
												"text": "`room.member.audio_mute`"
											},
											{
												"kind": "text",
												"text": ": to mute a remote member"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Muting your own microphone:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.audioMute()\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Muting the microphone of another participant:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst id = 'de550c0c-3fac-4efd-b06f-b5b8614b8966'  // you can get this from getMembers()\nawait room.audioMute({memberId: id})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 135,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L135"
								}
							],
							"parameters": [
								{
									"id": 1345,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/common.ts",
											"qualifiedName": "MemberCommandParams"
										},
										"name": "MemberCommandParams",
										"package": "@signalwire/core",
										"highlightedProperties": {
											"memberId": [
												{
													"kind": "text",
													"text": "id of the member to mute. If omitted, mutes the\ndefault device in the local client."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.audioMute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.audioMute"
					}
				},
				{
					"id": 1346,
					"name": "audioUnmute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 158,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L158"
						}
					],
					"signatures": [
						{
							"id": 1347,
							"name": "audioUnmute",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unmutes the microphone if it had been previously muted. You can use this\nmethod to unmute either yourself or another participant in the room."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.audio_unmute`"
											},
											{
												"kind": "text",
												"text": ": to unmute a local device\n - "
											},
											{
												"kind": "code",
												"text": "`room.member.audio_unmute`"
											},
											{
												"kind": "text",
												"text": ": to unmute a remote member"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Unmuting your own microphone:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.audioUnmute()\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Unmuting the microphone of another participant:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst id = 'de550c0c-3fac-4efd-b06f-b5b8614b8966'  // you can get this from getMembers()\nawait room.audioUnmute({memberId: id})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 158,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L158"
								}
							],
							"parameters": [
								{
									"id": 1348,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/common.ts",
											"qualifiedName": "MemberCommandParams"
										},
										"name": "MemberCommandParams",
										"package": "@signalwire/core",
										"highlightedProperties": {
											"memberId": [
												{
													"kind": "text",
													"text": "id of the member to unmute. If omitted, unmutes\nthe default device in the local client."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.audioUnmute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.audioUnmute"
					}
				},
				{
					"id": 1363,
					"name": "deaf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 304,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L304"
						}
					],
					"signatures": [
						{
							"id": 1364,
							"name": "deaf",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutes the incoming audio. The affected participant will not hear audio\nfrom the other participants anymore. You can use this method to make deaf\neither yourself or another participant in the room.\n\nNote that in addition to making a participant deaf, this will also\nautomatically mute the microphone of the target participant (even if\nthere is no "
									},
									{
										"kind": "code",
										"text": "`audio_mute`"
									},
									{
										"kind": "text",
										"text": " permission). If you want, you can then manually\nunmute it by calling "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "audioUnmute",
										"target": 1346
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.deaf`"
											},
											{
												"kind": "text",
												"text": ": to make yourself deaf\n - "
											},
											{
												"kind": "code",
												"text": "`room.member.deaf`"
											},
											{
												"kind": "text",
												"text": ": to make deaf a remote member"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Making yourself deaf:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.deaf()\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Making another participant deaf:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst id = 'de550c0c-3fac-4efd-b06f-b5b8614b8966'  // you can get this from getMembers()\nawait room.deaf({memberId: id})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 304,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L304"
								}
							],
							"parameters": [
								{
									"id": 1365,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/common.ts",
											"qualifiedName": "MemberCommandParams"
										},
										"name": "MemberCommandParams",
										"package": "@signalwire/core",
										"highlightedProperties": {
											"memberId": [
												{
													"kind": "text",
													"text": "id of the member to affect. If omitted, affects\nthe default device in the local client."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.deaf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.deaf"
					}
				},
				{
					"id": 1500,
					"name": "destroy",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 54,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L54"
						}
					],
					"signatures": [
						{
							"id": 1501,
							"name": "destroy",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This only destroys the JavaScript object: it has no\neffect on the server-side room."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L54"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseComponentContract.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseComponentContract.destroy"
					}
				},
				{
					"id": 1495,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 1496,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 43,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L43"
								}
							],
							"typeParameters": [
								{
									"id": 1497,
									"name": "E",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomDevice.ts",
													"qualifiedName": "VideoRoomDeviceUpdatedEventNames"
												},
												"name": "VideoRoomDeviceUpdatedEventNames",
												"package": "@signalwire/core"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomDevice.ts",
													"qualifiedName": "VideoRoomDeviceDisconnectedEventNames"
												},
												"name": "VideoRoomDeviceDisconnectedEventNames",
												"package": "@signalwire/core"
											},
											{
												"type": "literal",
												"value": "layout.changed"
											},
											{
												"type": "literal",
												"value": "member.joined"
											},
											{
												"type": "literal",
												"value": "member.left"
											},
											{
												"type": "literal",
												"value": "member.updated"
											},
											{
												"type": "literal",
												"value": "member.updated.visible"
											},
											{
												"type": "literal",
												"value": "member.updated.deaf"
											},
											{
												"type": "literal",
												"value": "member.updated.audioMuted"
											},
											{
												"type": "literal",
												"value": "member.updated.videoMuted"
											},
											{
												"type": "literal",
												"value": "member.updated.inputVolume"
											},
											{
												"type": "literal",
												"value": "member.updated.outputVolume"
											},
											{
												"type": "literal",
												"value": "member.updated.inputSensitivity"
											},
											{
												"type": "literal",
												"value": "member.talking"
											},
											{
												"type": "literal",
												"value": "memberList.updated"
											},
											{
												"type": "literal",
												"value": "room.subscribed"
											},
											{
												"type": "literal",
												"value": "room.updated"
											},
											{
												"type": "literal",
												"value": "room.joined"
											},
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "literal",
												"value": "track"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											},
											{
												"type": "literal",
												"value": "call.joined"
											},
											{
												"type": "literal",
												"value": "call.updated"
											},
											{
												"type": "literal",
												"value": "call.left"
											},
											{
												"type": "literal",
												"value": "call.state"
											},
											{
												"type": "literal",
												"value": "call.play"
											},
											{
												"type": "literal",
												"value": "call.connect"
											},
											{
												"type": "literal",
												"value": "call.room"
											},
											{
												"type": "literal",
												"value": "member.updated.handraised"
											},
											{
												"type": "literal",
												"value": "member.updated.echoCancellation"
											},
											{
												"type": "literal",
												"value": "member.updated.autoGain"
											},
											{
												"type": "literal",
												"value": "member.updated.noiseSuppression"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1498,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 236,
										"name": "E",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1499,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Extract"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 236,
													"name": "E",
													"package": "@signalwire/core",
													"refersToTypeParameter": true
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"packageName": "@signalwire/core",
																"packagePath": "src/types/videoRoomDevice.ts",
																"qualifiedName": "VideoRoomDeviceUpdatedEventNames"
															},
															"name": "VideoRoomDeviceUpdatedEventNames",
															"package": "@signalwire/core"
														},
														{
															"type": "reference",
															"target": {
																"packageName": "@signalwire/core",
																"packagePath": "src/types/videoRoomDevice.ts",
																"qualifiedName": "VideoRoomDeviceDisconnectedEventNames"
															},
															"name": "VideoRoomDeviceDisconnectedEventNames",
															"package": "@signalwire/core"
														},
														{
															"type": "literal",
															"value": "layout.changed"
														},
														{
															"type": "literal",
															"value": "member.joined"
														},
														{
															"type": "literal",
															"value": "member.left"
														},
														{
															"type": "literal",
															"value": "member.updated"
														},
														{
															"type": "literal",
															"value": "member.updated.visible"
														},
														{
															"type": "literal",
															"value": "member.updated.deaf"
														},
														{
															"type": "literal",
															"value": "member.updated.audioMuted"
														},
														{
															"type": "literal",
															"value": "member.updated.videoMuted"
														},
														{
															"type": "literal",
															"value": "member.updated.inputVolume"
														},
														{
															"type": "literal",
															"value": "member.updated.outputVolume"
														},
														{
															"type": "literal",
															"value": "member.updated.inputSensitivity"
														},
														{
															"type": "literal",
															"value": "member.talking"
														},
														{
															"type": "literal",
															"value": "memberList.updated"
														},
														{
															"type": "literal",
															"value": "room.subscribed"
														},
														{
															"type": "literal",
															"value": "room.updated"
														},
														{
															"type": "literal",
															"value": "room.joined"
														},
														{
															"type": "literal",
															"value": "room.left"
														},
														{
															"type": "reference",
															"target": {
																"packageName": "@signalwire/webrtc",
																"packagePath": "src/utils/interfaces.ts",
																"qualifiedName": "MediaEventNames"
															},
															"name": "MediaEventNames",
															"package": "@signalwire/webrtc"
														},
														{
															"type": "literal",
															"value": "track"
														},
														{
															"type": "reference",
															"target": 209,
															"name": "BaseConnectionState",
															"package": "@signalwire/core"
														},
														{
															"type": "literal",
															"value": "call.joined"
														},
														{
															"type": "literal",
															"value": "call.updated"
														},
														{
															"type": "literal",
															"value": "call.left"
														},
														{
															"type": "literal",
															"value": "call.state"
														},
														{
															"type": "literal",
															"value": "call.play"
														},
														{
															"type": "literal",
															"value": "call.connect"
														},
														{
															"type": "literal",
															"value": "call.room"
														},
														{
															"type": "literal",
															"value": "member.updated.handraised"
														},
														{
															"type": "literal",
															"value": "member.updated.echoCancellation"
														},
														{
															"type": "literal",
															"value": "member.updated.autoGain"
														},
														{
															"type": "literal",
															"value": "member.updated.noiseSuppression"
														}
													]
												}
											],
											"name": "Extract",
											"package": "typescript"
										},
										"objectType": {
											"type": "reference",
											"target": {
												"packageName": "eventemitter3",
												"packagePath": "index.d.ts",
												"qualifiedName": "EventEmitter.ArgumentMap"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 555,
													"name": "CallSessionEvents",
													"package": "@signalwire/client"
												}
											],
											"name": "ArgumentMap",
											"package": "eventemitter3",
											"qualifiedName": "EventEmitter.ArgumentMap"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.emit"
					}
				},
				{
					"id": 1393,
					"name": "end",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 517,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L517"
						}
					],
					"signatures": [
						{
							"id": 1394,
							"name": "end",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Ends call for a specific participant or yourself."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`end`"
											},
											{
												"kind": "text",
												"text": ": to end a call (your own or another member's)"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Ending your own call:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.end();\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Ending another participant's call:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst id = 'de550c0c-3fac-4efd-b06f-b5b8614b8966'; // you can get this from getMembers()\nawait room.end({ memberId: id });\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 517,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L517"
								}
							],
							"parameters": [
								{
									"id": 1395,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/common.ts",
											"qualifiedName": "MemberCommandParams"
										},
										"name": "MemberCommandParams",
										"package": "@signalwire/core",
										"highlightedProperties": {
											"memberId": [
												{
													"kind": "text",
													"text": "id of the member to end the call for. If omitted, ends the call for the local client."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.end"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.end"
					}
				},
				{
					"id": 1375,
					"name": "getLayouts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 390,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L390"
						}
					],
					"signatures": [
						{
							"id": 1376,
							"name": "getLayouts",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of available layouts for the room. To set a room layout,\nuse "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "setLayout",
										"target": 1377
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.list_available_layouts`"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.getLayouts()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 390,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L390"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.getLayouts"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.getLayouts"
					}
				},
				{
					"id": 1361,
					"name": "getMembers",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 275,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L275"
						}
					],
					"signatures": [
						{
							"id": 1362,
							"name": "getMembers",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of members currently in the room."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.getMembers()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 275,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L275"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.getMembers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.getMembers"
					}
				},
				{
					"id": 1340,
					"name": "hangup",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/fabric.ts",
							"line": 241,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L241"
						}
					],
					"signatures": [
						{
							"id": 1341,
							"name": "hangup",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hangs up the current call and disconnects the WebRTC connection.\nIf an RTC Peer ID is passed, the method will only disconnect that Peer, otherwise all Peers will be destroyed\n\n@example:\n"
									},
									{
										"kind": "code",
										"text": "```typescript\nawait call.hangup()\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/fabric.ts",
									"line": 241,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L241"
								}
							],
							"parameters": [
								{
									"id": 1342,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionContract.hangup"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionContract.hangup"
					}
				},
				{
					"id": 1455,
					"name": "hold",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 221,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L221"
						}
					],
					"signatures": [
						{
							"id": 1456,
							"name": "hold",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hold the call.\nIt stops the self member's outbound video/audio and other member's inbound video/audio."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the hold state is acheived."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.hold()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 221,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L221"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.hold"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.hold"
					}
				},
				{
					"id": 1399,
					"name": "leave",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/base.ts",
							"line": 21,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L21"
						}
					],
					"signatures": [
						{
							"id": 1400,
							"name": "leave",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Leaves the room. This detaches all the locally originating streams from the room."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/base.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L21"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseRoomSessionContract.leave"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseRoomSessionContract.leave"
					}
				},
				{
					"id": 1383,
					"name": "lock",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 433,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L433"
						}
					],
					"signatures": [
						{
							"id": 1384,
							"name": "lock",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Lock the room"
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.lock`"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.lock()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 433,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L433"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.lock"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.lock"
					}
				},
				{
					"id": 1483,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 1484,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L33"
								}
							],
							"typeParameters": [
								{
									"id": 1485,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomDevice.ts",
													"qualifiedName": "VideoRoomDeviceUpdatedEventNames"
												},
												"name": "VideoRoomDeviceUpdatedEventNames",
												"package": "@signalwire/core"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomDevice.ts",
													"qualifiedName": "VideoRoomDeviceDisconnectedEventNames"
												},
												"name": "VideoRoomDeviceDisconnectedEventNames",
												"package": "@signalwire/core"
											},
											{
												"type": "literal",
												"value": "layout.changed"
											},
											{
												"type": "literal",
												"value": "member.joined"
											},
											{
												"type": "literal",
												"value": "member.left"
											},
											{
												"type": "literal",
												"value": "member.updated"
											},
											{
												"type": "literal",
												"value": "member.updated.visible"
											},
											{
												"type": "literal",
												"value": "member.updated.deaf"
											},
											{
												"type": "literal",
												"value": "member.updated.audioMuted"
											},
											{
												"type": "literal",
												"value": "member.updated.videoMuted"
											},
											{
												"type": "literal",
												"value": "member.updated.inputVolume"
											},
											{
												"type": "literal",
												"value": "member.updated.outputVolume"
											},
											{
												"type": "literal",
												"value": "member.updated.inputSensitivity"
											},
											{
												"type": "literal",
												"value": "member.talking"
											},
											{
												"type": "literal",
												"value": "memberList.updated"
											},
											{
												"type": "literal",
												"value": "room.subscribed"
											},
											{
												"type": "literal",
												"value": "room.updated"
											},
											{
												"type": "literal",
												"value": "room.joined"
											},
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "literal",
												"value": "track"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											},
											{
												"type": "literal",
												"value": "call.joined"
											},
											{
												"type": "literal",
												"value": "call.updated"
											},
											{
												"type": "literal",
												"value": "call.left"
											},
											{
												"type": "literal",
												"value": "call.state"
											},
											{
												"type": "literal",
												"value": "call.play"
											},
											{
												"type": "literal",
												"value": "call.connect"
											},
											{
												"type": "literal",
												"value": "call.room"
											},
											{
												"type": "literal",
												"value": "member.updated.handraised"
											},
											{
												"type": "literal",
												"value": "member.updated.echoCancellation"
											},
											{
												"type": "literal",
												"value": "member.updated.autoGain"
											},
											{
												"type": "literal",
												"value": "member.updated.noiseSuppression"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1486,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 227,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1487,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1488,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/eventemitter3/index.d.ts",
													"line": 122,
													"character": 6
												}
											],
											"signatures": [
												{
													"id": 1489,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/eventemitter3/index.d.ts",
															"line": 122,
															"character": 6
														}
													],
													"parameters": [
														{
															"id": 1490,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typescript",
																		"packagePath": "lib/lib.es5.d.ts",
																		"qualifiedName": "Extract"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 227,
																			"name": "T",
																			"package": "@signalwire/core",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/core",
																						"packagePath": "src/types/videoRoomDevice.ts",
																						"qualifiedName": "VideoRoomDeviceUpdatedEventNames"
																					},
																					"name": "VideoRoomDeviceUpdatedEventNames",
																					"package": "@signalwire/core"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/core",
																						"packagePath": "src/types/videoRoomDevice.ts",
																						"qualifiedName": "VideoRoomDeviceDisconnectedEventNames"
																					},
																					"name": "VideoRoomDeviceDisconnectedEventNames",
																					"package": "@signalwire/core"
																				},
																				{
																					"type": "literal",
																					"value": "layout.changed"
																				},
																				{
																					"type": "literal",
																					"value": "member.joined"
																				},
																				{
																					"type": "literal",
																					"value": "member.left"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.visible"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.deaf"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.audioMuted"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.videoMuted"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.inputVolume"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.outputVolume"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.inputSensitivity"
																				},
																				{
																					"type": "literal",
																					"value": "member.talking"
																				},
																				{
																					"type": "literal",
																					"value": "memberList.updated"
																				},
																				{
																					"type": "literal",
																					"value": "room.subscribed"
																				},
																				{
																					"type": "literal",
																					"value": "room.updated"
																				},
																				{
																					"type": "literal",
																					"value": "room.joined"
																				},
																				{
																					"type": "literal",
																					"value": "room.left"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/webrtc",
																						"packagePath": "src/utils/interfaces.ts",
																						"qualifiedName": "MediaEventNames"
																					},
																					"name": "MediaEventNames",
																					"package": "@signalwire/webrtc"
																				},
																				{
																					"type": "literal",
																					"value": "track"
																				},
																				{
																					"type": "reference",
																					"target": 209,
																					"name": "BaseConnectionState",
																					"package": "@signalwire/core"
																				},
																				{
																					"type": "literal",
																					"value": "call.joined"
																				},
																				{
																					"type": "literal",
																					"value": "call.updated"
																				},
																				{
																					"type": "literal",
																					"value": "call.left"
																				},
																				{
																					"type": "literal",
																					"value": "call.state"
																				},
																				{
																					"type": "literal",
																					"value": "call.play"
																				},
																				{
																					"type": "literal",
																					"value": "call.connect"
																				},
																				{
																					"type": "literal",
																					"value": "call.room"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.handraised"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.echoCancellation"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.autoGain"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.noiseSuppression"
																				}
																			]
																		}
																	],
																	"name": "Extract",
																	"package": "typescript"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"packageName": "eventemitter3",
																		"packagePath": "index.d.ts",
																		"qualifiedName": "EventEmitter.ArgumentMap"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 555,
																			"name": "CallSessionEvents",
																			"package": "@signalwire/client"
																		}
																	],
																	"name": "ArgumentMap",
																	"package": "eventemitter3",
																	"qualifiedName": "EventEmitter.ArgumentMap"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 555,
										"name": "CallSessionEvents",
										"package": "@signalwire/client"
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.off"
					}
				},
				{
					"id": 1467,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 1468,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L23"
								}
							],
							"typeParameters": [
								{
									"id": 1469,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomDevice.ts",
													"qualifiedName": "VideoRoomDeviceUpdatedEventNames"
												},
												"name": "VideoRoomDeviceUpdatedEventNames",
												"package": "@signalwire/core"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomDevice.ts",
													"qualifiedName": "VideoRoomDeviceDisconnectedEventNames"
												},
												"name": "VideoRoomDeviceDisconnectedEventNames",
												"package": "@signalwire/core"
											},
											{
												"type": "literal",
												"value": "layout.changed"
											},
											{
												"type": "literal",
												"value": "member.joined"
											},
											{
												"type": "literal",
												"value": "member.left"
											},
											{
												"type": "literal",
												"value": "member.updated"
											},
											{
												"type": "literal",
												"value": "member.updated.visible"
											},
											{
												"type": "literal",
												"value": "member.updated.deaf"
											},
											{
												"type": "literal",
												"value": "member.updated.audioMuted"
											},
											{
												"type": "literal",
												"value": "member.updated.videoMuted"
											},
											{
												"type": "literal",
												"value": "member.updated.inputVolume"
											},
											{
												"type": "literal",
												"value": "member.updated.outputVolume"
											},
											{
												"type": "literal",
												"value": "member.updated.inputSensitivity"
											},
											{
												"type": "literal",
												"value": "member.talking"
											},
											{
												"type": "literal",
												"value": "memberList.updated"
											},
											{
												"type": "literal",
												"value": "room.subscribed"
											},
											{
												"type": "literal",
												"value": "room.updated"
											},
											{
												"type": "literal",
												"value": "room.joined"
											},
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "literal",
												"value": "track"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											},
											{
												"type": "literal",
												"value": "call.joined"
											},
											{
												"type": "literal",
												"value": "call.updated"
											},
											{
												"type": "literal",
												"value": "call.left"
											},
											{
												"type": "literal",
												"value": "call.state"
											},
											{
												"type": "literal",
												"value": "call.play"
											},
											{
												"type": "literal",
												"value": "call.connect"
											},
											{
												"type": "literal",
												"value": "call.room"
											},
											{
												"type": "literal",
												"value": "member.updated.handraised"
											},
											{
												"type": "literal",
												"value": "member.updated.echoCancellation"
											},
											{
												"type": "literal",
												"value": "member.updated.autoGain"
											},
											{
												"type": "literal",
												"value": "member.updated.noiseSuppression"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1470,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 217,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1471,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1472,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/eventemitter3/index.d.ts",
													"line": 122,
													"character": 6
												}
											],
											"signatures": [
												{
													"id": 1473,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/eventemitter3/index.d.ts",
															"line": 122,
															"character": 6
														}
													],
													"parameters": [
														{
															"id": 1474,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typescript",
																		"packagePath": "lib/lib.es5.d.ts",
																		"qualifiedName": "Extract"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 217,
																			"name": "T",
																			"package": "@signalwire/core",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/core",
																						"packagePath": "src/types/videoRoomDevice.ts",
																						"qualifiedName": "VideoRoomDeviceUpdatedEventNames"
																					},
																					"name": "VideoRoomDeviceUpdatedEventNames",
																					"package": "@signalwire/core"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/core",
																						"packagePath": "src/types/videoRoomDevice.ts",
																						"qualifiedName": "VideoRoomDeviceDisconnectedEventNames"
																					},
																					"name": "VideoRoomDeviceDisconnectedEventNames",
																					"package": "@signalwire/core"
																				},
																				{
																					"type": "literal",
																					"value": "layout.changed"
																				},
																				{
																					"type": "literal",
																					"value": "member.joined"
																				},
																				{
																					"type": "literal",
																					"value": "member.left"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.visible"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.deaf"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.audioMuted"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.videoMuted"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.inputVolume"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.outputVolume"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.inputSensitivity"
																				},
																				{
																					"type": "literal",
																					"value": "member.talking"
																				},
																				{
																					"type": "literal",
																					"value": "memberList.updated"
																				},
																				{
																					"type": "literal",
																					"value": "room.subscribed"
																				},
																				{
																					"type": "literal",
																					"value": "room.updated"
																				},
																				{
																					"type": "literal",
																					"value": "room.joined"
																				},
																				{
																					"type": "literal",
																					"value": "room.left"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/webrtc",
																						"packagePath": "src/utils/interfaces.ts",
																						"qualifiedName": "MediaEventNames"
																					},
																					"name": "MediaEventNames",
																					"package": "@signalwire/webrtc"
																				},
																				{
																					"type": "literal",
																					"value": "track"
																				},
																				{
																					"type": "reference",
																					"target": 209,
																					"name": "BaseConnectionState",
																					"package": "@signalwire/core"
																				},
																				{
																					"type": "literal",
																					"value": "call.joined"
																				},
																				{
																					"type": "literal",
																					"value": "call.updated"
																				},
																				{
																					"type": "literal",
																					"value": "call.left"
																				},
																				{
																					"type": "literal",
																					"value": "call.state"
																				},
																				{
																					"type": "literal",
																					"value": "call.play"
																				},
																				{
																					"type": "literal",
																					"value": "call.connect"
																				},
																				{
																					"type": "literal",
																					"value": "call.room"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.handraised"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.echoCancellation"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.autoGain"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.noiseSuppression"
																				}
																			]
																		}
																	],
																	"name": "Extract",
																	"package": "typescript"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"packageName": "eventemitter3",
																		"packagePath": "index.d.ts",
																		"qualifiedName": "EventEmitter.ArgumentMap"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 555,
																			"name": "CallSessionEvents",
																			"package": "@signalwire/client"
																		}
																	],
																	"name": "ArgumentMap",
																	"package": "eventemitter3",
																	"qualifiedName": "EventEmitter.ArgumentMap"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 555,
										"name": "CallSessionEvents",
										"package": "@signalwire/client"
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.on"
					}
				},
				{
					"id": 1475,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 1476,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L28"
								}
							],
							"typeParameters": [
								{
									"id": 1477,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomDevice.ts",
													"qualifiedName": "VideoRoomDeviceUpdatedEventNames"
												},
												"name": "VideoRoomDeviceUpdatedEventNames",
												"package": "@signalwire/core"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomDevice.ts",
													"qualifiedName": "VideoRoomDeviceDisconnectedEventNames"
												},
												"name": "VideoRoomDeviceDisconnectedEventNames",
												"package": "@signalwire/core"
											},
											{
												"type": "literal",
												"value": "layout.changed"
											},
											{
												"type": "literal",
												"value": "member.joined"
											},
											{
												"type": "literal",
												"value": "member.left"
											},
											{
												"type": "literal",
												"value": "member.updated"
											},
											{
												"type": "literal",
												"value": "member.updated.visible"
											},
											{
												"type": "literal",
												"value": "member.updated.deaf"
											},
											{
												"type": "literal",
												"value": "member.updated.audioMuted"
											},
											{
												"type": "literal",
												"value": "member.updated.videoMuted"
											},
											{
												"type": "literal",
												"value": "member.updated.inputVolume"
											},
											{
												"type": "literal",
												"value": "member.updated.outputVolume"
											},
											{
												"type": "literal",
												"value": "member.updated.inputSensitivity"
											},
											{
												"type": "literal",
												"value": "member.talking"
											},
											{
												"type": "literal",
												"value": "memberList.updated"
											},
											{
												"type": "literal",
												"value": "room.subscribed"
											},
											{
												"type": "literal",
												"value": "room.updated"
											},
											{
												"type": "literal",
												"value": "room.joined"
											},
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "literal",
												"value": "track"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											},
											{
												"type": "literal",
												"value": "call.joined"
											},
											{
												"type": "literal",
												"value": "call.updated"
											},
											{
												"type": "literal",
												"value": "call.left"
											},
											{
												"type": "literal",
												"value": "call.state"
											},
											{
												"type": "literal",
												"value": "call.play"
											},
											{
												"type": "literal",
												"value": "call.connect"
											},
											{
												"type": "literal",
												"value": "call.room"
											},
											{
												"type": "literal",
												"value": "member.updated.handraised"
											},
											{
												"type": "literal",
												"value": "member.updated.echoCancellation"
											},
											{
												"type": "literal",
												"value": "member.updated.autoGain"
											},
											{
												"type": "literal",
												"value": "member.updated.noiseSuppression"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1478,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 222,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1479,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1480,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/eventemitter3/index.d.ts",
													"line": 122,
													"character": 6
												}
											],
											"signatures": [
												{
													"id": 1481,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/eventemitter3/index.d.ts",
															"line": 122,
															"character": 6
														}
													],
													"parameters": [
														{
															"id": 1482,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typescript",
																		"packagePath": "lib/lib.es5.d.ts",
																		"qualifiedName": "Extract"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 222,
																			"name": "T",
																			"package": "@signalwire/core",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/core",
																						"packagePath": "src/types/videoRoomDevice.ts",
																						"qualifiedName": "VideoRoomDeviceUpdatedEventNames"
																					},
																					"name": "VideoRoomDeviceUpdatedEventNames",
																					"package": "@signalwire/core"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/core",
																						"packagePath": "src/types/videoRoomDevice.ts",
																						"qualifiedName": "VideoRoomDeviceDisconnectedEventNames"
																					},
																					"name": "VideoRoomDeviceDisconnectedEventNames",
																					"package": "@signalwire/core"
																				},
																				{
																					"type": "literal",
																					"value": "layout.changed"
																				},
																				{
																					"type": "literal",
																					"value": "member.joined"
																				},
																				{
																					"type": "literal",
																					"value": "member.left"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.visible"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.deaf"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.audioMuted"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.videoMuted"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.inputVolume"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.outputVolume"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.inputSensitivity"
																				},
																				{
																					"type": "literal",
																					"value": "member.talking"
																				},
																				{
																					"type": "literal",
																					"value": "memberList.updated"
																				},
																				{
																					"type": "literal",
																					"value": "room.subscribed"
																				},
																				{
																					"type": "literal",
																					"value": "room.updated"
																				},
																				{
																					"type": "literal",
																					"value": "room.joined"
																				},
																				{
																					"type": "literal",
																					"value": "room.left"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/webrtc",
																						"packagePath": "src/utils/interfaces.ts",
																						"qualifiedName": "MediaEventNames"
																					},
																					"name": "MediaEventNames",
																					"package": "@signalwire/webrtc"
																				},
																				{
																					"type": "literal",
																					"value": "track"
																				},
																				{
																					"type": "reference",
																					"target": 209,
																					"name": "BaseConnectionState",
																					"package": "@signalwire/core"
																				},
																				{
																					"type": "literal",
																					"value": "call.joined"
																				},
																				{
																					"type": "literal",
																					"value": "call.updated"
																				},
																				{
																					"type": "literal",
																					"value": "call.left"
																				},
																				{
																					"type": "literal",
																					"value": "call.state"
																				},
																				{
																					"type": "literal",
																					"value": "call.play"
																				},
																				{
																					"type": "literal",
																					"value": "call.connect"
																				},
																				{
																					"type": "literal",
																					"value": "call.room"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.handraised"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.echoCancellation"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.autoGain"
																				},
																				{
																					"type": "literal",
																					"value": "member.updated.noiseSuppression"
																				}
																			]
																		}
																	],
																	"name": "Extract",
																	"package": "typescript"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"packageName": "eventemitter3",
																		"packagePath": "index.d.ts",
																		"qualifiedName": "EventEmitter.ArgumentMap"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 555,
																			"name": "CallSessionEvents",
																			"package": "@signalwire/client"
																		}
																	],
																	"name": "ArgumentMap",
																	"package": "eventemitter3",
																	"qualifiedName": "EventEmitter.ArgumentMap"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 555,
										"name": "CallSessionEvents",
										"package": "@signalwire/client"
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.once"
					}
				},
				{
					"id": 1491,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 1492,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L38"
								}
							],
							"typeParameters": [
								{
									"id": 1493,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomDevice.ts",
													"qualifiedName": "VideoRoomDeviceUpdatedEventNames"
												},
												"name": "VideoRoomDeviceUpdatedEventNames",
												"package": "@signalwire/core"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomDevice.ts",
													"qualifiedName": "VideoRoomDeviceDisconnectedEventNames"
												},
												"name": "VideoRoomDeviceDisconnectedEventNames",
												"package": "@signalwire/core"
											},
											{
												"type": "literal",
												"value": "layout.changed"
											},
											{
												"type": "literal",
												"value": "member.joined"
											},
											{
												"type": "literal",
												"value": "member.left"
											},
											{
												"type": "literal",
												"value": "member.updated"
											},
											{
												"type": "literal",
												"value": "member.updated.visible"
											},
											{
												"type": "literal",
												"value": "member.updated.deaf"
											},
											{
												"type": "literal",
												"value": "member.updated.audioMuted"
											},
											{
												"type": "literal",
												"value": "member.updated.videoMuted"
											},
											{
												"type": "literal",
												"value": "member.updated.inputVolume"
											},
											{
												"type": "literal",
												"value": "member.updated.outputVolume"
											},
											{
												"type": "literal",
												"value": "member.updated.inputSensitivity"
											},
											{
												"type": "literal",
												"value": "member.talking"
											},
											{
												"type": "literal",
												"value": "memberList.updated"
											},
											{
												"type": "literal",
												"value": "room.subscribed"
											},
											{
												"type": "literal",
												"value": "room.updated"
											},
											{
												"type": "literal",
												"value": "room.joined"
											},
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "literal",
												"value": "track"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											},
											{
												"type": "literal",
												"value": "call.joined"
											},
											{
												"type": "literal",
												"value": "call.updated"
											},
											{
												"type": "literal",
												"value": "call.left"
											},
											{
												"type": "literal",
												"value": "call.state"
											},
											{
												"type": "literal",
												"value": "call.play"
											},
											{
												"type": "literal",
												"value": "call.connect"
											},
											{
												"type": "literal",
												"value": "call.room"
											},
											{
												"type": "literal",
												"value": "member.updated.handraised"
											},
											{
												"type": "literal",
												"value": "member.updated.echoCancellation"
											},
											{
												"type": "literal",
												"value": "member.updated.autoGain"
											},
											{
												"type": "literal",
												"value": "member.updated.noiseSuppression"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1494,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 232,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 555,
										"name": "CallSessionEvents",
										"package": "@signalwire/client"
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.removeAllListeners"
					}
				},
				{
					"id": 1372,
					"name": "removeMember",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 377,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L377"
						}
					],
					"signatures": [
						{
							"id": 1373,
							"name": "removeMember",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes a specific participant from the room."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.member.remove`"
											},
											{
												"kind": "text",
												"text": ": to remove a remote member"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst id = 'de550c0c-3fac-4efd-b06f-b5b8614b8966'  // you can get this from getMembers()\nawait room.removeMember({memberId: id})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 377,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L377"
								}
							],
							"parameters": [
								{
									"id": 1374,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Required"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/common.ts",
													"qualifiedName": "MemberCommandParams"
												},
												"name": "MemberCommandParams",
												"package": "@signalwire/core"
											}
										],
										"name": "Required",
										"package": "typescript",
										"highlightedProperties": {
											"memberId": [
												{
													"kind": "text",
													"text": "id of the member to remove"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.removeMember"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.removeMember"
					}
				},
				{
					"id": 1461,
					"name": "restoreOutboundAudio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 239,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L239"
						}
					],
					"signatures": [
						{
							"id": 1462,
							"name": "restoreOutboundAudio",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 239,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L239"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.restoreOutboundAudio"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.restoreOutboundAudio"
					}
				},
				{
					"id": 1465,
					"name": "restoreOutboundVideo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 243,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L243"
						}
					],
					"signatures": [
						{
							"id": 1466,
							"name": "restoreOutboundVideo",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 243,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L243"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.restoreOutboundVideo"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.restoreOutboundVideo"
					}
				},
				{
					"id": 1443,
					"name": "sendDigits",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 163,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L163"
						}
					],
					"signatures": [
						{
							"id": 1444,
							"name": "sendDigits",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Send DTMF"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.sendDigits('1')\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L163"
								}
							],
							"parameters": [
								{
									"id": 1445,
									"name": "dtmf",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.sendDigits"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.sendDigits"
					}
				},
				{
					"id": 1449,
					"name": "setAudioDirection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 193,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L193"
						}
					],
					"signatures": [
						{
							"id": 1450,
							"name": "setAudioDirection",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add or update the audio with requested direction.\nIt perform RTC Peer renegotiation."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the requested audio is negotiated or failed."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.setAudioDirection('sendrecv')\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 193,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L193"
								}
							],
							"parameters": [
								{
									"id": 1451,
									"name": "direction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/utils/interfaces.ts",
											"qualifiedName": "UpdateMediaDirection"
										},
										"name": "UpdateMediaDirection",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.setAudioDirection"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.setAudioDirection"
					}
				},
				{
					"id": 1390,
					"name": "setAudioFlags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 496,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L496"
						}
					],
					"signatures": [
						{
							"id": 1391,
							"name": "setAudioFlags",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update audio processing flags (echo cancellation, automatic gain control, noise suppression)\nfor yourself or another participant in the room."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`self.audioflags.set`"
											},
											{
												"kind": "text",
												"text": " – required to modify your own microphone constraints\n- "
											},
											{
												"kind": "code",
												"text": "`member.audioflags.set`"
											},
											{
												"kind": "text",
												"text": " – required to modify another member’s microphone constraints"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\n// Enable echo cancellation and noise suppression for yourself\nawait room.setAudioFlags({\n  echoCancellation: true,\n  autoGain: false,\n  noiseSuppression: true\n});\n\n// Disable automatic gain control for another participant\nconst otherId = 'de550c0c-3fac-4efd-b06f-b5b8614b8966';\nawait room.setAudioFlags({\n  memberId: otherId,\n  autoGain: false\n});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 496,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L496"
								}
							],
							"parameters": [
								{
									"id": 1392,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 325,
										"name": "SetAudioFlagsParams",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.setAudioFlags"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.setAudioFlags"
					}
				},
				{
					"id": 1358,
					"name": "setInputSensitivity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 264,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L264"
						}
					],
					"signatures": [
						{
							"id": 1359,
							"name": "setInputSensitivity",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the input level at which the participant is identified as currently\nspeaking. You can use this method to set the input sensitivity for either\nyourself or another participant in the room."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.set_input_sensitivity`"
											},
											{
												"kind": "text",
												"text": ": to set the sensitivity for a local\n   device\n - "
											},
											{
												"kind": "code",
												"text": "`room.member.set_input_sensitivity`"
											},
											{
												"kind": "text",
												"text": ": to set the sensitivity for a\n   remote member"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Setting your own input sensitivity:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.setInputSensitivity({value: 80})\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Setting the input sensitivity of another participant:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst id = 'de550c0c-3fac-4efd-b06f-b5b8614b8966'  // you can get this from getMembers()\nawait room.setInputSensitivity({memberId: id, value: 80})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 264,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L264"
								}
							],
							"parameters": [
								{
									"id": 1360,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/common.ts",
											"qualifiedName": "MemberCommandWithValueParams"
										},
										"name": "MemberCommandWithValueParams",
										"package": "@signalwire/core",
										"highlightedProperties": {
											"memberId": [
												{
													"kind": "text",
													"text": "id of the member to affect. If omitted, affects\nthe default device in the local client."
												}
											],
											"value": [
												{
													"kind": "text",
													"text": "desired sensitivity. The default value is 30 and the\nscale goes from 0 (lowest sensitivity, essentially muted) to 100 (highest\nsensitivity)."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.setInputSensitivity"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.setInputSensitivity"
					}
				},
				{
					"id": 1355,
					"name": "setInputVolume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 233,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L233"
						}
					],
					"signatures": [
						{
							"id": 1356,
							"name": "setInputVolume",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the input volume level (e.g. for the microphone). You can use this\nmethod to set the input volume for either yourself or another participant\nin the room."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.set_input_volume`"
											},
											{
												"kind": "text",
												"text": ": to set the volume for a local device\n - "
											},
											{
												"kind": "code",
												"text": "`room.member.set_input_volume`"
											},
											{
												"kind": "text",
												"text": ": to set the volume for a remote member"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Setting your own microphone volume:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.setInputVolume({volume: -10})\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Setting the microphone volume of another participant:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst id = 'de550c0c-3fac-4efd-b06f-b5b8614b8966'  // you can get this from getMembers()\nawait room.setInputVolume({memberId: id, volume: -10})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 233,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L233"
								}
							],
							"parameters": [
								{
									"id": 1357,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/common.ts",
											"qualifiedName": "MemberCommandWithVolumeParams"
										},
										"name": "MemberCommandWithVolumeParams",
										"package": "@signalwire/core",
										"highlightedProperties": {
											"memberId": [
												{
													"kind": "text",
													"text": "id of the member for which to set input volume. If\nomitted, sets the volume of the default device in the local client."
												}
											],
											"volume": [
												{
													"kind": "text",
													"text": "desired volume. Values range from -50 to 50, with a\ndefault of 0."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.setInputVolume"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.setInputVolume"
					}
				},
				{
					"id": 1377,
					"name": "setLayout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 404,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L404"
						}
					],
					"signatures": [
						{
							"id": 1378,
							"name": "setLayout",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets a layout for the room. You can obtain a list of available layouts\nwith "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getLayouts",
										"target": 1375
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.set_layout`"
											},
											{
												"kind": "text",
												"text": "\n - "
											},
											{
												"kind": "code",
												"text": "`room.set_position`"
											},
											{
												"kind": "text",
												"text": " (if you need to assign positions)"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Set the 6x6 layout:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.setLayout({name: \"6x6\"})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 404,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L404"
								}
							],
							"parameters": [
								{
									"id": 1379,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/rooms/methods.ts",
											"qualifiedName": "SetLayoutParams"
										},
										"name": "SetLayoutParams",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.setLayout"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.setLayout"
					}
				},
				{
					"id": 1440,
					"name": "setLocalStream",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 152,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L152"
						}
					],
					"signatures": [
						{
							"id": 1441,
							"name": "setLocalStream",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current local media stream with the one coming from the user."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Replaces the current media stream with the one coming from the user:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.setLocalStream(new MediaStream)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 152,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L152"
								}
							],
							"parameters": [
								{
									"id": 1442,
									"name": "stream",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specify the media stream that the device should use.\nSee\n[MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStream"
										},
										"name": "MediaStream",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStream"
										},
										"name": "MediaStream",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.setLocalStream"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.setLocalStream"
					}
				},
				{
					"id": 1369,
					"name": "setOutputVolume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 360,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L360"
						}
					],
					"signatures": [
						{
							"id": 1370,
							"name": "setOutputVolume",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the output volume level (e.g., for the speaker). You can use this\nmethod to set the output volume for either yourself or another participant\nin the room."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.set_output_volume`"
											},
											{
												"kind": "text",
												"text": ": to set the speaker volume for yourself\n - "
											},
											{
												"kind": "code",
												"text": "`room.member.set_output_volume`"
											},
											{
												"kind": "text",
												"text": ": to set the speaker volume for a remote\n   member"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Setting your own output volume:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.setOutputVolume({volume: -10})\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Setting the output volume of another participant:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst id = 'de550c0c-3fac-4efd-b06f-b5b8614b8966'  // you can get this from getMembers()\nawait room.setOutputVolume({memberId: id, volume: -10})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 360,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L360"
								}
							],
							"parameters": [
								{
									"id": 1371,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/common.ts",
											"qualifiedName": "MemberCommandWithVolumeParams"
										},
										"name": "MemberCommandWithVolumeParams",
										"package": "@signalwire/core",
										"highlightedProperties": {
											"memberId": [
												{
													"kind": "text",
													"text": "id of the member to affect. If omitted, affects the\ndefault device in the local client."
												}
											],
											"volume": [
												{
													"kind": "text",
													"text": "desired volume. Values range from -50 to 50, with a\ndefault of 0."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.setOutputVolume"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.setOutputVolume"
					}
				},
				{
					"id": 1380,
					"name": "setPositions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 421,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L421"
						}
					],
					"signatures": [
						{
							"id": 1381,
							"name": "setPositions",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Assigns a position in the layout for multiple members."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.set_position`"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\nawait roomSession.setPositions({\n  positions: {\n    \"1bf4d4fb-a3e4-4d46-80a8-3ebfdceb2a60\": \"reserved-1\",\n    \"e0c5be44-d6c7-438f-8cda-f859a1a0b1e7\": \"auto\"\n  }\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 421,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L421"
								}
							],
							"parameters": [
								{
									"id": 1382,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/rooms/methods.ts",
											"qualifiedName": "SetPositionsParams"
										},
										"name": "SetPositionsParams",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.setPositions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.setPositions"
					}
				},
				{
					"id": 1387,
					"name": "setRaisedHand",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 464,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L464"
						}
					],
					"signatures": [
						{
							"id": 1388,
							"name": "setRaisedHand",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Raise or lower the hand of a specific participant in the room."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`video.self.raisehand`"
											},
											{
												"kind": "text",
												"text": " - required to raise a hand\n - "
											},
											{
												"kind": "code",
												"text": "`video.self.lowerhand`"
											},
											{
												"kind": "text",
												"text": " - required to lower a hand\n - "
											},
											{
												"kind": "code",
												"text": "`video.member.raisehand`"
											},
											{
												"kind": "text",
												"text": " - required to raise a hand for another member’s\n - "
											},
											{
												"kind": "code",
												"text": "`video.member.lowerhand`"
											},
											{
												"kind": "text",
												"text": " - required to lower a hand for another member’s"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst id = 'de550c0c-3fac-4efd-b06f-b5b8614b8966'  // you can get this from getMembers()\nawait room.setHandRaised({ memberId: id, raised: false })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 464,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L464"
								}
							],
							"parameters": [
								{
									"id": 1389,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/rooms/methods.ts",
											"qualifiedName": "SetRaisedHandRoomParams"
										},
										"name": "SetRaisedHandRoomParams",
										"package": "@signalwire/core",
										"highlightedProperties": {
											"memberId": [
												{
													"kind": "text",
													"text": "id of the member to remove"
												}
											],
											"raised": [
												{
													"kind": "text",
													"text": "boolean flag to raise or lower the hand"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.setRaisedHand"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.setRaisedHand"
					}
				},
				{
					"id": 1452,
					"name": "setVideoDirection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 208,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L208"
						}
					],
					"signatures": [
						{
							"id": 1453,
							"name": "setVideoDirection",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add or update the video with requested direction.\nIt perform RTC Peer renegotiation."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the requested video is negotiated or failed."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.setVideoDirection('recvonly')\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 208,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L208"
								}
							],
							"parameters": [
								{
									"id": 1454,
									"name": "direction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/utils/interfaces.ts",
											"qualifiedName": "UpdateMediaDirection"
										},
										"name": "UpdateMediaDirection",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.setVideoDirection"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.setVideoDirection"
					}
				},
				{
					"id": 1336,
					"name": "start",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/fabric.ts",
							"line": 222,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L222"
						}
					],
					"signatures": [
						{
							"id": 1337,
							"name": "start",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Starts the call via the WebRTC connection\nBased on the the remote SDP, it will either send "
									},
									{
										"kind": "code",
										"text": "`verto.invite`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`verto.answer`"
									},
									{
										"kind": "text",
										"text": " to start the call.\n\n@example:\n"
									},
									{
										"kind": "code",
										"text": "```typescript\nawait call.start()\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/fabric.ts",
									"line": 222,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L222"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionContract.start"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionContract.start"
					}
				},
				{
					"id": 1405,
					"name": "startScreenShare",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/base.ts",
							"line": 37,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L37"
						}
					],
					"signatures": [
						{
							"id": 1406,
							"name": "startScreenShare",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a screen sharing instance to the room. You can create multiple screen\nsharing instances and add all of them to the room."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "RoomSessionScreenShare",
												"target": 1021
											}
										]
									},
									{
										"tag": "@example",
										"name": "Sharing the screen together with the associated audio:",
										"content": [
											{
												"kind": "code",
												"text": "```js\nawait roomSession.startScreenShare({ audio: true, video: true })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/base.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L37"
								}
							],
							"parameters": [
								{
									"id": 1407,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "StartScreenShareOptions",
												"target": 548
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 548,
										"name": "StartScreenShareOptions",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1021,
										"name": "RoomSessionScreenShare",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseRoomSessionContract.startScreenShare"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseRoomSessionContract.startScreenShare"
					}
				},
				{
					"id": 1459,
					"name": "stopOutboundAudio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 237,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L237"
						}
					],
					"signatures": [
						{
							"id": 1460,
							"name": "stopOutboundAudio",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 237,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L237"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.stopOutboundAudio"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.stopOutboundAudio"
					}
				},
				{
					"id": 1463,
					"name": "stopOutboundVideo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 241,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L241"
						}
					],
					"signatures": [
						{
							"id": 1464,
							"name": "stopOutboundVideo",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 241,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L241"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.stopOutboundVideo"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.stopOutboundVideo"
					}
				},
				{
					"id": 1366,
					"name": "undeaf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 333,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L333"
						}
					],
					"signatures": [
						{
							"id": 1367,
							"name": "undeaf",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unmutes the incoming audio. The affected participant will start hearing\naudio from the other participants again. You can use this method to\nundeaf either yourself or another participant in the room.\n\nNote that in addition to allowing a participants to hear the others, this\nwill also automatically unmute the microphone of the target participant\n(even if there is no "
									},
									{
										"kind": "code",
										"text": "`audio_unmute`"
									},
									{
										"kind": "text",
										"text": " permission). If you want, you can then\nmanually mute it by calling "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "audioMute",
										"target": 1343
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.deaf`"
											},
											{
												"kind": "text",
												"text": ": to make yourself deaf\n - "
											},
											{
												"kind": "code",
												"text": "`room.member.deaf`"
											},
											{
												"kind": "text",
												"text": ": to make deaf a remote member"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Undeaf yourself:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.undeaf()\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Undeaf another participant:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst id = 'de550c0c-3fac-4efd-b06f-b5b8614b8966'  // you can get this from getMembers()\nawait room.undeaf({memberId: id})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 333,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L333"
								}
							],
							"parameters": [
								{
									"id": 1368,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/common.ts",
											"qualifiedName": "MemberCommandParams"
										},
										"name": "MemberCommandParams",
										"package": "@signalwire/core",
										"highlightedProperties": {
											"memberId": [
												{
													"kind": "text",
													"text": "id of the member to affect. If omitted, affects\nthe default device in the local client."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.undeaf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.undeaf"
					}
				},
				{
					"id": 1457,
					"name": "unhold",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 234,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L234"
						}
					],
					"signatures": [
						{
							"id": 1458,
							"name": "unhold",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unhold the call.\nIt resumes the self member's outbound video/audio and other member's inbound video/audio."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the active call state is acheived."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.unhold()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 234,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L234"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.unhold"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.unhold"
					}
				},
				{
					"id": 1385,
					"name": "unlock",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 445,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L445"
						}
					],
					"signatures": [
						{
							"id": 1386,
							"name": "unlock",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unlock the room"
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.unlock`"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.lock()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 445,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L445"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.unlock"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.unlock"
					}
				},
				{
					"id": 1434,
					"name": "updateCamera",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 125,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L125"
						}
					],
					"signatures": [
						{
							"id": 1435,
							"name": "updateCamera",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current camera stream with the one coming from a different\ndevice."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Replaces the current camera stream with the one coming from the specified deviceId:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.updateCamera({deviceId: \"/o4ZeWzroh+8q0Ds/CFfmn9XpqaHzmW3L/5ZBC22CRg=\"})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 125,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L125"
								}
							],
							"parameters": [
								{
									"id": 1436,
									"name": "constraints",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specify the constraints that the device should satisfy. "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MediaTrackConstraints",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "MediaTrackConstraints"
												}
											},
											{
												"kind": "text",
												"text": "\nSee\n[MediaTrackConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints)."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaTrackConstraints"
										},
										"name": "MediaTrackConstraints",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.updateCamera"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.updateCamera"
					}
				},
				{
					"id": 1446,
					"name": "updateMedia",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 178,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L178"
						}
					],
					"signatures": [
						{
							"id": 1447,
							"name": "updateMedia",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Upgrade or downgrade the media in the WebRTC connection.\nIt perform RTC Peer renegotiation."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the requested media is negotiated or failed."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.updateMedia({ video: { direction: 'sendrecv' } })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 178,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L178"
								}
							],
							"parameters": [
								{
									"id": 1448,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "UpdateMediaParams",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "UpdateMediaParams"
												}
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/utils/interfaces.ts",
											"qualifiedName": "UpdateMediaParams"
										},
										"name": "UpdateMediaParams",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.updateMedia"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.updateMedia"
					}
				},
				{
					"id": 1437,
					"name": "updateMicrophone",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 139,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L139"
						}
					],
					"signatures": [
						{
							"id": 1438,
							"name": "updateMicrophone",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current microphone stream with the one coming from a different\ndevice."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Replaces the current microphone stream with the one coming from",
										"content": [
											{
												"kind": "text",
												"text": "the specified deviceId:\n"
											},
											{
												"kind": "code",
												"text": "```typescript\nawait room.updateMicrophone({deviceId: \"/o4ZeWzroh+8q0Ds/CFfmn9XpqaHzmW3L/5ZBC22CRg=\"})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 139,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L139"
								}
							],
							"parameters": [
								{
									"id": 1439,
									"name": "constraints",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specify the constraints that the device should satisfy. "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MediaTrackConstraints",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "MediaTrackConstraints"
												}
											},
											{
												"kind": "text",
												"text": "\nSee\n[MediaTrackConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints)."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaTrackConstraints"
										},
										"name": "MediaTrackConstraints",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.updateMicrophone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.updateMicrophone"
					}
				},
				{
					"id": 1408,
					"name": "updateSpeaker",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/base.ts",
							"line": 54,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L54"
						}
					],
					"signatures": [
						{
							"id": 1409,
							"name": "updateSpeaker",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current speaker with a different one.\n\n> 📘\n> Some browsers do not support output device selection. You can check by calling "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WebRTC.supportsMediaOutput",
										"target": 1936
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Replaces the current speaker:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.updateSpeaker({deviceId: \"/o4ZeWzroh+8q0Ds/CFfmn9XpqaHzmW3L/5ZBC22CRg=\"})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/base.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L54"
								}
							],
							"parameters": [
								{
									"id": 1410,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1411,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1412,
													"name": "deviceId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "id of the new speaker device"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client/src/utils/interfaces/base.ts",
															"line": 54,
															"character": 24,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L54"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1412
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/client/src/utils/interfaces/base.ts",
													"line": 54,
													"character": 22,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/base.ts#L54"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseRoomSessionContract.updateSpeaker"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseRoomSessionContract.updateSpeaker"
					}
				},
				{
					"id": 1349,
					"name": "videoMute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 182,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L182"
						}
					],
					"signatures": [
						{
							"id": 1350,
							"name": "videoMute",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Puts the video on mute. Participants will see a mute image instead of the\nvideo stream. You can use this method to mute either yourself or another\nparticipant in the room."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.video_mute`"
											},
											{
												"kind": "text",
												"text": ": to unmute a local device\n - "
											},
											{
												"kind": "code",
												"text": "`room.member.video_mute`"
											},
											{
												"kind": "text",
												"text": ": to unmute a remote member"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Muting your own video:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.videoMute()\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Muting the video of another participant:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst id = 'de550c0c-3fac-4efd-b06f-b5b8614b8966'  // you can get this from getMembers()\nawait room.videoMute({memberId: id})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 182,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L182"
								}
							],
							"parameters": [
								{
									"id": 1351,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/common.ts",
											"qualifiedName": "MemberCommandParams"
										},
										"name": "MemberCommandParams",
										"package": "@signalwire/core",
										"highlightedProperties": {
											"memberId": [
												{
													"kind": "text",
													"text": "id of the member to mute. If omitted, mutes the\ndefault device in the local client."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.videoMute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.videoMute"
					}
				},
				{
					"id": 1352,
					"name": "videoUnmute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 206,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L206"
						}
					],
					"signatures": [
						{
							"id": 1353,
							"name": "videoUnmute",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unmutes the video if it had been previously muted. Participants will\nstart seeing the video stream again. You can use this method to unmute\neither yourself or another participant in the room."
									}
								],
								"blockTags": [
									{
										"tag": "@capabilities",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.video_mute`"
											},
											{
												"kind": "text",
												"text": ": to unmute a local device\n - "
											},
											{
												"kind": "code",
												"text": "`room.member.video_mute`"
											},
											{
												"kind": "text",
												"text": ": to unmute a remote member"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Unmuting your own video:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.videoUnmute()\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Unmuting the video of another participant:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst id = 'de550c0c-3fac-4efd-b06f-b5b8614b8966'  // you can get this from getMembers()\nawait room.videoUnmute({memberId: id})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricRoomSession.ts",
									"line": 206,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L206"
								}
							],
							"parameters": [
								{
									"id": 1354,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/common.ts",
											"qualifiedName": "MemberCommandParams"
										},
										"name": "MemberCommandParams",
										"package": "@signalwire/core",
										"highlightedProperties": {
											"memberId": [
												{
													"kind": "text",
													"text": "id of the member to unmute. If omitted, unmutes\nthe default device in the local client."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "CallSessionMethods.videoUnmute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallSessionMethods.videoUnmute"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1431,
						1429,
						1418,
						1416,
						1417,
						1334,
						1333,
						1335,
						1401,
						1413,
						1415,
						1422,
						1419,
						1397,
						1423,
						1432,
						1426,
						1424,
						1425,
						1414,
						1396,
						1433,
						1427,
						1428,
						1430,
						1398,
						1420,
						1421
					]
				},
				{
					"title": "Methods",
					"children": [
						1338,
						1343,
						1346,
						1363,
						1500,
						1495,
						1393,
						1375,
						1361,
						1340,
						1455,
						1399,
						1383,
						1483,
						1467,
						1475,
						1491,
						1372,
						1461,
						1465,
						1443,
						1449,
						1390,
						1358,
						1355,
						1377,
						1440,
						1369,
						1380,
						1387,
						1452,
						1336,
						1405,
						1459,
						1463,
						1366,
						1457,
						1385,
						1434,
						1446,
						1437,
						1408,
						1349,
						1352
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/CallSession.ts",
					"line": 37,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/CallSession.ts#L37"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/client",
						"packagePath": "src/utils/interfaces/fabric.ts",
						"qualifiedName": "CallSessionContract"
					},
					"name": "CallSessionContract",
					"package": "@signalwire/client"
				},
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/core",
						"packagePath": "src/types/fabricRoomSession.ts",
						"qualifiedName": "CallSessionMethods"
					},
					"name": "CallSessionMethods",
					"package": "@signalwire/core"
				},
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/client",
						"packagePath": "src/utils/interfaces/base.ts",
						"qualifiedName": "BaseRoomSessionContract"
					},
					"name": "BaseRoomSessionContract",
					"package": "@signalwire/client"
				},
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/core",
						"packagePath": "src/types/index.ts",
						"qualifiedName": "BaseConnectionContract"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 555,
							"name": "CallSessionEvents",
							"package": "@signalwire/client"
						}
					],
					"name": "BaseConnectionContract",
					"package": "@signalwire/core"
				},
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/core",
						"packagePath": "src/types/index.ts",
						"qualifiedName": "BaseComponentContract"
					},
					"name": "BaseComponentContract",
					"package": "@signalwire/core"
				}
			]
		},
		{
			"id": 283,
			"name": "CallStateEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "call.state"
					}
				]
			},
			"children": [
				{
					"id": 291,
					"name": "answer_time",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 687,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L687"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 284,
					"name": "call_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 680,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L680"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 287,
					"name": "call_state",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 683,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L683"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/fabricRoomSession.ts",
							"qualifiedName": "CallStates"
						},
						"name": "CallStates",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 289,
					"name": "device",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 685,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L685"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/fabricRoomSession.ts",
							"qualifiedName": "CallDevice"
						},
						"name": "CallDevice",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 288,
					"name": "direction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 684,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L684"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/fabricRoomSession.ts",
							"qualifiedName": "CallDirection"
						},
						"name": "CallDirection",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 292,
					"name": "end_time",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 688,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L688"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 285,
					"name": "node_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 681,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L681"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 293,
					"name": "room_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 689,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L689"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 286,
					"name": "segment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 682,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L682"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 290,
					"name": "start_time",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 686,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L686"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						291,
						284,
						287,
						289,
						288,
						292,
						285,
						293,
						286,
						290
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricRoomSession.ts",
					"line": 679,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L679"
				}
			]
		},
		{
			"id": 271,
			"name": "CallUpdatedEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "call.updated"
					}
				]
			},
			"children": [
				{
					"id": 273,
					"name": "room_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 649,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L649"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 272,
					"name": "room_session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 648,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L648"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/fabricRoomSession.ts",
							"qualifiedName": "InternalCallSessionEntity"
						},
						"name": "InternalCallSessionEntity",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 274,
					"name": "room_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 650,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L650"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						273,
						272,
						274
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricRoomSession.ts",
					"line": 647,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L647"
				}
			]
		},
		{
			"id": 587,
			"name": "CapabilityOnOffStateContract",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 589,
					"name": "off",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 3,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L3"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 588,
					"name": "on",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 2,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L2"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						589,
						588
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
					"line": 1,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L1"
				}
			]
		},
		{
			"id": 51,
			"name": "ClientFactoryContract",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Contract for the ClientFactory"
					}
				]
			},
			"children": [
				{
					"id": 55,
					"name": "addProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 155,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L155"
						}
					],
					"signatures": [
						{
							"id": 56,
							"name": "addProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add one or more authentication profiles"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of created profiles"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 155,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L155"
								}
							],
							"parameters": [
								{
									"id": 57,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profiles to add"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 37,
										"name": "AddProfilesParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15,
											"name": "Profile",
											"package": "@signalwire/client"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 69,
					"name": "disposeClient",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 188,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L188"
						}
					],
					"signatures": [
						{
							"id": 70,
							"name": "disposeClient",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Dispose of a client instance"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 188,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L188"
								}
							],
							"parameters": [
								{
									"id": 71,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disposal parameters"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 49,
										"name": "DisposeClientParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 66,
					"name": "getClient",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 182,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L182"
						}
					],
					"signatures": [
						{
							"id": 67,
							"name": "getClient",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get or create a client instance for a profile"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Client instance information"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 182,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L182"
								}
							],
							"parameters": [
								{
									"id": 68,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Client request parameters"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 42,
										"name": "GetClientParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 46,
										"name": "GetClientResult",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 63,
					"name": "getProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 175,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L175"
						}
					],
					"signatures": [
						{
							"id": 64,
							"name": "getProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a specific profile by ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Profile or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 175,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L175"
								}
							],
							"parameters": [
								{
									"id": 65,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 15,
												"name": "Profile",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 52,
					"name": "init",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 148,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L148"
						}
					],
					"signatures": [
						{
							"id": 53,
							"name": "init",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initialize the factory with storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 148,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L148"
								}
							],
							"parameters": [
								{
									"id": 54,
									"name": "storage",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional storage implementation"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 359,
										"name": "SignalWireStorageContract",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 72,
					"name": "listActiveClients",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 194,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L194"
						}
					],
					"signatures": [
						{
							"id": 73,
							"name": "listActiveClients",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all active client instances"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of active instances"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 194,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L194"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30,
											"name": "ManagedInstance",
											"package": "@signalwire/client"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 61,
					"name": "listProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 168,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L168"
						}
					],
					"signatures": [
						{
							"id": 62,
							"name": "listProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all available profiles"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of all profiles"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 168,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L168"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15,
											"name": "Profile",
											"package": "@signalwire/client"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58,
					"name": "removeProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 162,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L162"
						}
					],
					"signatures": [
						{
							"id": 59,
							"name": "removeProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove one or more authentication profiles"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of successfully removed profile IDs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 162,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L162"
								}
							],
							"parameters": [
								{
									"id": 60,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile IDs to remove"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 39,
										"name": "RemoveProfilesParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						55,
						69,
						66,
						63,
						52,
						72,
						61,
						58
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 143,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L143"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 1665,
					"name": "ClientFactory"
				}
			]
		},
		{
			"id": 425,
			"name": "ConnectionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 450,
					"name": "additionalDevice",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 54,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L54"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 438,
					"name": "attach",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 36,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L36"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 436,
					"name": "audio",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Audio constraints to use when joining the room. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 32,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L32"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackConstraints"
								},
								"name": "MediaTrackConstraints",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 463,
					"name": "autoApplyMediaParams",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 80,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L80"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 429,
					"name": "callerName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 430,
					"name": "callerNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 442,
					"name": "camId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 44,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L44"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 443,
					"name": "camLabel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 46,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L46"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 480,
					"name": "connectionPoolSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number of connections to maintain in the connection pool.\nSet to 0 to disable connection pooling. Default: 3"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 112,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L112"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 426,
					"name": "destinationNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 435,
					"name": "disableUdpIceServers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Disable ICE UDP transport policy"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 30,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 481,
					"name": "enableConnectionPool",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to enable connection pooling for faster call setup.\nWhen enabled, maintains pre-warmed RTCPeerConnections with gathered ICE candidates.\nDefault: true"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 120,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L120"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 476,
					"name": "fromCallAddressId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 100,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L100"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 452,
					"name": "googleMaxBitrate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 58,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L58"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 453,
					"name": "googleMinBitrate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 60,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L60"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 454,
					"name": "googleStartBitrate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 62,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L62"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 482,
					"name": "iceCandidatePoolSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Size of the ICE candidate pool for reuse.\nAllows ICE candidates to be reused when tracks are replaced.\nDefault: 10"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 128,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L128"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 468,
					"name": "iceGatheringTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 84,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L84"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 434,
					"name": "iceServers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of ICE servers."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L28"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"packageName": "typescript",
								"packagePath": "lib/lib.dom.d.ts",
								"qualifiedName": "RTCIceServer"
							},
							"name": "RTCIceServer",
							"package": "typescript"
						}
					}
				},
				{
					"id": 478,
					"name": "layout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 104,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L104"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 432,
					"name": "localStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 24,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L24"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.dom.d.ts",
							"qualifiedName": "MediaStream"
						},
						"name": "MediaStream",
						"package": "typescript"
					}
				},
				{
					"id": 470,
					"name": "maxConnectionStateTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 88,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L88"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 469,
					"name": "maxIceGatheringTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 86,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L86"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 440,
					"name": "micId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 40,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 441,
					"name": "micLabel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 42,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L42"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 459,
					"name": "msStreamsNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 72,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L72"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 455,
					"name": "negotiateAudio",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 64,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L64"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 456,
					"name": "negotiateVideo",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 66,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L66"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 475,
					"name": "nodeId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 98,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L98"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 473,
					"name": "pingSupported",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 94,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L94"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 479,
					"name": "positions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 105,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L105"
						}
					],
					"type": {
						"type": "reference",
						"target": 270,
						"name": "VideoPositions",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 474,
					"name": "prevCallId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 96,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L96"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 477,
					"name": "profileId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 102,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L102"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 451,
					"name": "recoverCall",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 56,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L56"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 427,
					"name": "remoteCallerName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 428,
					"name": "remoteCallerNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 431,
					"name": "remoteSdp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 22,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L22"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 433,
					"name": "remoteStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 26,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L26"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.dom.d.ts",
							"qualifiedName": "MediaStream"
						},
						"name": "MediaStream",
						"package": "typescript"
					}
				},
				{
					"id": 460,
					"name": "requestTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 74,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L74"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 464,
					"name": "rtcPeerConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 82,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L82"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 465,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/interfaces.ts",
									"line": 82,
									"character": 18,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L82"
								}
							],
							"indexSignatures": [
								{
									"id": 466,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/webrtc/src/utils/interfaces.ts",
											"line": 82,
											"character": 20,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L82"
										}
									],
									"parameters": [
										{
											"id": 467,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 449,
					"name": "screenShare",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 52,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L52"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 457,
					"name": "sfu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 68,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L68"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 461,
					"name": "shakenCheck",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 76,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L76"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 462,
					"name": "shakenResult",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 78,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 458,
					"name": "simulcast",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 70,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L70"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 444,
					"name": "speakerId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Id of the speaker device to use for audio output. If undefined, picks a default speaker."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 445,
					"name": "userVariables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 50,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L50"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 446,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/interfaces.ts",
									"line": 50,
									"character": 18,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L50"
								}
							],
							"indexSignatures": [
								{
									"id": 447,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/webrtc/src/utils/interfaces.ts",
											"line": 50,
											"character": 20,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L50"
										}
									],
									"parameters": [
										{
											"id": 448,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 439,
					"name": "useStereo",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 437,
					"name": "video",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Video constraints to use when joining the room. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 34,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L34"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackConstraints"
								},
								"name": "MediaTrackConstraints",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 471,
					"name": "watchMediaPackets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 90,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L90"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 472,
					"name": "watchMediaPacketsTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/interfaces.ts",
							"line": 92,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L92"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						450,
						438,
						436,
						463,
						429,
						430,
						442,
						443,
						480,
						426,
						435,
						481,
						476,
						452,
						453,
						454,
						482,
						468,
						434,
						478,
						432,
						470,
						469,
						440,
						441,
						459,
						455,
						456,
						475,
						473,
						479,
						474,
						477,
						451,
						427,
						428,
						431,
						433,
						460,
						464,
						449,
						457,
						461,
						462,
						458,
						444,
						445,
						439,
						437,
						471,
						472
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/webrtc/src/utils/interfaces.ts",
					"line": 8,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/interfaces.ts#L8"
				}
			]
		},
		{
			"id": 705,
			"name": "ConversationAPIGetMessagesParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 706,
					"name": "pageSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 143,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L143"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						706
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 142,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L142"
				}
			]
		},
		{
			"id": 702,
			"name": "ConversationAPISendMessageParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Conversation API"
					}
				]
			},
			"children": [
				{
					"id": 703,
					"name": "fromAddressId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 138,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L138"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 704,
					"name": "text",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 139,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L139"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						703,
						704
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 137,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L137"
				}
			]
		},
		{
			"id": 656,
			"name": "ConversationChatMessagesSubscribeParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 657,
					"name": "groupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 69,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L69"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 658,
					"name": "onMessage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 70,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L70"
						}
					],
					"type": {
						"type": "reference",
						"target": 1,
						"name": "ConversationChatSubscribeCallback",
						"package": "@signalwire/client"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						657,
						658
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 68,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L68"
				}
			]
		},
		{
			"id": 612,
			"name": "ConversationContract",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 613,
					"name": "createdAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 8,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 618,
					"name": "fromAddressId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 13,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 614,
					"name": "groupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 9,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 615,
					"name": "lastMessageAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 10,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 616,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 11,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 617,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 12,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 622,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L17"
						}
					],
					"signatures": [
						{
							"id": 623,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/conversation.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L17"
								}
							],
							"parameters": [
								{
									"id": 624,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 705,
										"name": "ConversationAPIGetMessagesParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 701,
										"name": "GetConversationMessagesResult",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 619,
					"name": "sendMessage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 620,
							"name": "sendMessage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/conversation.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L14"
								}
							],
							"parameters": [
								{
									"id": 621,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 702,
										"name": "ConversationAPISendMessageParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 631,
										"name": "SendConversationMessageResponse",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						613,
						618,
						614,
						615,
						616,
						617
					]
				},
				{
					"title": "Methods",
					"children": [
						622,
						619
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 7,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L7"
				}
			]
		},
		{
			"id": 670,
			"name": "ConversationMessage",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 676,
					"name": "details",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 102,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L102"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 672,
					"name": "from_fabric_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 98,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L98"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 673,
					"name": "group_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 99,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L99"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 671,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 97,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L97"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 679,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 105,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L105"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 675,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 101,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L101"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 678,
					"name": "subtype",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 104,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L104"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 680,
					"name": "text",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 106,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L106"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 674,
					"name": "ts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 100,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L100"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 677,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 103,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L103"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						676,
						672,
						673,
						671,
						679,
						675,
						678,
						680,
						674,
						677
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 96,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L96"
				}
			]
		},
		{
			"id": 318,
			"name": "ConversationMessageEvent",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 321,
					"name": "event_channel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L16"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SwEvent.event_channel"
					}
				},
				{
					"id": 319,
					"name": "event_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 30,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L30"
						}
					],
					"type": {
						"type": "literal",
						"value": "conversation.message"
					}
				},
				{
					"id": 320,
					"name": "params",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L31"
						}
					],
					"type": {
						"type": "reference",
						"target": 1837,
						"name": "ConversationMessageEventParams",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 322,
					"name": "timestamp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SwEvent.timestamp"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						321,
						319,
						320,
						322
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/conversation.ts",
					"line": 29,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L29"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/core",
						"packagePath": "src/types/index.ts",
						"qualifiedName": "SwEvent"
					},
					"name": "SwEvent",
					"package": "@signalwire/core"
				}
			]
		},
		{
			"id": 1837,
			"name": "ConversationMessageEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1839,
					"name": "details",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L7"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1848,
					"name": "from_fabric_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L16"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1838,
					"name": "group_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 6,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L6"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1840,
					"name": "hidden",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 8,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1841,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1842,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 10,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1843,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1844,
					"name": "subtype",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 12,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L12"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "chat"
							},
							{
								"type": "literal",
								"value": "update"
							}
						]
					}
				},
				{
					"id": 1845,
					"name": "text",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L13"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1846,
					"name": "ts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1847,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1849,
					"name": "user_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/conversation.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1839,
						1848,
						1838,
						1840,
						1841,
						1842,
						1843,
						1844,
						1845,
						1846,
						1847,
						1849
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/conversation.ts",
					"line": 5,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L5"
				}
			]
		},
		{
			"id": 639,
			"name": "ConversationResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 641,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L45"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 642,
					"name": "from_fabric_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 46,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L46"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 640,
					"name": "group_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 44,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L44"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 643,
					"name": "last_message_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 47,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L47"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 644,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L48"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 645,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 49,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L49"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						641,
						642,
						640,
						643,
						644,
						645
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 43,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L43"
				}
			]
		},
		{
			"id": 652,
			"name": "ConversationSubscribeResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 653,
					"name": "unsubscribe",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 65,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L65"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 654,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/conversation.ts",
									"line": 65,
									"character": 15,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L65"
								}
							],
							"signatures": [
								{
									"id": 655,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/conversation.ts",
											"line": 65,
											"character": 15,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L65"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						653
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 64,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L64"
				}
			]
		},
		{
			"id": 311,
			"name": "CoreRoomEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "call.room"
					}
				]
			},
			"children": [
				{
					"id": 313,
					"name": "call_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 739,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L739"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 312,
					"name": "joined_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 738,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L738"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 314,
					"name": "node_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 740,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L740"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 316,
					"name": "room_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 742,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L742"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 315,
					"name": "segment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricRoomSession.ts",
							"line": 741,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L741"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						313,
						312,
						314,
						316,
						315
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricRoomSession.ts",
					"line": 737,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L737"
				}
			]
		},
		{
			"id": 767,
			"name": "DialParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 776,
					"name": "applyLocalVideoOverlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to apply the local-overlay on top of your video. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 114,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L114"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.applyLocalVideoOverlay"
					}
				},
				{
					"id": 777,
					"name": "applyMemberOverlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to apply an overlay on top of each member. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 116,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L116"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.applyMemberOverlay"
					}
				},
				{
					"id": 772,
					"name": "audio",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Audio constraints to use when joining the room. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 106,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L106"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackConstraints"
								},
								"name": "MediaTrackConstraints",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.audio"
					}
				},
				{
					"id": 771,
					"name": "disableUdpIceServers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Disable ICE UDP transport policy"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 104,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L104"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.disableUdpIceServers"
					}
				},
				{
					"id": 781,
					"name": "fromCallAddressId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Call address ID matching one of the subscriber’s addresses to attribute conversation API events in the INVITE."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 124,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L124"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.fromCallAddressId"
					}
				},
				{
					"id": 770,
					"name": "listen",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional event listeners for the call session"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 131,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L131"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/client",
									"packagePath": "src/utils/interfaces/fabric.ts",
									"qualifiedName": "CallListeners"
								},
								"name": "CallListeners",
								"package": "@signalwire/client"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 778,
					"name": "mirrorLocalVideoOverlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to mirror the local video overlay. Default: "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 118,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L118"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.mirrorLocalVideoOverlay"
					}
				},
				{
					"id": 774,
					"name": "negotiateAudio",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Negotiate the incoming audio from the RTC. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 110,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L110"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.negotiateAudio"
					}
				},
				{
					"id": 775,
					"name": "negotiateVideo",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Negotiate the incoming video from the RTC. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " for \"video\" channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 112,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L112"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.negotiateVideo"
					}
				},
				{
					"id": 769,
					"name": "nodeId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 129,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L129"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 782,
					"name": "rootElement",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "HTML element in which to display the video stream"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 97,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L97"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "HTMLElement"
								},
								"name": "HTMLElement",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.rootElement"
					}
				},
				{
					"id": 779,
					"name": "stopCameraWhileMuted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to stop the camera when the member is muted. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 120,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L120"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.stopCameraWhileMuted"
					}
				},
				{
					"id": 780,
					"name": "stopMicrophoneWhileMuted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to stop the microphone when the member is muted. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 122,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L122"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.stopMicrophoneWhileMuted"
					}
				},
				{
					"id": 768,
					"name": "to",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 128,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L128"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 783,
					"name": "userVariables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "User & UserAgent metadata"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 99,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L99"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.userVariables"
					}
				},
				{
					"id": 773,
					"name": "video",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Video constraints to use when joining the room. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " for \"video\" channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 108,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L108"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackConstraints"
								},
								"name": "MediaTrackConstraints",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.video"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						776,
						777,
						772,
						771,
						781,
						770,
						778,
						774,
						775,
						769,
						782,
						779,
						780,
						768,
						783,
						773
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
					"line": 127,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L127"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/client",
						"packagePath": "src/unified/interfaces/wsClient.ts",
						"qualifiedName": "CallParams"
					},
					"name": "CallParams",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 49,
			"name": "DisposeClientParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters for disposing a client instance"
					}
				]
			},
			"children": [
				{
					"id": 50,
					"name": "instanceId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 137,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L137"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						50
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 136,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L136"
				}
			]
		},
		{
			"id": 214,
			"name": "EmitterContract",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 234,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 235,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 43,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L43"
								}
							],
							"typeParameters": [
								{
									"id": 236,
									"name": "E",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 237,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 236,
										"name": "E",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 238,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Parameters"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "eventemitter3",
													"packagePath": "index.d.ts",
													"qualifiedName": "EventEmitter.EventListener"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 239,
														"name": "EventTypes",
														"package": "@signalwire/core",
														"qualifiedName": "EmitterContract.EventTypes",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 236,
														"name": "E",
														"package": "@signalwire/core",
														"refersToTypeParameter": true
													}
												],
												"name": "EventListener",
												"package": "eventemitter3",
												"qualifiedName": "EventEmitter.EventListener"
											}
										],
										"name": "Parameters",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 225,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 226,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L33"
								}
							],
							"typeParameters": [
								{
									"id": 227,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 228,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 227,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 229,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "eventemitter3",
											"packagePath": "index.d.ts",
											"qualifiedName": "EventEmitter.EventListener"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 239,
												"name": "EventTypes",
												"package": "@signalwire/core",
												"qualifiedName": "EmitterContract.EventTypes",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 227,
												"name": "T",
												"package": "@signalwire/core",
												"refersToTypeParameter": true
											}
										],
										"name": "EventListener",
										"package": "eventemitter3",
										"qualifiedName": "EventEmitter.EventListener"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 239,
										"name": "EventTypes",
										"package": "@signalwire/core",
										"qualifiedName": "EmitterContract.EventTypes",
										"refersToTypeParameter": true
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							}
						}
					]
				},
				{
					"id": 215,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L23"
								}
							],
							"typeParameters": [
								{
									"id": 217,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 218,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 217,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 219,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "eventemitter3",
											"packagePath": "index.d.ts",
											"qualifiedName": "EventEmitter.EventListener"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 239,
												"name": "EventTypes",
												"package": "@signalwire/core",
												"qualifiedName": "EmitterContract.EventTypes",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 217,
												"name": "T",
												"package": "@signalwire/core",
												"refersToTypeParameter": true
											}
										],
										"name": "EventListener",
										"package": "eventemitter3",
										"qualifiedName": "EventEmitter.EventListener"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 239,
										"name": "EventTypes",
										"package": "@signalwire/core",
										"qualifiedName": "EmitterContract.EventTypes",
										"refersToTypeParameter": true
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							}
						}
					]
				},
				{
					"id": 220,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 221,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L28"
								}
							],
							"typeParameters": [
								{
									"id": 222,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 223,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 222,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 224,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "eventemitter3",
											"packagePath": "index.d.ts",
											"qualifiedName": "EventEmitter.EventListener"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 239,
												"name": "EventTypes",
												"package": "@signalwire/core",
												"qualifiedName": "EmitterContract.EventTypes",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 222,
												"name": "T",
												"package": "@signalwire/core",
												"refersToTypeParameter": true
											}
										],
										"name": "EventListener",
										"package": "eventemitter3",
										"qualifiedName": "EventEmitter.EventListener"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 239,
										"name": "EventTypes",
										"package": "@signalwire/core",
										"qualifiedName": "EmitterContract.EventTypes",
										"refersToTypeParameter": true
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							}
						}
					]
				},
				{
					"id": 230,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 231,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L38"
								}
							],
							"typeParameters": [
								{
									"id": 232,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 233,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 232,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 239,
										"name": "EventTypes",
										"package": "@signalwire/core",
										"qualifiedName": "EmitterContract.EventTypes",
										"refersToTypeParameter": true
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						234,
						225,
						215,
						220,
						230
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/index.ts",
					"line": 20,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L20"
				}
			],
			"typeParameters": [
				{
					"id": 239,
					"name": "EventTypes",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "eventemitter3",
							"packagePath": "index.d.ts",
							"qualifiedName": "EventEmitter.ValidEventTypes"
						},
						"name": "EventEmitter.ValidEventTypes",
						"package": "eventemitter3"
					}
				}
			]
		},
		{
			"id": 579,
			"name": "GetAddressByIdParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 580,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						580
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/address.ts",
					"line": 32,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L32"
				}
			]
		},
		{
			"id": 581,
			"name": "GetAddressByNameParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 582,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 37,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L37"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						582
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/address.ts",
					"line": 36,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L36"
				}
			]
		},
		{
			"id": 573,
			"name": "GetAddressesParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 575,
					"name": "displayName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 26,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L26"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 576,
					"name": "pageSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L27"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 577,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L28"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "name"
							},
							{
								"type": "literal",
								"value": "created_at"
							}
						]
					}
				},
				{
					"id": 578,
					"name": "sortOrder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L29"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "asc"
							},
							{
								"type": "literal",
								"value": "desc"
							}
						]
					}
				},
				{
					"id": 574,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						575,
						576,
						577,
						578,
						574
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/address.ts",
					"line": 24,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L24"
				}
			]
		},
		{
			"id": 557,
			"name": "GetAddressResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 565,
					"name": "channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L13"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 566,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 567,
									"name": "audio",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/address.ts",
											"line": 14,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 568,
									"name": "messaging",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/address.ts",
											"line": 15,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L15"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 569,
									"name": "video",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/address.ts",
											"line": 16,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L16"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										567,
										568,
										569
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/address.ts",
									"line": 13,
									"character": 12,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L13"
								}
							]
						}
					}
				},
				{
					"id": 562,
					"name": "cover_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 10,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 571,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 559,
					"name": "display_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 558,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 6,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L6"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 570,
					"name": "locked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 18,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 560,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 8,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 561,
					"name": "preview_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 563,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 564,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/address.ts",
							"line": 12,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L12"
						}
					],
					"type": {
						"type": "reference",
						"target": 556,
						"name": "ResourceType",
						"package": "@signalwire/client"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						565,
						562,
						571,
						559,
						558,
						570,
						560,
						561,
						563,
						564
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/address.ts",
					"line": 5,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L5"
				}
			]
		},
		{
			"id": 42,
			"name": "GetClientParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters for getting a client instance"
					}
				]
			},
			"children": [
				{
					"id": 44,
					"name": "addressId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address ID to find a suitable profile for. Used if profileId is not provided"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 119,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L119"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 45,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Signalwire client options"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 121,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L121"
						}
					],
					"type": {
						"type": "reference",
						"target": 41,
						"name": "GetClientParamsOptions",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 43,
					"name": "profileId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Profile ID to use for the client. Takes priority over addressId"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 117,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L117"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						44,
						45,
						43
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 115,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L115"
				}
			]
		},
		{
			"id": 46,
			"name": "GetClientResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Result from getting a client instance"
					}
				]
			},
			"children": [
				{
					"id": 47,
					"name": "instance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 128,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L128"
						}
					],
					"type": {
						"type": "reference",
						"target": 30,
						"name": "ManagedInstance",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 48,
					"name": "isNew",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether this is a newly created instance"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 130,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L130"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						47,
						48
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 127,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L127"
				}
			]
		},
		{
			"id": 686,
			"name": "GetConversationChatMessageParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 687,
					"name": "groupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 117,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L117"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 688,
					"name": "pageSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 118,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L118"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						687,
						688
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 116,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L116"
				}
			]
		},
		{
			"id": 698,
			"name": "GetConversationMessagesParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 699,
					"name": "groupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 128,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L128"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 700,
					"name": "pageSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 129,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L129"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						699,
						700
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 127,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L127"
				}
			]
		},
		{
			"id": 690,
			"name": "GetConversationMessagesResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 691,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 44,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L44"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 670,
							"name": "ConversationMessage",
							"package": "@signalwire/client"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 921,
						"name": "PaginatedResponse.data"
					}
				},
				{
					"id": 692,
					"name": "links",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L45"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 693,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 694,
									"name": "first",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 46,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L46"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 696,
									"name": "next",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 48,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L48"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 697,
									"name": "prev",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 49,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L49"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 695,
									"name": "self",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 47,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L47"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										694,
										696,
										697,
										695
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/index.ts",
									"line": 45,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L45"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 922,
						"name": "PaginatedResponse.links"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						691,
						692
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 124,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L124"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 920,
					"typeArguments": [
						{
							"type": "reference",
							"target": 670,
							"name": "ConversationMessage",
							"package": "@signalwire/client"
						}
					],
					"name": "PaginatedResponse",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 637,
			"name": "GetConversationsParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 638,
					"name": "pageSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 40,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						638
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 39,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L39"
				}
			]
		},
		{
			"id": 668,
			"name": "GetMessagesParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Conversation Messages"
					}
				]
			},
			"children": [
				{
					"id": 669,
					"name": "pageSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 93,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L93"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						669
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 92,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L92"
				}
			]
		},
		{
			"id": 902,
			"name": "GetSubscriberInfoResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 914,
					"name": "app_settings",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 79,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L79"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 915,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 916,
									"name": "display_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 80,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L80"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 917,
									"name": "scopes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 81,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L81"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										916,
										917
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/index.ts",
									"line": 79,
									"character": 17,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L79"
								}
							]
						}
					}
				},
				{
					"id": 912,
					"name": "company_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 77,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L77"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 910,
					"name": "country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 75,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L75"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 907,
					"name": "display_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 72,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L72"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 904,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 69,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L69"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 918,
					"name": "fabric_addresses",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 83,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L83"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 557,
							"name": "GetAddressResponse",
							"package": "@signalwire/client"
						}
					}
				},
				{
					"id": 905,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 70,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L70"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 903,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 68,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L68"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 908,
					"name": "job_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 73,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L73"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 906,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 71,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L71"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 913,
					"name": "push_notification_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 78,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 911,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 76,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L76"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 909,
					"name": "time_zone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 74,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L74"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						914,
						912,
						910,
						907,
						904,
						918,
						905,
						903,
						908,
						906,
						913,
						911,
						909
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/index.ts",
					"line": 67,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L67"
				}
			]
		},
		{
			"id": 765,
			"name": "HandlePushNotificationResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 766,
					"name": "resultType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 88,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L88"
						}
					],
					"type": {
						"type": "literal",
						"value": "inboundCall"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						766
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
					"line": 87,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L87"
				}
			]
		},
		{
			"id": 756,
			"name": "IncomingCallHandlers",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 757,
					"name": "all",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L33"
						}
					],
					"type": {
						"type": "reference",
						"target": 752,
						"name": "IncomingCallHandler",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 758,
					"name": "pushNotification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 34,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L34"
						}
					],
					"type": {
						"type": "reference",
						"target": 752,
						"name": "IncomingCallHandler",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 759,
					"name": "websocket",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 35,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L35"
						}
					],
					"type": {
						"type": "reference",
						"target": 752,
						"name": "IncomingCallHandler",
						"package": "@signalwire/client"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						757,
						758,
						759
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
					"line": 32,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L32"
				}
			]
		},
		{
			"id": 741,
			"name": "IncomingCallNotification",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 742,
					"name": "invite",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 22,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L22"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 743,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 745,
									"name": "accept",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
											"line": 24,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L24"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 746,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
													"line": 24,
													"character": 12,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L24"
												}
											],
											"signatures": [
												{
													"id": 747,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
															"line": 24,
															"character": 12,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L24"
														}
													],
													"parameters": [
														{
															"id": 748,
															"name": "param",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "@signalwire/client",
																	"packagePath": "src/unified/interfaces/wsClient.ts",
																	"qualifiedName": "CallParams"
																},
																"name": "CallParams",
																"package": "@signalwire/client"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 1332,
														"name": "CallSession",
														"package": "@signalwire/client"
													}
												}
											]
										}
									}
								},
								{
									"id": 744,
									"name": "details",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
											"line": 23,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L23"
										}
									],
									"type": {
										"type": "reference",
										"target": 722,
										"name": "IncomingInvite",
										"package": "@signalwire/client"
									}
								},
								{
									"id": 749,
									"name": "reject",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
											"line": 25,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L25"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 750,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
													"line": 25,
													"character": 12,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L25"
												}
											],
											"signatures": [
												{
													"id": 751,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
															"line": 25,
															"character": 12,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L25"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										745,
										744,
										749
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
									"line": 22,
									"character": 10,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L22"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						742
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
					"line": 21,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L21"
				}
			]
		},
		{
			"id": 722,
			"name": "IncomingInvite",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 727,
					"name": "callee_id_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 728,
					"name": "callee_id_number",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 12,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 725,
					"name": "caller_id_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 726,
					"name": "caller_id_number",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 10,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 723,
					"name": "callID",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 729,
					"name": "display_direction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 730,
					"name": "nodeId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 724,
					"name": "sdp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 8,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						727,
						728,
						725,
						726,
						723,
						729,
						730,
						724
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L6"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 731,
					"name": "IncomingInviteWithSource"
				}
			]
		},
		{
			"id": 731,
			"name": "IncomingInviteWithSource",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 737,
					"name": "callee_id_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 727,
						"name": "IncomingInvite.callee_id_name"
					}
				},
				{
					"id": 738,
					"name": "callee_id_number",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 12,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 728,
						"name": "IncomingInvite.callee_id_number"
					}
				},
				{
					"id": 735,
					"name": "caller_id_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 725,
						"name": "IncomingInvite.caller_id_name"
					}
				},
				{
					"id": 736,
					"name": "caller_id_number",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 10,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 726,
						"name": "IncomingInvite.caller_id_number"
					}
				},
				{
					"id": 733,
					"name": "callID",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 723,
						"name": "IncomingInvite.callID"
					}
				},
				{
					"id": 739,
					"name": "display_direction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 729,
						"name": "IncomingInvite.display_direction"
					}
				},
				{
					"id": 740,
					"name": "nodeId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 730,
						"name": "IncomingInvite.nodeId"
					}
				},
				{
					"id": 734,
					"name": "sdp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 8,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 724,
						"name": "IncomingInvite.sdp"
					}
				},
				{
					"id": 732,
					"name": "source",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 18,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L18"
						}
					],
					"type": {
						"type": "reference",
						"target": 721,
						"name": "IncomingInviteSource",
						"package": "@signalwire/client"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						737,
						738,
						735,
						736,
						733,
						739,
						740,
						734,
						732
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
					"line": 17,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L17"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 722,
					"name": "IncomingInvite",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 107,
			"name": "InstanceManagerContract",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Contract for the InstanceManager"
					}
				]
			},
			"children": [
				{
					"id": 108,
					"name": "createInstance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 292,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L292"
						}
					],
					"signatures": [
						{
							"id": 109,
							"name": "createInstance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new client instance"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Created instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 292,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L292"
								}
							],
							"parameters": [
								{
									"id": 110,
									"name": "profile",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile data"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15,
										"name": "Profile",
										"package": "@signalwire/client"
									}
								},
								{
									"id": 111,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "SignalwireClient options"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 41,
										"name": "GetClientParamsOptions",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 30,
										"name": "ManagedInstance",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 112,
					"name": "disposeInstance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 303,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L303"
						}
					],
					"signatures": [
						{
							"id": 113,
							"name": "disposeInstance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Dispose of a client instance"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the instance was disposed"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 303,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L303"
								}
							],
							"parameters": [
								{
									"id": 114,
									"name": "instanceId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Instance ID to dispose"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 115,
					"name": "getInstance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 310,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L310"
						}
					],
					"signatures": [
						{
							"id": 116,
							"name": "getInstance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get an existing instance"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Instance or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 310,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L310"
								}
							],
							"parameters": [
								{
									"id": 117,
									"name": "instanceId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Instance identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 30,
												"name": "ManagedInstance",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 118,
					"name": "getInstanceByProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 317,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L317"
						}
					],
					"signatures": [
						{
							"id": 119,
							"name": "getInstanceByProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get instance by profile ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Instance or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 317,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L317"
								}
							],
							"parameters": [
								{
									"id": 120,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 30,
												"name": "ManagedInstance",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 121,
					"name": "listInstances",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 323,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L323"
						}
					],
					"signatures": [
						{
							"id": 122,
							"name": "listInstances",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all active instances"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of active instances"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 323,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L323"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30,
											"name": "ManagedInstance",
											"package": "@signalwire/client"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 123,
					"name": "updateInstanceAccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 329,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L329"
						}
					],
					"signatures": [
						{
							"id": 124,
							"name": "updateInstanceAccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update instance access tracking"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 329,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L329"
								}
							],
							"parameters": [
								{
									"id": 125,
									"name": "instanceId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Instance identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						108,
						112,
						115,
						118,
						121,
						123
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 284,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L284"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 1810,
					"name": "InstanceManager"
				}
			]
		},
		{
			"id": 660,
			"name": "JoinConversationParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 661,
					"name": "addressIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 77,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L77"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 662,
					"name": "fromAddressId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 78,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						661,
						662
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 76,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L76"
				}
			]
		},
		{
			"id": 663,
			"name": "JoinConversationResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 665,
					"name": "addressIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 83,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L83"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 666,
					"name": "from_fabric_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 84,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L84"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 664,
					"name": "group_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 82,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L82"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						665,
						666,
						664
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 81,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L81"
				}
			]
		},
		{
			"id": 30,
			"name": "ManagedInstance",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Managed client instance information"
					}
				]
			},
			"children": [
				{
					"id": 33,
					"name": "client",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The actual SignalWire client instance"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 78,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L78"
						}
					],
					"type": {
						"type": "reference",
						"target": 802,
						"name": "SignalWireContract",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 34,
					"name": "createdAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Timestamp when the instance was created"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 81,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L81"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 31,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Unique identifier for the instance"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 72,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L72"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35,
					"name": "lastAccessedAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Timestamp when the instance was last accessed"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 84,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L84"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 32,
					"name": "profileId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Profile ID used to create this instance"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 75,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L75"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36,
					"name": "usageCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number of times this instance has been accessed"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 87,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L87"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33,
						34,
						31,
						35,
						32,
						36
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 70,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L70"
				}
			]
		},
		{
			"id": 590,
			"name": "MemberCapabilityContract",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 601,
					"name": "audioFlags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 596,
					"name": "deaf",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 12,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L12"
						}
					],
					"type": {
						"type": "reference",
						"target": 587,
						"name": "CapabilityOnOffStateContract",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 599,
					"name": "meta",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 594,
					"name": "microphoneSensitivity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 10,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 593,
					"name": "microphoneVolume",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 591,
					"name": "muteAudio",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L7"
						}
					],
					"type": {
						"type": "reference",
						"target": 587,
						"name": "CapabilityOnOffStateContract",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 592,
					"name": "muteVideo",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 8,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L8"
						}
					],
					"type": {
						"type": "reference",
						"target": 587,
						"name": "CapabilityOnOffStateContract",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 598,
					"name": "position",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 597,
					"name": "raisehand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L13"
						}
					],
					"type": {
						"type": "reference",
						"target": 587,
						"name": "CapabilityOnOffStateContract",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 600,
					"name": "remove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L16"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 595,
					"name": "speakerVolume",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						601,
						596,
						599,
						594,
						593,
						591,
						592,
						598,
						597,
						600,
						595
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/capabilities.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/capabilities.ts#L6"
				}
			]
		},
		{
			"id": 335,
			"name": "MemberJoinedEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "member.joined"
					}
				]
			},
			"children": [
				{
					"id": 336,
					"name": "member",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 160,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L160"
						}
					],
					"type": {
						"type": "reference",
						"target": 358,
						"name": "InternalMemberEntity",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 337,
					"name": "room_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 161,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L161"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 338,
					"name": "room_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 162,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L162"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						336,
						337,
						338
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricMember.ts",
					"line": 159,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L159"
				}
			]
		},
		{
			"id": 343,
			"name": "MemberLeftEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "member.left"
					}
				]
			},
			"children": [
				{
					"id": 344,
					"name": "member",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 188,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L188"
						}
					],
					"type": {
						"type": "reference",
						"target": 358,
						"name": "InternalMemberEntity",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 347,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 191,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L191"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 345,
					"name": "room_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 189,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L189"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 346,
					"name": "room_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 190,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L190"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						344,
						347,
						345,
						346
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricMember.ts",
					"line": 187,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L187"
				}
			]
		},
		{
			"id": 348,
			"name": "MemberTalkingEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "member.talking"
					}
				]
			},
			"children": [
				{
					"id": 351,
					"name": "member",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 205,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L205"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 352,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 353,
									"name": "member_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/core/src/types/fabricMember.ts",
											"line": 206,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L206"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 355,
									"name": "node_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/core/src/types/fabricMember.ts",
											"line": 208,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L208"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 354,
									"name": "talking",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/core/src/types/fabricMember.ts",
											"line": 207,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L207"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										353,
										355,
										354
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/types/fabricMember.ts",
									"line": 205,
									"character": 10,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L205"
								}
							]
						}
					}
				},
				{
					"id": 349,
					"name": "room_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 203,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L203"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 350,
					"name": "room_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 204,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L204"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						351,
						349,
						350
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricMember.ts",
					"line": 202,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L202"
				}
			]
		},
		{
			"id": 339,
			"name": "MemberUpdatedEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "member.updated"
					}
				]
			},
			"children": [
				{
					"id": 340,
					"name": "member",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 174,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L174"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/fabricMember.ts",
							"qualifiedName": "InternalMemberEntityUpdated"
						},
						"name": "InternalMemberEntityUpdated",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 341,
					"name": "room_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 175,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L175"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 342,
					"name": "room_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/fabricMember.ts",
							"line": 176,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L176"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						340,
						341,
						342
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricMember.ts",
					"line": 173,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L173"
				}
			]
		},
		{
			"id": 483,
			"name": "MicrophoneAnalyzer",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 484,
					"name": "destroy",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
							"line": 705,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L705"
						}
					],
					"signatures": [
						{
							"id": 485,
							"name": "destroy",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
									"line": 705,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L705"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						484
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/webrtc/src/utils/deviceHelpers.ts",
					"line": 703,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/utils/deviceHelpers.ts#L703"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "eventemitter3",
						"packagePath": "index.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"packageName": "@signalwire/webrtc",
								"packagePath": "src/utils/deviceHelpers.ts",
								"qualifiedName": "MicrophoneAnalyzerEvents"
							},
							"name": "MicrophoneAnalyzerEvents",
							"package": "@signalwire/webrtc"
						}
					],
					"name": "EventEmitter",
					"package": "eventemitter3"
				}
			]
		},
		{
			"id": 760,
			"name": "OnlineParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 761,
					"name": "incomingCallHandlers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 65,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L65"
						}
					],
					"type": {
						"type": "reference",
						"target": 756,
						"name": "IncomingCallHandlers",
						"package": "@signalwire/client"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						761
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
					"line": 64,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L64"
				}
			]
		},
		{
			"id": 920,
			"name": "PaginatedResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 921,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 44,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L44"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 928,
							"name": "T",
							"package": "@signalwire/client",
							"qualifiedName": "PaginatedResponse.T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 922,
					"name": "links",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L45"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 923,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 924,
									"name": "first",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 46,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L46"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 926,
									"name": "next",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 48,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L48"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 927,
									"name": "prev",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 49,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L49"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 925,
									"name": "self",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 47,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L47"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										924,
										926,
										927,
										925
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/index.ts",
									"line": 45,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L45"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						921,
						922
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/index.ts",
					"line": 43,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L43"
				}
			],
			"typeParameters": [
				{
					"id": 928,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 690,
					"name": "GetConversationMessagesResponse"
				}
			]
		},
		{
			"id": 929,
			"name": "PaginatedResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 930,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 54,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L54"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 941,
							"name": "T",
							"package": "@signalwire/client",
							"qualifiedName": "PaginatedResult.T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 939,
					"name": "hasNext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 59,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L59"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 940,
					"name": "hasPrev",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 60,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L60"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 937,
					"name": "firstPage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 58,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L58"
						}
					],
					"signatures": [
						{
							"id": 938,
							"name": "firstPage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/index.ts",
									"line": 58,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L58"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 929,
												"typeArguments": [
													{
														"type": "reference",
														"target": 941,
														"name": "T",
														"package": "@signalwire/client",
														"qualifiedName": "PaginatedResult.T",
														"refersToTypeParameter": true
													}
												],
												"name": "PaginatedResult",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 933,
					"name": "nextPage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 56,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L56"
						}
					],
					"signatures": [
						{
							"id": 934,
							"name": "nextPage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/index.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L56"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 929,
												"typeArguments": [
													{
														"type": "reference",
														"target": 941,
														"name": "T",
														"package": "@signalwire/client",
														"qualifiedName": "PaginatedResult.T",
														"refersToTypeParameter": true
													}
												],
												"name": "PaginatedResult",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 935,
					"name": "prevPage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 57,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 936,
							"name": "prevPage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/index.ts",
									"line": 57,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L57"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 929,
												"typeArguments": [
													{
														"type": "reference",
														"target": 941,
														"name": "T",
														"package": "@signalwire/client",
														"qualifiedName": "PaginatedResult.T",
														"refersToTypeParameter": true
													}
												],
												"name": "PaginatedResult",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 931,
					"name": "self",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 55,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 932,
							"name": "self",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/index.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L55"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 929,
												"typeArguments": [
													{
														"type": "reference",
														"target": 941,
														"name": "T",
														"package": "@signalwire/client",
														"qualifiedName": "PaginatedResult.T",
														"refersToTypeParameter": true
													}
												],
												"name": "PaginatedResult",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						930,
						939,
						940
					]
				},
				{
					"title": "Methods",
					"children": [
						937,
						933,
						935,
						931
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/index.ts",
					"line": 53,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L53"
				}
			],
			"typeParameters": [
				{
					"id": 941,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 15,
			"name": "Profile",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Authentication profile for SignalWire client instances"
					}
				]
			},
			"children": [
				{
					"id": 21,
					"name": "addressDetails",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 54,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L54"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 22,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 26,
									"name": "channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
											"line": 58,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L58"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 25,
									"name": "displayName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
											"line": 57,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L57"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 24,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
											"line": 56,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L56"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
											"line": 55,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L55"
										}
									],
									"type": {
										"type": "reference",
										"target": 556,
										"name": "ResourceType",
										"package": "@signalwire/client"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										26,
										25,
										24,
										23
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 54,
									"character": 19,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L54"
								}
							]
						}
					}
				},
				{
					"id": 20,
					"name": "addressId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 53,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L53"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 27,
					"name": "createdAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 62,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L62"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19,
					"name": "credentials",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 50,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L50"
						}
					],
					"type": {
						"type": "reference",
						"target": 5,
						"name": "SignalWireCredentials",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 18,
					"name": "credentialsId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 49,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L49"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L45"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 29,
					"name": "lastUsed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 64,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L64"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 17,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 46,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L46"
						}
					],
					"type": {
						"type": "reference",
						"target": 12,
						"name": "ProfileType",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 28,
					"name": "updatedAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 63,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L63"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21,
						20,
						27,
						19,
						18,
						16,
						29,
						17,
						28
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 43,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L43"
				}
			]
		},
		{
			"id": 74,
			"name": "ProfileManagerContract",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Contract for the ProfileManager"
					}
				]
			},
			"children": [
				{
					"id": 78,
					"name": "addProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 212,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L212"
						}
					],
					"signatures": [
						{
							"id": 79,
							"name": "addProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a new profile"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Created profile ID"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 212,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L212"
								}
							],
							"parameters": [
								{
									"id": 80,
									"name": "profile",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile to add (without id, createdAt, updatedAt, lastUsed)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15,
												"name": "Profile",
												"package": "@signalwire/client"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "id"
													},
													{
														"type": "literal",
														"value": "createdAt"
													},
													{
														"type": "literal",
														"value": "updatedAt"
													},
													{
														"type": "literal",
														"value": "lastUsed"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 103,
					"name": "createDynamicProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 275,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L275"
						}
					],
					"signatures": [
						{
							"id": 104,
							"name": "createDynamicProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a dynamic profile for accessing a shared resource"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Created dynamic profile"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 275,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L275"
								}
							],
							"parameters": [
								{
									"id": 105,
									"name": "parentProfile",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile to inherit credentials from"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15,
										"name": "Profile",
										"package": "@signalwire/client"
									}
								},
								{
									"id": 106,
									"name": "addressId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address ID for the shared resource"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15,
										"name": "Profile",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 97,
					"name": "findProfileForAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 260,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L260"
						}
					],
					"signatures": [
						{
							"id": 98,
							"name": "findProfileForAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find a profile that has access to a specific address"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Profile that has access or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 260,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L260"
								}
							],
							"parameters": [
								{
									"id": 99,
									"name": "addressId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address identifier to search for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 15,
												"name": "Profile",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 88,
					"name": "getProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 239,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L239"
						}
					],
					"signatures": [
						{
							"id": 89,
							"name": "getProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a profile by ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Profile or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 239,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L239"
								}
							],
							"parameters": [
								{
									"id": 90,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 15,
												"name": "Profile",
												"package": "@signalwire/client"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 100,
					"name": "getProfilesByCredentialId",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 267,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L267"
						}
					],
					"signatures": [
						{
							"id": 101,
							"name": "getProfilesByCredentialId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get all profiles associated with a credential ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of profiles with the given credential ID"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 267,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L267"
								}
							],
							"parameters": [
								{
									"id": 102,
									"name": "credentialId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Credential identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15,
											"name": "Profile",
											"package": "@signalwire/client"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 94,
					"name": "hasProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 253,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L253"
						}
					],
					"signatures": [
						{
							"id": 95,
							"name": "hasProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if a profile exists"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the profile exists"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 253,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L253"
								}
							],
							"parameters": [
								{
									"id": 96,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile identifier"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 75,
					"name": "init",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 205,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L205"
						}
					],
					"signatures": [
						{
							"id": 76,
							"name": "init",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initialize the profile manager with storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 205,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L205"
								}
							],
							"parameters": [
								{
									"id": 77,
									"name": "storage",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Storage implementation"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 359,
										"name": "SignalWireStorageContract",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 91,
					"name": "listProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 246,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L246"
						}
					],
					"signatures": [
						{
							"id": 92,
							"name": "listProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all profiles"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of profiles"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 246,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L246"
								}
							],
							"parameters": [
								{
									"id": 93,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional filter by profile type"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12,
										"name": "ProfileType",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15,
											"name": "Profile",
											"package": "@signalwire/client"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 85,
					"name": "removeProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 232,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L232"
						}
					],
					"signatures": [
						{
							"id": 86,
							"name": "removeProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove a profile"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the profile was removed"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 232,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L232"
								}
							],
							"parameters": [
								{
									"id": 87,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile ID to remove"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 81,
					"name": "updateProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 222,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L222"
						}
					],
					"signatures": [
						{
							"id": 82,
							"name": "updateProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update an existing profile"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the profile was updated"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 222,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L222"
								}
							],
							"parameters": [
								{
									"id": 83,
									"name": "profileId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Profile ID to update"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 84,
									"name": "updates",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Partial profile updates"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 15,
														"name": "Profile",
														"package": "@signalwire/client"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "id"
															},
															{
																"type": "literal",
																"value": "createdAt"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						78,
						103,
						97,
						88,
						100,
						94,
						75,
						91,
						85,
						81
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 200,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L200"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 1730,
					"name": "ProfileManager"
				}
			]
		},
		{
			"id": 784,
			"name": "ReattachParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 793,
					"name": "applyLocalVideoOverlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to apply the local-overlay on top of your video. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 114,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L114"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.applyLocalVideoOverlay"
					}
				},
				{
					"id": 794,
					"name": "applyMemberOverlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to apply an overlay on top of each member. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 116,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L116"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.applyMemberOverlay"
					}
				},
				{
					"id": 789,
					"name": "audio",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Audio constraints to use when joining the room. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 106,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L106"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackConstraints"
								},
								"name": "MediaTrackConstraints",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.audio"
					}
				},
				{
					"id": 788,
					"name": "disableUdpIceServers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Disable ICE UDP transport policy"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 104,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L104"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.disableUdpIceServers"
					}
				},
				{
					"id": 798,
					"name": "fromCallAddressId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Call address ID matching one of the subscriber’s addresses to attribute conversation API events in the INVITE."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 124,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L124"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.fromCallAddressId"
					}
				},
				{
					"id": 787,
					"name": "listen",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional event listeners for the call session"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 138,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L138"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/client",
									"packagePath": "src/utils/interfaces/fabric.ts",
									"qualifiedName": "CallListeners"
								},
								"name": "CallListeners",
								"package": "@signalwire/client"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 795,
					"name": "mirrorLocalVideoOverlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to mirror the local video overlay. Default: "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 118,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L118"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.mirrorLocalVideoOverlay"
					}
				},
				{
					"id": 791,
					"name": "negotiateAudio",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Negotiate the incoming audio from the RTC. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 110,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L110"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.negotiateAudio"
					}
				},
				{
					"id": 792,
					"name": "negotiateVideo",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Negotiate the incoming video from the RTC. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " for \"video\" channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 112,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L112"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.negotiateVideo"
					}
				},
				{
					"id": 786,
					"name": "nodeId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 136,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L136"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 799,
					"name": "rootElement",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "HTML element in which to display the video stream"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 97,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L97"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "HTMLElement"
								},
								"name": "HTMLElement",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.rootElement"
					}
				},
				{
					"id": 796,
					"name": "stopCameraWhileMuted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to stop the camera when the member is muted. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 120,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L120"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.stopCameraWhileMuted"
					}
				},
				{
					"id": 797,
					"name": "stopMicrophoneWhileMuted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to stop the microphone when the member is muted. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 122,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L122"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.stopMicrophoneWhileMuted"
					}
				},
				{
					"id": 785,
					"name": "to",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 135,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L135"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 800,
					"name": "userVariables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "User & UserAgent metadata"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 99,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L99"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.userVariables"
					}
				},
				{
					"id": 790,
					"name": "video",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Video constraints to use when joining the room. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " for \"video\" channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 108,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L108"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackConstraints"
								},
								"name": "MediaTrackConstraints",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CallParams.video"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						793,
						794,
						789,
						788,
						798,
						787,
						795,
						791,
						792,
						786,
						799,
						796,
						797,
						785,
						800,
						790
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
					"line": 134,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L134"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/client",
						"packagePath": "src/unified/interfaces/wsClient.ts",
						"qualifiedName": "CallParams"
					},
					"name": "CallParams",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 708,
			"name": "RegisterDeviceParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 710,
					"name": "deviceToken",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 5,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L5"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 709,
					"name": "deviceType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 4,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L4"
						}
					],
					"type": {
						"type": "reference",
						"target": 707,
						"name": "RegisterDeviceType",
						"package": "@signalwire/client"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						710,
						709
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/device.ts",
					"line": 3,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L3"
				}
			]
		},
		{
			"id": 713,
			"name": "RegisterDeviceResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 714,
					"name": "date_registered",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L13"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 715,
					"name": "device_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 716,
					"name": "device_token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 717,
					"name": "device_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L16"
						}
					],
					"type": {
						"type": "reference",
						"target": 707,
						"name": "RegisterDeviceType",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 718,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 719,
					"name": "push_notification_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 18,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						714,
						715,
						716,
						717,
						718,
						719
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/device.ts",
					"line": 12,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L12"
				}
			]
		},
		{
			"id": 39,
			"name": "RemoveProfilesParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters for removing profiles"
					}
				]
			},
			"children": [
				{
					"id": 40,
					"name": "profileIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 104,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L104"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						40
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 103,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L103"
				}
			]
		},
		{
			"id": 1142,
			"name": "RoomSessionDevice",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1194,
					"name": "active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the connection is currently active"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 107,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L107"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.active"
					}
				},
				{
					"id": 1192,
					"name": "callId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The underlying connection id - callId"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 103,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L103"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.callId"
					}
				},
				{
					"id": 1181,
					"name": "cameraConstraints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The constraints applied to the video device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 73,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L73"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackConstraints"
								},
								"name": "MediaTrackConstraints",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.cameraConstraints"
					}
				},
				{
					"id": 1179,
					"name": "cameraId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the video device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 69,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L69"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.cameraId"
					}
				},
				{
					"id": 1180,
					"name": "cameraLabel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the video device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 71,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L71"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.cameraLabel"
					}
				},
				{
					"id": 1176,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Unique id for this room session"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 61,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L61"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.id"
					}
				},
				{
					"id": 1178,
					"name": "leaveReason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 66,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L66"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "literal",
								"value": "RECONNECTION_ATTEMPT_TIMEOUT"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.leaveReason"
					}
				},
				{
					"id": 1185,
					"name": "localAudioTrack",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides access to the local audio\n[MediaStreamTrack](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack)."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 84,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L84"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaStreamTrack"
								},
								"name": "MediaStreamTrack",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.localAudioTrack"
					}
				},
				{
					"id": 1182,
					"name": "localStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides access to the local [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 75,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L75"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaStream"
								},
								"name": "MediaStream",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.localStream"
					}
				},
				{
					"id": 1186,
					"name": "localVideoTrack",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides access to the local video\n[MediaStreamTrack](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack)."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 89,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L89"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaStreamTrack"
								},
								"name": "MediaStreamTrack",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.localVideoTrack"
					}
				},
				{
					"id": 1195,
					"name": "memberId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the current member within the room"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 109,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L109"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.memberId"
					}
				},
				{
					"id": 1189,
					"name": "microphoneConstraints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The constraints applied to the audio input device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 95,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L95"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackConstraints"
								},
								"name": "MediaTrackConstraints",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.microphoneConstraints"
					}
				},
				{
					"id": 1187,
					"name": "microphoneId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the audio input device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 91,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L91"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.microphoneId"
					}
				},
				{
					"id": 1188,
					"name": "microphoneLabel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the audio input device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 93,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L93"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.microphoneLabel"
					}
				},
				{
					"id": 1177,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The BaseConnection options"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 63,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L63"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.options"
					}
				},
				{
					"id": 1196,
					"name": "previewUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The preview_url for the room. Only with \"enable_room_previews: true\" on Room configuration."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 111,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L111"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.previewUrl"
					}
				},
				{
					"id": 1190,
					"name": "remoteStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides access to the remote [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 99,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L99"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaStream"
								},
								"name": "MediaStream",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.remoteStream"
					}
				},
				{
					"id": 1191,
					"name": "roomId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the room"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 101,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L101"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.roomId"
					}
				},
				{
					"id": 1193,
					"name": "roomSessionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the room session"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 105,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L105"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.roomSessionId"
					}
				},
				{
					"id": 1147,
					"name": "runWorker",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/RoomSessionDevice.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/RoomSessionDevice.ts#L31"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1148,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/BaseComponent.ts",
									"line": 302,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/BaseComponent.ts#L302"
								}
							],
							"signatures": [
								{
									"id": 1149,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@internal"
										]
									},
									"sources": [
										{
											"fileName": "packages/core/src/BaseComponent.ts",
											"line": 302,
											"character": 9,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/BaseComponent.ts#L302"
										}
									],
									"typeParameters": [
										{
											"id": 1150,
											"name": "Hooks",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "SDKWorkerHooks"
												},
												"name": "SDKWorkerHooks",
												"package": "@signalwire/core"
											},
											"default": {
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "SDKWorkerHooks"
												},
												"name": "SDKWorkerHooks",
												"package": "@signalwire/core"
											}
										}
									],
									"parameters": [
										{
											"id": 1151,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1152,
											"name": "def",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "SDKWorkerDefinition"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1029,
														"name": "Hooks",
														"package": "@signalwire/core",
														"refersToTypeParameter": true
													}
												],
												"name": "SDKWorkerDefinition",
												"package": "@signalwire/core"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@redux-saga/types",
											"packagePath": "types/ts3.6/index.d.ts",
											"qualifiedName": "Task"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Task",
										"package": "@redux-saga/types"
									}
								}
							]
						}
					}
				},
				{
					"id": 1183,
					"name": "withAudio",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if there is any receiving audio"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 77,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L77"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.withAudio"
					}
				},
				{
					"id": 1184,
					"name": "withVideo",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if there is any receiving video"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 79,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L79"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.withVideo"
					}
				},
				{
					"id": 1153,
					"name": "audioMute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 217,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L217"
						}
					],
					"signatures": [
						{
							"id": 1154,
							"name": "audioMute",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Puts the microphone on mute. The other participants will not hear audio\nfrom the muted device anymore."
									}
								],
								"blockTags": [
									{
										"tag": "@permissions",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.audio_mute`"
											},
											{
												"kind": "text",
												"text": "\n\nYou need to specify the permissions when [creating the Video Room\nToken](https://developer.signalwire.com/apis/reference/create_room_token)\non the server side."
											}
										]
									},
									{
										"tag": "@example",
										"name": "Muting the microphone:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait roomdevice.audioMute()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 217,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L217"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomSessionDeviceMethods.audioMute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomSessionDeviceMethods.audioMute"
					}
				},
				{
					"id": 1155,
					"name": "audioUnmute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 234,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L234"
						}
					],
					"signatures": [
						{
							"id": 1156,
							"name": "audioUnmute",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unmutes the microphone if it had been previously muted."
									}
								],
								"blockTags": [
									{
										"tag": "@permissions",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.audio_unmute`"
											},
											{
												"kind": "text",
												"text": "\n\nYou need to specify the permissions when [creating the Video Room\nToken](https://developer.signalwire.com/apis/reference/create_room_token)\non the server side."
											}
										]
									},
									{
										"tag": "@example",
										"name": "Unmuting the microphone:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait roomdevice.audioUnmute()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 234,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L234"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomSessionDeviceMethods.audioUnmute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomSessionDeviceMethods.audioUnmute"
					}
				},
				{
					"id": 1258,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 1259,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 43,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L43"
								}
							],
							"typeParameters": [
								{
									"id": 1260,
									"name": "E",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1261,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 236,
										"name": "E",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1262,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Extract"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 236,
													"name": "E",
													"package": "@signalwire/core",
													"refersToTypeParameter": true
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "room.left"
														},
														{
															"type": "reference",
															"target": {
																"packageName": "@signalwire/webrtc",
																"packagePath": "src/utils/interfaces.ts",
																"qualifiedName": "MediaEventNames"
															},
															"name": "MediaEventNames",
															"package": "@signalwire/webrtc"
														},
														{
															"type": "reference",
															"target": 209,
															"name": "BaseConnectionState",
															"package": "@signalwire/core"
														}
													]
												}
											],
											"name": "Extract",
											"package": "typescript"
										},
										"objectType": {
											"type": "reference",
											"target": {
												"packageName": "eventemitter3",
												"packagePath": "index.d.ts",
												"qualifiedName": "EventEmitter.ArgumentMap"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"packageName": "@signalwire/client",
														"packagePath": "src/RoomSessionDevice.ts",
														"qualifiedName": "RoomSessionDeviceEvents"
													},
													"name": "RoomSessionDeviceEvents",
													"package": "@signalwire/client"
												}
											],
											"name": "ArgumentMap",
											"package": "eventemitter3",
											"qualifiedName": "EventEmitter.ArgumentMap"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.emit"
					}
				},
				{
					"id": 1218,
					"name": "hold",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 221,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L221"
						}
					],
					"signatures": [
						{
							"id": 1219,
							"name": "hold",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hold the call.\nIt stops the self member's outbound video/audio and other member's inbound video/audio."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the hold state is acheived."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.hold()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 221,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L221"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.hold"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.hold"
					}
				},
				{
					"id": 1143,
					"name": "join",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/RoomSessionDevice.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/RoomSessionDevice.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 1144,
							"name": "join",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/RoomSessionDevice.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/RoomSessionDevice.ts#L28"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1145,
					"name": "leave",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/RoomSessionDevice.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/RoomSessionDevice.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 1146,
							"name": "leave",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/RoomSessionDevice.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/RoomSessionDevice.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1246,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 1247,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L33"
								}
							],
							"typeParameters": [
								{
									"id": 1248,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1249,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 227,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1250,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1251,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/eventemitter3/index.d.ts",
													"line": 122,
													"character": 6
												}
											],
											"signatures": [
												{
													"id": 1252,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/eventemitter3/index.d.ts",
															"line": 122,
															"character": 6
														}
													],
													"parameters": [
														{
															"id": 1253,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typescript",
																		"packagePath": "lib/lib.es5.d.ts",
																		"qualifiedName": "Extract"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 227,
																			"name": "T",
																			"package": "@signalwire/core",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": "room.left"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/webrtc",
																						"packagePath": "src/utils/interfaces.ts",
																						"qualifiedName": "MediaEventNames"
																					},
																					"name": "MediaEventNames",
																					"package": "@signalwire/webrtc"
																				},
																				{
																					"type": "reference",
																					"target": 209,
																					"name": "BaseConnectionState",
																					"package": "@signalwire/core"
																				}
																			]
																		}
																	],
																	"name": "Extract",
																	"package": "typescript"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"packageName": "eventemitter3",
																		"packagePath": "index.d.ts",
																		"qualifiedName": "EventEmitter.ArgumentMap"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"packageName": "@signalwire/client",
																				"packagePath": "src/RoomSessionDevice.ts",
																				"qualifiedName": "RoomSessionDeviceEvents"
																			},
																			"name": "RoomSessionDeviceEvents",
																			"package": "@signalwire/client"
																		}
																	],
																	"name": "ArgumentMap",
																	"package": "eventemitter3",
																	"qualifiedName": "EventEmitter.ArgumentMap"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/client",
											"packagePath": "src/RoomSessionDevice.ts",
											"qualifiedName": "RoomSessionDeviceEvents"
										},
										"name": "RoomSessionDeviceEvents",
										"package": "@signalwire/client"
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.off"
					}
				},
				{
					"id": 1230,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 1231,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L23"
								}
							],
							"typeParameters": [
								{
									"id": 1232,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1233,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 217,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1234,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1235,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/eventemitter3/index.d.ts",
													"line": 122,
													"character": 6
												}
											],
											"signatures": [
												{
													"id": 1236,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/eventemitter3/index.d.ts",
															"line": 122,
															"character": 6
														}
													],
													"parameters": [
														{
															"id": 1237,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typescript",
																		"packagePath": "lib/lib.es5.d.ts",
																		"qualifiedName": "Extract"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 217,
																			"name": "T",
																			"package": "@signalwire/core",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": "room.left"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/webrtc",
																						"packagePath": "src/utils/interfaces.ts",
																						"qualifiedName": "MediaEventNames"
																					},
																					"name": "MediaEventNames",
																					"package": "@signalwire/webrtc"
																				},
																				{
																					"type": "reference",
																					"target": 209,
																					"name": "BaseConnectionState",
																					"package": "@signalwire/core"
																				}
																			]
																		}
																	],
																	"name": "Extract",
																	"package": "typescript"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"packageName": "eventemitter3",
																		"packagePath": "index.d.ts",
																		"qualifiedName": "EventEmitter.ArgumentMap"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"packageName": "@signalwire/client",
																				"packagePath": "src/RoomSessionDevice.ts",
																				"qualifiedName": "RoomSessionDeviceEvents"
																			},
																			"name": "RoomSessionDeviceEvents",
																			"package": "@signalwire/client"
																		}
																	],
																	"name": "ArgumentMap",
																	"package": "eventemitter3",
																	"qualifiedName": "EventEmitter.ArgumentMap"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/client",
											"packagePath": "src/RoomSessionDevice.ts",
											"qualifiedName": "RoomSessionDeviceEvents"
										},
										"name": "RoomSessionDeviceEvents",
										"package": "@signalwire/client"
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.on"
					}
				},
				{
					"id": 1238,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 1239,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L28"
								}
							],
							"typeParameters": [
								{
									"id": 1240,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1241,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 222,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1242,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1243,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/eventemitter3/index.d.ts",
													"line": 122,
													"character": 6
												}
											],
											"signatures": [
												{
													"id": 1244,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/eventemitter3/index.d.ts",
															"line": 122,
															"character": 6
														}
													],
													"parameters": [
														{
															"id": 1245,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typescript",
																		"packagePath": "lib/lib.es5.d.ts",
																		"qualifiedName": "Extract"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 222,
																			"name": "T",
																			"package": "@signalwire/core",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": "room.left"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/webrtc",
																						"packagePath": "src/utils/interfaces.ts",
																						"qualifiedName": "MediaEventNames"
																					},
																					"name": "MediaEventNames",
																					"package": "@signalwire/webrtc"
																				},
																				{
																					"type": "reference",
																					"target": 209,
																					"name": "BaseConnectionState",
																					"package": "@signalwire/core"
																				}
																			]
																		}
																	],
																	"name": "Extract",
																	"package": "typescript"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"packageName": "eventemitter3",
																		"packagePath": "index.d.ts",
																		"qualifiedName": "EventEmitter.ArgumentMap"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"packageName": "@signalwire/client",
																				"packagePath": "src/RoomSessionDevice.ts",
																				"qualifiedName": "RoomSessionDeviceEvents"
																			},
																			"name": "RoomSessionDeviceEvents",
																			"package": "@signalwire/client"
																		}
																	],
																	"name": "ArgumentMap",
																	"package": "eventemitter3",
																	"qualifiedName": "EventEmitter.ArgumentMap"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/client",
											"packagePath": "src/RoomSessionDevice.ts",
											"qualifiedName": "RoomSessionDeviceEvents"
										},
										"name": "RoomSessionDeviceEvents",
										"package": "@signalwire/client"
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.once"
					}
				},
				{
					"id": 1254,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 1255,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L38"
								}
							],
							"typeParameters": [
								{
									"id": 1256,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1257,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 232,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/client",
											"packagePath": "src/RoomSessionDevice.ts",
											"qualifiedName": "RoomSessionDeviceEvents"
										},
										"name": "RoomSessionDeviceEvents",
										"package": "@signalwire/client"
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.removeAllListeners"
					}
				},
				{
					"id": 1224,
					"name": "restoreOutboundAudio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 239,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L239"
						}
					],
					"signatures": [
						{
							"id": 1225,
							"name": "restoreOutboundAudio",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 239,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L239"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.restoreOutboundAudio"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.restoreOutboundAudio"
					}
				},
				{
					"id": 1228,
					"name": "restoreOutboundVideo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 243,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L243"
						}
					],
					"signatures": [
						{
							"id": 1229,
							"name": "restoreOutboundVideo",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 243,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L243"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.restoreOutboundVideo"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.restoreOutboundVideo"
					}
				},
				{
					"id": 1206,
					"name": "sendDigits",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 163,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L163"
						}
					],
					"signatures": [
						{
							"id": 1207,
							"name": "sendDigits",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Send DTMF"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.sendDigits('1')\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L163"
								}
							],
							"parameters": [
								{
									"id": 1208,
									"name": "dtmf",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.sendDigits"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.sendDigits"
					}
				},
				{
					"id": 1212,
					"name": "setAudioDirection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 193,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L193"
						}
					],
					"signatures": [
						{
							"id": 1213,
							"name": "setAudioDirection",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add or update the audio with requested direction.\nIt perform RTC Peer renegotiation."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the requested audio is negotiated or failed."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.setAudioDirection('sendrecv')\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 193,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L193"
								}
							],
							"parameters": [
								{
									"id": 1214,
									"name": "direction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/utils/interfaces.ts",
											"qualifiedName": "UpdateMediaDirection"
										},
										"name": "UpdateMediaDirection",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.setAudioDirection"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.setAudioDirection"
					}
				},
				{
					"id": 1171,
					"name": "setInputSensitivity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 317,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L317"
						}
					],
					"signatures": [
						{
							"id": 1172,
							"name": "setInputSensitivity",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the input level at which the participant is identified as currently\nspeaking."
									}
								],
								"blockTags": [
									{
										"tag": "@permissions",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.set_input_sensitivity`"
											},
											{
												"kind": "text",
												"text": "\n\nYou need to specify the permissions when [creating the Video Room\nToken](https://developer.signalwire.com/apis/reference/create_room_token)\non the server side."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait roomdevice.setInputSensitivity({value: 80})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 317,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L317"
								}
							],
							"parameters": [
								{
									"id": 1173,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1174,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1175,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "desired sensitivity. The default value is 30 and the\nscale goes from 0 (lowest sensitivity, essentially muted) to 100 (highest\nsensitivity)."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client/src/utils/interfaces/video.ts",
															"line": 318,
															"character": 4,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L318"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1175
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/client/src/utils/interfaces/video.ts",
													"line": 317,
													"character": 30,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L317"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomSessionDeviceMethods.setInputSensitivity"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomSessionDeviceMethods.setInputSensitivity"
					}
				},
				{
					"id": 1166,
					"name": "setInputVolume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 295,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L295"
						}
					],
					"signatures": [
						{
							"id": 1167,
							"name": "setInputVolume",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the input volume level (e.g. for the microphone)."
									}
								],
								"blockTags": [
									{
										"tag": "@permissions",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.set_input_volume`"
											},
											{
												"kind": "text",
												"text": "\n\nYou need to specify the permissions when [creating the Video Room\nToken](https://developer.signalwire.com/apis/reference/create_room_token)\non the server side."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait roomdevice.setMicrophoneVolume({volume: -10})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 295,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L295"
								}
							],
							"parameters": [
								{
									"id": 1168,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1169,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1170,
													"name": "volume",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "desired volume. Values range from -50 to 50, with a\ndefault of 0."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client/src/utils/interfaces/video.ts",
															"line": 295,
															"character": 27,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L295"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1170
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/client/src/utils/interfaces/video.ts",
													"line": 295,
													"character": 25,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L295"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomSessionDeviceMethods.setInputVolume"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomSessionDeviceMethods.setInputVolume"
					}
				},
				{
					"id": 1203,
					"name": "setLocalStream",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 152,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L152"
						}
					],
					"signatures": [
						{
							"id": 1204,
							"name": "setLocalStream",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current local media stream with the one coming from the user."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Replaces the current media stream with the one coming from the user:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.setLocalStream(new MediaStream)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 152,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L152"
								}
							],
							"parameters": [
								{
									"id": 1205,
									"name": "stream",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specify the media stream that the device should use.\nSee\n[MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStream"
										},
										"name": "MediaStream",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStream"
										},
										"name": "MediaStream",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.setLocalStream"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.setLocalStream"
					}
				},
				{
					"id": 1161,
					"name": "setMicrophoneVolume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 275,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L275"
						}
					],
					"signatures": [
						{
							"id": 1162,
							"name": "setMicrophoneVolume",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "setInputVolume",
												"target": 1045
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 275,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L275"
								}
							],
							"parameters": [
								{
									"id": 1163,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1164,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1165,
													"name": "volume",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/utils/interfaces/video.ts",
															"line": 275,
															"character": 32,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L275"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1165
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/client/src/utils/interfaces/video.ts",
													"line": 275,
													"character": 30,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L275"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomSessionDeviceMethods.setMicrophoneVolume"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomSessionDeviceMethods.setMicrophoneVolume"
					}
				},
				{
					"id": 1215,
					"name": "setVideoDirection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 208,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L208"
						}
					],
					"signatures": [
						{
							"id": 1216,
							"name": "setVideoDirection",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add or update the video with requested direction.\nIt perform RTC Peer renegotiation."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the requested video is negotiated or failed."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.setVideoDirection('recvonly')\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 208,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L208"
								}
							],
							"parameters": [
								{
									"id": 1217,
									"name": "direction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/utils/interfaces.ts",
											"qualifiedName": "UpdateMediaDirection"
										},
										"name": "UpdateMediaDirection",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.setVideoDirection"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.setVideoDirection"
					}
				},
				{
					"id": 1222,
					"name": "stopOutboundAudio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 237,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L237"
						}
					],
					"signatures": [
						{
							"id": 1223,
							"name": "stopOutboundAudio",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 237,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L237"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.stopOutboundAudio"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.stopOutboundAudio"
					}
				},
				{
					"id": 1226,
					"name": "stopOutboundVideo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 241,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L241"
						}
					],
					"signatures": [
						{
							"id": 1227,
							"name": "stopOutboundVideo",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 241,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L241"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.stopOutboundVideo"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.stopOutboundVideo"
					}
				},
				{
					"id": 1220,
					"name": "unhold",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 234,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L234"
						}
					],
					"signatures": [
						{
							"id": 1221,
							"name": "unhold",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unhold the call.\nIt resumes the self member's outbound video/audio and other member's inbound video/audio."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the active call state is acheived."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.unhold()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 234,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L234"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.unhold"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.unhold"
					}
				},
				{
					"id": 1197,
					"name": "updateCamera",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 125,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L125"
						}
					],
					"signatures": [
						{
							"id": 1198,
							"name": "updateCamera",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current camera stream with the one coming from a different\ndevice."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Replaces the current camera stream with the one coming from the specified deviceId:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.updateCamera({deviceId: \"/o4ZeWzroh+8q0Ds/CFfmn9XpqaHzmW3L/5ZBC22CRg=\"})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 125,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L125"
								}
							],
							"parameters": [
								{
									"id": 1199,
									"name": "constraints",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specify the constraints that the device should satisfy. "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MediaTrackConstraints",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "MediaTrackConstraints"
												}
											},
											{
												"kind": "text",
												"text": "\nSee\n[MediaTrackConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints)."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaTrackConstraints"
										},
										"name": "MediaTrackConstraints",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.updateCamera"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.updateCamera"
					}
				},
				{
					"id": 1209,
					"name": "updateMedia",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 178,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L178"
						}
					],
					"signatures": [
						{
							"id": 1210,
							"name": "updateMedia",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Upgrade or downgrade the media in the WebRTC connection.\nIt perform RTC Peer renegotiation."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the requested media is negotiated or failed."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.updateMedia({ video: { direction: 'sendrecv' } })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 178,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L178"
								}
							],
							"parameters": [
								{
									"id": 1211,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "UpdateMediaParams",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "UpdateMediaParams"
												}
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/utils/interfaces.ts",
											"qualifiedName": "UpdateMediaParams"
										},
										"name": "UpdateMediaParams",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.updateMedia"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.updateMedia"
					}
				},
				{
					"id": 1200,
					"name": "updateMicrophone",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 139,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L139"
						}
					],
					"signatures": [
						{
							"id": 1201,
							"name": "updateMicrophone",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current microphone stream with the one coming from a different\ndevice."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Replaces the current microphone stream with the one coming from",
										"content": [
											{
												"kind": "text",
												"text": "the specified deviceId:\n"
											},
											{
												"kind": "code",
												"text": "```typescript\nawait room.updateMicrophone({deviceId: \"/o4ZeWzroh+8q0Ds/CFfmn9XpqaHzmW3L/5ZBC22CRg=\"})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 139,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L139"
								}
							],
							"parameters": [
								{
									"id": 1202,
									"name": "constraints",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specify the constraints that the device should satisfy. "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MediaTrackConstraints",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "MediaTrackConstraints"
												}
											},
											{
												"kind": "text",
												"text": "\nSee\n[MediaTrackConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints)."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaTrackConstraints"
										},
										"name": "MediaTrackConstraints",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.updateMicrophone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.updateMicrophone"
					}
				},
				{
					"id": 1157,
					"name": "videoMute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 252,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L252"
						}
					],
					"signatures": [
						{
							"id": 1158,
							"name": "videoMute",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Puts the video on mute. Participants will see a mute image instead of the\nvideo stream."
									}
								],
								"blockTags": [
									{
										"tag": "@permissions",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.video_mute`"
											},
											{
												"kind": "text",
												"text": "\n\nYou need to specify the permissions when [creating the Video Room\nToken](https://developer.signalwire.com/apis/reference/create_room_token)\non the server side."
											}
										]
									},
									{
										"tag": "@example",
										"name": "Muting the camera:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait roomdevice.videoMute()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 252,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L252"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomSessionDeviceMethods.videoMute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomSessionDeviceMethods.videoMute"
					}
				},
				{
					"id": 1159,
					"name": "videoUnmute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 270,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L270"
						}
					],
					"signatures": [
						{
							"id": 1160,
							"name": "videoUnmute",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unmutes the video if it had been previously muted. Participants will start\nseeing the video stream again."
									}
								],
								"blockTags": [
									{
										"tag": "@permissions",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.video_unmute`"
											},
											{
												"kind": "text",
												"text": "\n\nYou need to specify the permissions when [creating the Video Room\nToken](https://developer.signalwire.com/apis/reference/create_room_token)\non the server side."
											}
										]
									},
									{
										"tag": "@example",
										"name": "Unmuting the camera:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait roomdevice.videoUnmute()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 270,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L270"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomSessionDeviceMethods.videoUnmute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomSessionDeviceMethods.videoUnmute"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1194,
						1192,
						1181,
						1179,
						1180,
						1176,
						1178,
						1185,
						1182,
						1186,
						1195,
						1189,
						1187,
						1188,
						1177,
						1196,
						1190,
						1191,
						1193,
						1147,
						1183,
						1184
					]
				},
				{
					"title": "Methods",
					"children": [
						1153,
						1155,
						1258,
						1218,
						1143,
						1145,
						1246,
						1230,
						1238,
						1254,
						1224,
						1228,
						1206,
						1212,
						1171,
						1166,
						1203,
						1161,
						1215,
						1222,
						1226,
						1220,
						1197,
						1209,
						1200,
						1157,
						1159
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/RoomSessionDevice.ts",
					"line": 25,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/RoomSessionDevice.ts#L25"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/client",
						"packagePath": "src/utils/interfaces/video.ts",
						"qualifiedName": "RoomSessionDeviceMethods"
					},
					"name": "RoomSessionDeviceMethods",
					"package": "@signalwire/client"
				},
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/core",
						"packagePath": "src/types/index.ts",
						"qualifiedName": "BaseConnectionContract"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"packageName": "@signalwire/client",
								"packagePath": "src/RoomSessionDevice.ts",
								"qualifiedName": "RoomSessionDeviceEvents"
							},
							"name": "RoomSessionDeviceEvents",
							"package": "@signalwire/client"
						}
					],
					"name": "BaseConnectionContract",
					"package": "@signalwire/core"
				}
			]
		},
		{
			"id": 1021,
			"name": "RoomSessionScreenShare",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1073,
					"name": "active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the connection is currently active"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 107,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L107"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.active"
					}
				},
				{
					"id": 1071,
					"name": "callId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The underlying connection id - callId"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 103,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L103"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.callId"
					}
				},
				{
					"id": 1060,
					"name": "cameraConstraints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The constraints applied to the video device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 73,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L73"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackConstraints"
								},
								"name": "MediaTrackConstraints",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.cameraConstraints"
					}
				},
				{
					"id": 1058,
					"name": "cameraId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the video device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 69,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L69"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.cameraId"
					}
				},
				{
					"id": 1059,
					"name": "cameraLabel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the video device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 71,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L71"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.cameraLabel"
					}
				},
				{
					"id": 1055,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Unique id for this room session"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 61,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L61"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.id"
					}
				},
				{
					"id": 1057,
					"name": "leaveReason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 66,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L66"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "literal",
								"value": "RECONNECTION_ATTEMPT_TIMEOUT"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.leaveReason"
					}
				},
				{
					"id": 1064,
					"name": "localAudioTrack",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides access to the local audio\n[MediaStreamTrack](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack)."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 84,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L84"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaStreamTrack"
								},
								"name": "MediaStreamTrack",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.localAudioTrack"
					}
				},
				{
					"id": 1061,
					"name": "localStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides access to the local [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 75,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L75"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaStream"
								},
								"name": "MediaStream",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.localStream"
					}
				},
				{
					"id": 1065,
					"name": "localVideoTrack",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides access to the local video\n[MediaStreamTrack](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack)."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 89,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L89"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaStreamTrack"
								},
								"name": "MediaStreamTrack",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.localVideoTrack"
					}
				},
				{
					"id": 1074,
					"name": "memberId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the current member within the room"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 109,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L109"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.memberId"
					}
				},
				{
					"id": 1068,
					"name": "microphoneConstraints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The constraints applied to the audio input device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 95,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L95"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaTrackConstraints"
								},
								"name": "MediaTrackConstraints",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.microphoneConstraints"
					}
				},
				{
					"id": 1066,
					"name": "microphoneId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the audio input device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 91,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L91"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.microphoneId"
					}
				},
				{
					"id": 1067,
					"name": "microphoneLabel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the audio input device, or null if not available"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 93,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L93"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.microphoneLabel"
					}
				},
				{
					"id": 1056,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The BaseConnection options"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 63,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L63"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.options"
					}
				},
				{
					"id": 1075,
					"name": "previewUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The preview_url for the room. Only with \"enable_room_previews: true\" on Room configuration."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 111,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L111"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.previewUrl"
					}
				},
				{
					"id": 1069,
					"name": "remoteStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides access to the remote [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 99,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L99"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "MediaStream"
								},
								"name": "MediaStream",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.remoteStream"
					}
				},
				{
					"id": 1070,
					"name": "roomId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the room"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 101,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L101"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.roomId"
					}
				},
				{
					"id": 1072,
					"name": "roomSessionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the room session"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 105,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L105"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.roomSessionId"
					}
				},
				{
					"id": 1026,
					"name": "runWorker",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/RoomSessionScreenShare.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/RoomSessionScreenShare.ts#L31"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1027,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/BaseComponent.ts",
									"line": 302,
									"character": 9,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/BaseComponent.ts#L302"
								}
							],
							"signatures": [
								{
									"id": 1028,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@internal"
										]
									},
									"sources": [
										{
											"fileName": "packages/core/src/BaseComponent.ts",
											"line": 302,
											"character": 9,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/BaseComponent.ts#L302"
										}
									],
									"typeParameters": [
										{
											"id": 1029,
											"name": "Hooks",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "SDKWorkerHooks"
												},
												"name": "SDKWorkerHooks",
												"package": "@signalwire/core"
											},
											"default": {
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "SDKWorkerHooks"
												},
												"name": "SDKWorkerHooks",
												"package": "@signalwire/core"
											}
										}
									],
									"parameters": [
										{
											"id": 1030,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1031,
											"name": "def",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "SDKWorkerDefinition"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1029,
														"name": "Hooks",
														"package": "@signalwire/core",
														"refersToTypeParameter": true
													}
												],
												"name": "SDKWorkerDefinition",
												"package": "@signalwire/core"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@redux-saga/types",
											"packagePath": "types/ts3.6/index.d.ts",
											"qualifiedName": "Task"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Task",
										"package": "@redux-saga/types"
									}
								}
							]
						}
					}
				},
				{
					"id": 1062,
					"name": "withAudio",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if there is any receiving audio"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 77,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L77"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.withAudio"
					}
				},
				{
					"id": 1063,
					"name": "withVideo",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if there is any receiving video"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 79,
							"character": 11,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L79"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.withVideo"
					}
				},
				{
					"id": 1032,
					"name": "audioMute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 217,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L217"
						}
					],
					"signatures": [
						{
							"id": 1033,
							"name": "audioMute",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Puts the microphone on mute. The other participants will not hear audio\nfrom the muted device anymore."
									}
								],
								"blockTags": [
									{
										"tag": "@permissions",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.audio_mute`"
											},
											{
												"kind": "text",
												"text": "\n\nYou need to specify the permissions when [creating the Video Room\nToken](https://developer.signalwire.com/apis/reference/create_room_token)\non the server side."
											}
										]
									},
									{
										"tag": "@example",
										"name": "Muting the microphone:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait roomdevice.audioMute()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 217,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L217"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomScreenShareMethods.audioMute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomScreenShareMethods.audioMute"
					}
				},
				{
					"id": 1034,
					"name": "audioUnmute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 234,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L234"
						}
					],
					"signatures": [
						{
							"id": 1035,
							"name": "audioUnmute",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unmutes the microphone if it had been previously muted."
									}
								],
								"blockTags": [
									{
										"tag": "@permissions",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.audio_unmute`"
											},
											{
												"kind": "text",
												"text": "\n\nYou need to specify the permissions when [creating the Video Room\nToken](https://developer.signalwire.com/apis/reference/create_room_token)\non the server side."
											}
										]
									},
									{
										"tag": "@example",
										"name": "Unmuting the microphone:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait roomdevice.audioUnmute()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 234,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L234"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomScreenShareMethods.audioUnmute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomScreenShareMethods.audioUnmute"
					}
				},
				{
					"id": 1137,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 1138,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 43,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L43"
								}
							],
							"typeParameters": [
								{
									"id": 1139,
									"name": "E",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1140,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 236,
										"name": "E",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1141,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Extract"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 236,
													"name": "E",
													"package": "@signalwire/core",
													"refersToTypeParameter": true
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "room.left"
														},
														{
															"type": "reference",
															"target": {
																"packageName": "@signalwire/webrtc",
																"packagePath": "src/utils/interfaces.ts",
																"qualifiedName": "MediaEventNames"
															},
															"name": "MediaEventNames",
															"package": "@signalwire/webrtc"
														},
														{
															"type": "reference",
															"target": 209,
															"name": "BaseConnectionState",
															"package": "@signalwire/core"
														}
													]
												}
											],
											"name": "Extract",
											"package": "typescript"
										},
										"objectType": {
											"type": "reference",
											"target": {
												"packageName": "eventemitter3",
												"packagePath": "index.d.ts",
												"qualifiedName": "EventEmitter.ArgumentMap"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"packageName": "@signalwire/client",
														"packagePath": "src/RoomSessionScreenShare.ts",
														"qualifiedName": "RoomSessionScreenShareEvents"
													},
													"name": "RoomSessionScreenShareEvents",
													"package": "@signalwire/client"
												}
											],
											"name": "ArgumentMap",
											"package": "eventemitter3",
											"qualifiedName": "EventEmitter.ArgumentMap"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.emit"
					}
				},
				{
					"id": 1097,
					"name": "hold",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 221,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L221"
						}
					],
					"signatures": [
						{
							"id": 1098,
							"name": "hold",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hold the call.\nIt stops the self member's outbound video/audio and other member's inbound video/audio."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the hold state is acheived."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.hold()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 221,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L221"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.hold"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.hold"
					}
				},
				{
					"id": 1022,
					"name": "join",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/RoomSessionScreenShare.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/RoomSessionScreenShare.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 1023,
							"name": "join",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/RoomSessionScreenShare.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/RoomSessionScreenShare.ts#L28"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1024,
					"name": "leave",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/RoomSessionScreenShare.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/RoomSessionScreenShare.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 1025,
							"name": "leave",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/RoomSessionScreenShare.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/RoomSessionScreenShare.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1125,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 1126,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L33"
								}
							],
							"typeParameters": [
								{
									"id": 1127,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1128,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 227,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1129,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1130,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/eventemitter3/index.d.ts",
													"line": 122,
													"character": 6
												}
											],
											"signatures": [
												{
													"id": 1131,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/eventemitter3/index.d.ts",
															"line": 122,
															"character": 6
														}
													],
													"parameters": [
														{
															"id": 1132,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typescript",
																		"packagePath": "lib/lib.es5.d.ts",
																		"qualifiedName": "Extract"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 227,
																			"name": "T",
																			"package": "@signalwire/core",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": "room.left"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/webrtc",
																						"packagePath": "src/utils/interfaces.ts",
																						"qualifiedName": "MediaEventNames"
																					},
																					"name": "MediaEventNames",
																					"package": "@signalwire/webrtc"
																				},
																				{
																					"type": "reference",
																					"target": 209,
																					"name": "BaseConnectionState",
																					"package": "@signalwire/core"
																				}
																			]
																		}
																	],
																	"name": "Extract",
																	"package": "typescript"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"packageName": "eventemitter3",
																		"packagePath": "index.d.ts",
																		"qualifiedName": "EventEmitter.ArgumentMap"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"packageName": "@signalwire/client",
																				"packagePath": "src/RoomSessionScreenShare.ts",
																				"qualifiedName": "RoomSessionScreenShareEvents"
																			},
																			"name": "RoomSessionScreenShareEvents",
																			"package": "@signalwire/client"
																		}
																	],
																	"name": "ArgumentMap",
																	"package": "eventemitter3",
																	"qualifiedName": "EventEmitter.ArgumentMap"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/client",
											"packagePath": "src/RoomSessionScreenShare.ts",
											"qualifiedName": "RoomSessionScreenShareEvents"
										},
										"name": "RoomSessionScreenShareEvents",
										"package": "@signalwire/client"
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.off"
					}
				},
				{
					"id": 1109,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 1110,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L23"
								}
							],
							"typeParameters": [
								{
									"id": 1111,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1112,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 217,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1113,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1114,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/eventemitter3/index.d.ts",
													"line": 122,
													"character": 6
												}
											],
											"signatures": [
												{
													"id": 1115,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/eventemitter3/index.d.ts",
															"line": 122,
															"character": 6
														}
													],
													"parameters": [
														{
															"id": 1116,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typescript",
																		"packagePath": "lib/lib.es5.d.ts",
																		"qualifiedName": "Extract"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 217,
																			"name": "T",
																			"package": "@signalwire/core",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": "room.left"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/webrtc",
																						"packagePath": "src/utils/interfaces.ts",
																						"qualifiedName": "MediaEventNames"
																					},
																					"name": "MediaEventNames",
																					"package": "@signalwire/webrtc"
																				},
																				{
																					"type": "reference",
																					"target": 209,
																					"name": "BaseConnectionState",
																					"package": "@signalwire/core"
																				}
																			]
																		}
																	],
																	"name": "Extract",
																	"package": "typescript"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"packageName": "eventemitter3",
																		"packagePath": "index.d.ts",
																		"qualifiedName": "EventEmitter.ArgumentMap"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"packageName": "@signalwire/client",
																				"packagePath": "src/RoomSessionScreenShare.ts",
																				"qualifiedName": "RoomSessionScreenShareEvents"
																			},
																			"name": "RoomSessionScreenShareEvents",
																			"package": "@signalwire/client"
																		}
																	],
																	"name": "ArgumentMap",
																	"package": "eventemitter3",
																	"qualifiedName": "EventEmitter.ArgumentMap"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/client",
											"packagePath": "src/RoomSessionScreenShare.ts",
											"qualifiedName": "RoomSessionScreenShareEvents"
										},
										"name": "RoomSessionScreenShareEvents",
										"package": "@signalwire/client"
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.on"
					}
				},
				{
					"id": 1117,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 1118,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L28"
								}
							],
							"typeParameters": [
								{
									"id": 1119,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1120,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 222,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1121,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1122,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/eventemitter3/index.d.ts",
													"line": 122,
													"character": 6
												}
											],
											"signatures": [
												{
													"id": 1123,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/eventemitter3/index.d.ts",
															"line": 122,
															"character": 6
														}
													],
													"parameters": [
														{
															"id": 1124,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typescript",
																		"packagePath": "lib/lib.es5.d.ts",
																		"qualifiedName": "Extract"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 222,
																			"name": "T",
																			"package": "@signalwire/core",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": "room.left"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@signalwire/webrtc",
																						"packagePath": "src/utils/interfaces.ts",
																						"qualifiedName": "MediaEventNames"
																					},
																					"name": "MediaEventNames",
																					"package": "@signalwire/webrtc"
																				},
																				{
																					"type": "reference",
																					"target": 209,
																					"name": "BaseConnectionState",
																					"package": "@signalwire/core"
																				}
																			]
																		}
																	],
																	"name": "Extract",
																	"package": "typescript"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"packageName": "eventemitter3",
																		"packagePath": "index.d.ts",
																		"qualifiedName": "EventEmitter.ArgumentMap"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"packageName": "@signalwire/client",
																				"packagePath": "src/RoomSessionScreenShare.ts",
																				"qualifiedName": "RoomSessionScreenShareEvents"
																			},
																			"name": "RoomSessionScreenShareEvents",
																			"package": "@signalwire/client"
																		}
																	],
																	"name": "ArgumentMap",
																	"package": "eventemitter3",
																	"qualifiedName": "EventEmitter.ArgumentMap"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/client",
											"packagePath": "src/RoomSessionScreenShare.ts",
											"qualifiedName": "RoomSessionScreenShareEvents"
										},
										"name": "RoomSessionScreenShareEvents",
										"package": "@signalwire/client"
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.once"
					}
				},
				{
					"id": 1133,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 1134,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L38"
								}
							],
							"typeParameters": [
								{
									"id": 1135,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "room.left"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/webrtc",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "MediaEventNames"
												},
												"name": "MediaEventNames",
												"package": "@signalwire/webrtc"
											},
											{
												"type": "reference",
												"target": 209,
												"name": "BaseConnectionState",
												"package": "@signalwire/core"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1136,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 232,
										"name": "T",
										"package": "@signalwire/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/client",
											"packagePath": "src/RoomSessionScreenShare.ts",
											"qualifiedName": "RoomSessionScreenShareEvents"
										},
										"name": "RoomSessionScreenShareEvents",
										"package": "@signalwire/client"
									}
								],
								"name": "EmitterContract",
								"package": "@signalwire/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.removeAllListeners"
					}
				},
				{
					"id": 1103,
					"name": "restoreOutboundAudio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 239,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L239"
						}
					],
					"signatures": [
						{
							"id": 1104,
							"name": "restoreOutboundAudio",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 239,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L239"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.restoreOutboundAudio"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.restoreOutboundAudio"
					}
				},
				{
					"id": 1107,
					"name": "restoreOutboundVideo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 243,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L243"
						}
					],
					"signatures": [
						{
							"id": 1108,
							"name": "restoreOutboundVideo",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 243,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L243"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.restoreOutboundVideo"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.restoreOutboundVideo"
					}
				},
				{
					"id": 1085,
					"name": "sendDigits",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 163,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L163"
						}
					],
					"signatures": [
						{
							"id": 1086,
							"name": "sendDigits",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Send DTMF"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.sendDigits('1')\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L163"
								}
							],
							"parameters": [
								{
									"id": 1087,
									"name": "dtmf",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.sendDigits"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.sendDigits"
					}
				},
				{
					"id": 1091,
					"name": "setAudioDirection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 193,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L193"
						}
					],
					"signatures": [
						{
							"id": 1092,
							"name": "setAudioDirection",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add or update the audio with requested direction.\nIt perform RTC Peer renegotiation."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the requested audio is negotiated or failed."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.setAudioDirection('sendrecv')\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 193,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L193"
								}
							],
							"parameters": [
								{
									"id": 1093,
									"name": "direction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/utils/interfaces.ts",
											"qualifiedName": "UpdateMediaDirection"
										},
										"name": "UpdateMediaDirection",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.setAudioDirection"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.setAudioDirection"
					}
				},
				{
					"id": 1050,
					"name": "setInputSensitivity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 317,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L317"
						}
					],
					"signatures": [
						{
							"id": 1051,
							"name": "setInputSensitivity",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the input level at which the participant is identified as currently\nspeaking."
									}
								],
								"blockTags": [
									{
										"tag": "@permissions",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.set_input_sensitivity`"
											},
											{
												"kind": "text",
												"text": "\n\nYou need to specify the permissions when [creating the Video Room\nToken](https://developer.signalwire.com/apis/reference/create_room_token)\non the server side."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait roomdevice.setInputSensitivity({value: 80})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 317,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L317"
								}
							],
							"parameters": [
								{
									"id": 1052,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1053,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1054,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "desired sensitivity. The default value is 30 and the\nscale goes from 0 (lowest sensitivity, essentially muted) to 100 (highest\nsensitivity)."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client/src/utils/interfaces/video.ts",
															"line": 318,
															"character": 4,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L318"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1054
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/client/src/utils/interfaces/video.ts",
													"line": 317,
													"character": 30,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L317"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomScreenShareMethods.setInputSensitivity"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomScreenShareMethods.setInputSensitivity"
					}
				},
				{
					"id": 1045,
					"name": "setInputVolume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 295,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L295"
						}
					],
					"signatures": [
						{
							"id": 1046,
							"name": "setInputVolume",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the input volume level (e.g. for the microphone)."
									}
								],
								"blockTags": [
									{
										"tag": "@permissions",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.set_input_volume`"
											},
											{
												"kind": "text",
												"text": "\n\nYou need to specify the permissions when [creating the Video Room\nToken](https://developer.signalwire.com/apis/reference/create_room_token)\non the server side."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait roomdevice.setMicrophoneVolume({volume: -10})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 295,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L295"
								}
							],
							"parameters": [
								{
									"id": 1047,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1048,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1049,
													"name": "volume",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "desired volume. Values range from -50 to 50, with a\ndefault of 0."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client/src/utils/interfaces/video.ts",
															"line": 295,
															"character": 27,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L295"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1049
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/client/src/utils/interfaces/video.ts",
													"line": 295,
													"character": 25,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L295"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomScreenShareMethods.setInputVolume"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomScreenShareMethods.setInputVolume"
					}
				},
				{
					"id": 1082,
					"name": "setLocalStream",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 152,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L152"
						}
					],
					"signatures": [
						{
							"id": 1083,
							"name": "setLocalStream",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current local media stream with the one coming from the user."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Replaces the current media stream with the one coming from the user:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.setLocalStream(new MediaStream)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 152,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L152"
								}
							],
							"parameters": [
								{
									"id": 1084,
									"name": "stream",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specify the media stream that the device should use.\nSee\n[MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStream"
										},
										"name": "MediaStream",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaStream"
										},
										"name": "MediaStream",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.setLocalStream"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.setLocalStream"
					}
				},
				{
					"id": 1040,
					"name": "setMicrophoneVolume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 275,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L275"
						}
					],
					"signatures": [
						{
							"id": 1041,
							"name": "setMicrophoneVolume",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "setInputVolume",
												"target": 1045
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 275,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L275"
								}
							],
							"parameters": [
								{
									"id": 1042,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1043,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1044,
													"name": "volume",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/utils/interfaces/video.ts",
															"line": 275,
															"character": 32,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L275"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1044
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/client/src/utils/interfaces/video.ts",
													"line": 275,
													"character": 30,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L275"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomScreenShareMethods.setMicrophoneVolume"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomScreenShareMethods.setMicrophoneVolume"
					}
				},
				{
					"id": 1094,
					"name": "setVideoDirection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 208,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L208"
						}
					],
					"signatures": [
						{
							"id": 1095,
							"name": "setVideoDirection",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add or update the video with requested direction.\nIt perform RTC Peer renegotiation."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the requested video is negotiated or failed."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.setVideoDirection('recvonly')\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 208,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L208"
								}
							],
							"parameters": [
								{
									"id": 1096,
									"name": "direction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/utils/interfaces.ts",
											"qualifiedName": "UpdateMediaDirection"
										},
										"name": "UpdateMediaDirection",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.setVideoDirection"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.setVideoDirection"
					}
				},
				{
					"id": 1101,
					"name": "stopOutboundAudio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 237,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L237"
						}
					],
					"signatures": [
						{
							"id": 1102,
							"name": "stopOutboundAudio",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 237,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L237"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.stopOutboundAudio"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.stopOutboundAudio"
					}
				},
				{
					"id": 1105,
					"name": "stopOutboundVideo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 241,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L241"
						}
					],
					"signatures": [
						{
							"id": 1106,
							"name": "stopOutboundVideo",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 241,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L241"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.stopOutboundVideo"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.stopOutboundVideo"
					}
				},
				{
					"id": 1099,
					"name": "unhold",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 234,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L234"
						}
					],
					"signatures": [
						{
							"id": 1100,
							"name": "unhold",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unhold the call.\nIt resumes the self member's outbound video/audio and other member's inbound video/audio."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the active call state is acheived."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.unhold()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 234,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L234"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.unhold"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.unhold"
					}
				},
				{
					"id": 1076,
					"name": "updateCamera",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 125,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L125"
						}
					],
					"signatures": [
						{
							"id": 1077,
							"name": "updateCamera",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current camera stream with the one coming from a different\ndevice."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Replaces the current camera stream with the one coming from the specified deviceId:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait room.updateCamera({deviceId: \"/o4ZeWzroh+8q0Ds/CFfmn9XpqaHzmW3L/5ZBC22CRg=\"})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 125,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L125"
								}
							],
							"parameters": [
								{
									"id": 1078,
									"name": "constraints",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specify the constraints that the device should satisfy. "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MediaTrackConstraints",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "MediaTrackConstraints"
												}
											},
											{
												"kind": "text",
												"text": "\nSee\n[MediaTrackConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints)."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaTrackConstraints"
										},
										"name": "MediaTrackConstraints",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.updateCamera"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.updateCamera"
					}
				},
				{
					"id": 1088,
					"name": "updateMedia",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 178,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L178"
						}
					],
					"signatures": [
						{
							"id": 1089,
							"name": "updateMedia",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Upgrade or downgrade the media in the WebRTC connection.\nIt perform RTC Peer renegotiation."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that resolves once the requested media is negotiated or failed."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nroom.updateMedia({ video: { direction: 'sendrecv' } })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 178,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L178"
								}
							],
							"parameters": [
								{
									"id": 1090,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "UpdateMediaParams",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/utils/interfaces.ts",
													"qualifiedName": "UpdateMediaParams"
												}
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/utils/interfaces.ts",
											"qualifiedName": "UpdateMediaParams"
										},
										"name": "UpdateMediaParams",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.updateMedia"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.updateMedia"
					}
				},
				{
					"id": 1079,
					"name": "updateMicrophone",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/index.ts",
							"line": 139,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L139"
						}
					],
					"signatures": [
						{
							"id": 1080,
							"name": "updateMicrophone",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current microphone stream with the one coming from a different\ndevice."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Replaces the current microphone stream with the one coming from",
										"content": [
											{
												"kind": "text",
												"text": "the specified deviceId:\n"
											},
											{
												"kind": "code",
												"text": "```typescript\nawait room.updateMicrophone({deviceId: \"/o4ZeWzroh+8q0Ds/CFfmn9XpqaHzmW3L/5ZBC22CRg=\"})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/index.ts",
									"line": 139,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/index.ts#L139"
								}
							],
							"parameters": [
								{
									"id": 1081,
									"name": "constraints",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specify the constraints that the device should satisfy. "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MediaTrackConstraints",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "MediaTrackConstraints"
												}
											},
											{
												"kind": "text",
												"text": "\nSee\n[MediaTrackConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints)."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "MediaTrackConstraints"
										},
										"name": "MediaTrackConstraints",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseConnectionContract.updateMicrophone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseConnectionContract.updateMicrophone"
					}
				},
				{
					"id": 1036,
					"name": "videoMute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 252,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L252"
						}
					],
					"signatures": [
						{
							"id": 1037,
							"name": "videoMute",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Puts the video on mute. Participants will see a mute image instead of the\nvideo stream."
									}
								],
								"blockTags": [
									{
										"tag": "@permissions",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.video_mute`"
											},
											{
												"kind": "text",
												"text": "\n\nYou need to specify the permissions when [creating the Video Room\nToken](https://developer.signalwire.com/apis/reference/create_room_token)\non the server side."
											}
										]
									},
									{
										"tag": "@example",
										"name": "Muting the camera:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait roomdevice.videoMute()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 252,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L252"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomScreenShareMethods.videoMute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomScreenShareMethods.videoMute"
					}
				},
				{
					"id": 1038,
					"name": "videoUnmute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 270,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L270"
						}
					],
					"signatures": [
						{
							"id": 1039,
							"name": "videoUnmute",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unmutes the video if it had been previously muted. Participants will start\nseeing the video stream again."
									}
								],
								"blockTags": [
									{
										"tag": "@permissions",
										"content": [
											{
												"kind": "text",
												"text": "- "
											},
											{
												"kind": "code",
												"text": "`room.self.video_unmute`"
											},
											{
												"kind": "text",
												"text": "\n\nYou need to specify the permissions when [creating the Video Room\nToken](https://developer.signalwire.com/apis/reference/create_room_token)\non the server side."
											}
										]
									},
									{
										"tag": "@example",
										"name": "Unmuting the camera:",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nawait roomdevice.videoUnmute()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/video.ts",
									"line": 270,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L270"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "RoomScreenShareMethods.videoUnmute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "RoomScreenShareMethods.videoUnmute"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1073,
						1071,
						1060,
						1058,
						1059,
						1055,
						1057,
						1064,
						1061,
						1065,
						1074,
						1068,
						1066,
						1067,
						1056,
						1075,
						1069,
						1070,
						1072,
						1026,
						1062,
						1063
					]
				},
				{
					"title": "Methods",
					"children": [
						1032,
						1034,
						1137,
						1097,
						1022,
						1024,
						1125,
						1109,
						1117,
						1133,
						1103,
						1107,
						1085,
						1091,
						1050,
						1045,
						1082,
						1040,
						1094,
						1101,
						1105,
						1099,
						1076,
						1088,
						1079,
						1036,
						1038
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/RoomSessionScreenShare.ts",
					"line": 25,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/RoomSessionScreenShare.ts#L25"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/client",
						"packagePath": "src/utils/interfaces/video.ts",
						"qualifiedName": "RoomScreenShareMethods"
					},
					"name": "RoomScreenShareMethods",
					"package": "@signalwire/client"
				},
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/core",
						"packagePath": "src/types/index.ts",
						"qualifiedName": "BaseConnectionContract"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"packageName": "@signalwire/client",
								"packagePath": "src/RoomSessionScreenShare.ts",
								"qualifiedName": "RoomSessionScreenShareEvents"
							},
							"name": "RoomSessionScreenShareEvents",
							"package": "@signalwire/client"
						}
					],
					"name": "BaseConnectionContract",
					"package": "@signalwire/core"
				}
			]
		},
		{
			"id": 625,
			"name": "SendConversationMessageParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 630,
					"name": "details",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L27"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 627,
					"name": "fromAddressId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 24,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 626,
					"name": "groupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 629,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 26,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L26"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 628,
					"name": "text",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						630,
						627,
						626,
						629,
						628
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 22,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L22"
				}
			]
		},
		{
			"id": 875,
			"name": "SignalWireClientParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 895,
					"name": "apiRequestRetriesDelay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Initial retry delay"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 145,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L145"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.apiRequestRetriesDelay"
					}
				},
				{
					"id": 894,
					"name": "apiRequestRetriesDelayIncrement",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Increment step for each retry delay"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 143,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L143"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.apiRequestRetriesDelayIncrement"
					}
				},
				{
					"id": 892,
					"name": "contexts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 110,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L110"
						},
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 110,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L110"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.contexts"
					}
				},
				{
					"id": 887,
					"name": "debug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 126,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L126"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 888,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 889,
									"name": "logWsTraffic",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/core/src/utils/interfaces.ts",
											"line": 127,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L127"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										889
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/utils/interfaces.ts",
									"line": 126,
									"character": 10,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L126"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.debug"
					}
				},
				{
					"id": 886,
					"name": "devTools",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 124,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L124"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.devTools"
					}
				},
				{
					"id": 884,
					"name": "host",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 101,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L101"
						},
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 101,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L101"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.host"
					}
				},
				{
					"id": 881,
					"name": "incomingCallHandlers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Call back function to receive the incoming call"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 162,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L162"
						}
					],
					"type": {
						"type": "reference",
						"target": 756,
						"name": "IncomingCallHandlers",
						"package": "@signalwire/client"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.incomingCallHandlers"
					}
				},
				{
					"id": 901,
					"name": "instanceMap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 119,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L119"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/utils/interfaces.ts",
							"qualifiedName": "InstanceMap"
						},
						"name": "InstanceMap",
						"package": "@signalwire/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.instanceMap"
					}
				},
				{
					"id": 890,
					"name": "logger",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 130,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L130"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/utils/interfaces.ts",
							"qualifiedName": "SDKLogger"
						},
						"name": "SDKLogger",
						"package": "@signalwire/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.logger"
					}
				},
				{
					"id": 893,
					"name": "logLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "logging level"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 115,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L115"
						},
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 115,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L115"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "debug"
							},
							{
								"type": "literal",
								"value": "trace"
							},
							{
								"type": "literal",
								"value": "info"
							},
							{
								"type": "literal",
								"value": "warn"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "silent"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.logLevel"
					}
				},
				{
					"id": 896,
					"name": "maxApiRequestRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Max API request retry, set to 0 disable retries"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 147,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L147"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.maxApiRequestRetries"
					}
				},
				{
					"id": 876,
					"name": "profileId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional profileId ID for multi-instance support. Defaults to 'default'"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.profileId"
					}
				},
				{
					"id": 891,
					"name": "project",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SignalWire project id, e.g. "
							},
							{
								"kind": "code",
								"text": "`a10d8a9f-2166-4e82-56ff-118bc3a4840f`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 103,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L103"
						},
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 103,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L103"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.project"
					}
				},
				{
					"id": 882,
					"name": "rootElement",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "HTML element in which to display the video stream"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 97,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L97"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "HTMLElement"
								},
								"name": "HTMLElement",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.rootElement"
					}
				},
				{
					"id": 900,
					"name": "sessionChannel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 118,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L118"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/redux/interfaces.ts",
							"qualifiedName": "SessionChannel"
						},
						"name": "SessionChannel",
						"package": "@signalwire/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.sessionChannel"
					}
				},
				{
					"id": 878,
					"name": "shouldDisconnect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L13"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 879,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/index.ts",
									"line": 13,
									"character": 21,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L13"
								}
							],
							"signatures": [
								{
									"id": 880,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 13,
											"character": 21,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L13"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 877,
					"name": "storage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional storage implementation for persisting client data"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": 359,
						"name": "SignalWireStorageContract",
						"package": "@signalwire/core"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.storage"
					}
				},
				{
					"id": 885,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SignalWire project token, e.g. "
							},
							{
								"kind": "code",
								"text": "`PT9e5660c101cd140a1c93a0197640a369cf5f16975a0079c9`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 105,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L105"
						},
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 105,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L105"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.token"
					}
				},
				{
					"id": 897,
					"name": "topics",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An alias for contexts - Topics has more priority over contexts"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 112,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L112"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.topics"
					}
				},
				{
					"id": 883,
					"name": "userVariables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "User & UserAgent metadata"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 99,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L99"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.userVariables"
					}
				},
				{
					"id": 898,
					"name": "onRefreshToken",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 117,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L117"
						}
					],
					"signatures": [
						{
							"id": 899,
							"name": "onRefreshToken",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Callback invoked by the SDK to fetch a new token for re-authentication"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/utils/interfaces.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L117"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "WSClientOptions.onRefreshToken"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientOptions.onRefreshToken"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						895,
						894,
						892,
						887,
						886,
						884,
						881,
						901,
						890,
						893,
						896,
						876,
						891,
						882,
						900,
						878,
						877,
						885,
						897,
						883
					]
				},
				{
					"title": "Methods",
					"children": [
						898
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/index.ts",
					"line": 7,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L7"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/client",
						"packagePath": "src/unified/interfaces/wsClient.ts",
						"qualifiedName": "WSClientOptions"
					},
					"name": "WSClientOptions",
					"package": "@signalwire/client"
				}
			]
		},
		{
			"id": 802,
			"name": "SignalWireContract",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 803,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L19"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/client",
									"packagePath": "src/unified/interfaces/httpClient.ts",
									"qualifiedName": "HTTPClientContract"
								},
								"name": "HTTPClientContract",
								"package": "@signalwire/client"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "getAddresses"
									},
									{
										"type": "literal",
										"value": "getAddress"
									},
									{
										"type": "literal",
										"value": "getMyAddresses"
									}
								]
							}
						],
						"name": "Pick",
						"package": "typescript"
					}
				},
				{
					"id": 830,
					"name": "chat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L31"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 831,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 832,
									"name": "getMessages",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 32,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L32"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 833,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/Conversation.ts",
													"line": 217,
													"character": 15,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L217"
												}
											],
											"signatures": [
												{
													"id": 834,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/Conversation.ts",
															"line": 217,
															"character": 15,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L217"
														}
													],
													"parameters": [
														{
															"id": 835,
															"name": "params",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 686,
																"name": "GetConversationChatMessageParams",
																"package": "@signalwire/client"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 689,
																"name": "GetConversationChatMessageResult",
																"package": "@signalwire/client"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 844,
									"name": "join",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 35,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L35"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 845,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/Conversation.ts",
													"line": 338,
													"character": 15,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L338"
												}
											],
											"signatures": [
												{
													"id": 846,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/Conversation.ts",
															"line": 338,
															"character": 15,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L338"
														}
													],
													"parameters": [
														{
															"id": 847,
															"name": "params",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 660,
																"name": "JoinConversationParams",
																"package": "@signalwire/client"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 663,
																"name": "JoinConversationResponse",
																"package": "@signalwire/client"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 840,
									"name": "sendMessage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 34,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L34"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 841,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/Conversation.ts",
													"line": 116,
													"character": 15,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L116"
												}
											],
											"signatures": [
												{
													"id": 842,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/Conversation.ts",
															"line": 116,
															"character": 15,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L116"
														}
													],
													"parameters": [
														{
															"id": 843,
															"name": "params",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 625,
																"name": "SendConversationMessageParams",
																"package": "@signalwire/client"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 631,
																"name": "SendConversationMessageResponse",
																"package": "@signalwire/client"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 836,
									"name": "subscribe",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 33,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L33"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 837,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/Conversation.ts",
													"line": 323,
													"character": 15,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L323"
												}
											],
											"signatures": [
												{
													"id": 838,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/Conversation.ts",
															"line": 323,
															"character": 15,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L323"
														}
													],
													"parameters": [
														{
															"id": 839,
															"name": "params",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 656,
																"name": "ConversationChatMessagesSubscribeParams",
																"package": "@signalwire/client"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 652,
																"name": "ConversationSubscribeResult",
																"package": "@signalwire/client"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										832,
										844,
										840,
										836
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/index.ts",
									"line": 31,
									"character": 8,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L31"
								}
							]
						}
					}
				},
				{
					"id": 804,
					"name": "conversation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/index.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L23"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 805,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 814,
									"name": "getConversationMessages",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 26,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L26"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 815,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/Conversation.ts",
													"line": 191,
													"character": 15,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L191"
												}
											],
											"signatures": [
												{
													"id": 816,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/Conversation.ts",
															"line": 191,
															"character": 15,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L191"
														}
													],
													"parameters": [
														{
															"id": 817,
															"name": "params",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 698,
																"name": "GetConversationMessagesParams",
																"package": "@signalwire/client"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 701,
																"name": "GetConversationMessagesResult",
																"package": "@signalwire/client"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 806,
									"name": "getConversations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 24,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L24"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 807,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/Conversation.ts",
													"line": 139,
													"character": 15,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L139"
												}
											],
											"signatures": [
												{
													"id": 808,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/Conversation.ts",
															"line": 139,
															"character": 15,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L139"
														}
													],
													"parameters": [
														{
															"id": 809,
															"name": "params",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 637,
																"name": "GetConversationsParams",
																"package": "@signalwire/client"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 647,
																"name": "GetConversationsResult",
																"package": "@signalwire/client"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 810,
									"name": "getMessages",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 25,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L25"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 811,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/Conversation.ts",
													"line": 165,
													"character": 15,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L165"
												}
											],
											"signatures": [
												{
													"id": 812,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/Conversation.ts",
															"line": 165,
															"character": 15,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L165"
														}
													],
													"parameters": [
														{
															"id": 813,
															"name": "params",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 668,
																"name": "GetMessagesParams",
																"package": "@signalwire/client"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 681,
																"name": "GetMessagesResult",
																"package": "@signalwire/client"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 826,
									"name": "join",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 29,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L29"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 827,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/Conversation.ts",
													"line": 338,
													"character": 15,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L338"
												}
											],
											"signatures": [
												{
													"id": 828,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/Conversation.ts",
															"line": 338,
															"character": 15,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L338"
														}
													],
													"parameters": [
														{
															"id": 829,
															"name": "params",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 660,
																"name": "JoinConversationParams",
																"package": "@signalwire/client"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 663,
																"name": "JoinConversationResponse",
																"package": "@signalwire/client"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 822,
									"name": "sendMessage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 28,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L28"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 823,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/Conversation.ts",
													"line": 116,
													"character": 15,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L116"
												}
											],
											"signatures": [
												{
													"id": 824,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/Conversation.ts",
															"line": 116,
															"character": 15,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L116"
														}
													],
													"parameters": [
														{
															"id": 825,
															"name": "params",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 625,
																"name": "SendConversationMessageParams",
																"package": "@signalwire/client"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 631,
																"name": "SendConversationMessageResponse",
																"package": "@signalwire/client"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 818,
									"name": "subscribe",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/index.ts",
											"line": 27,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L27"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 819,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/Conversation.ts",
													"line": 313,
													"character": 15,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L313"
												}
											],
											"signatures": [
												{
													"id": 820,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client/src/unified/Conversation.ts",
															"line": 313,
															"character": 15,
															"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/Conversation.ts#L313"
														}
													],
													"parameters": [
														{
															"id": 821,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 648,
																"name": "ConversationSubscribeCallback",
																"package": "@signalwire/client"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 652,
																"name": "ConversationSubscribeResult",
																"package": "@signalwire/client"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										814,
										806,
										810,
										826,
										822,
										818
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/index.ts",
									"line": 23,
									"character": 16,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L23"
								}
							]
						}
					}
				},
				{
					"id": 850,
					"name": "dial",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 24,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L24"
						}
					],
					"signatures": [
						{
							"id": 851,
							"name": "dial",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Dial a resource and connect the call"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise resolving to a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "CallSession",
												"target": 1332
											},
											{
												"kind": "text",
												"text": " object."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L24"
								}
							],
							"parameters": [
								{
									"id": 852,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "DialParams",
												"target": 767
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 767,
										"name": "DialParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1332,
										"name": "CallSession",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "WSClientContract.dial"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientContract.dial"
					}
				},
				{
					"id": 848,
					"name": "disconnect",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L17"
						}
					],
					"signatures": [
						{
							"id": 849,
							"name": "disconnect",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disconnects the client from the SignalWire network."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L17"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "WSClientContract.disconnect"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientContract.disconnect"
					}
				},
				{
					"id": 873,
					"name": "getSubscriberInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/httpClient.ts",
							"line": 57,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/httpClient.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 874,
							"name": "getSubscriberInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieve information about the current subscriber."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to the subscriber information object "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "GetSubscriberInfoResult",
												"target": 919
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/httpClient.ts",
									"line": 57,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/httpClient.ts#L57"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 902,
										"name": "GetSubscriberInfoResponse",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.getSubscriberInfo"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.getSubscriberInfo"
					}
				},
				{
					"id": 856,
					"name": "handlePushNotification",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 857,
							"name": "handlePushNotification",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Handles the incoming call via Push Notification"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise resolving to the push notification result "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "HandlePushNotificationResult",
												"target": 765
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L38"
								}
							],
							"parameters": [
								{
									"id": 858,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "HandlePushNotificationParams",
												"target": 762
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 762,
										"name": "HandlePushNotificationParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 765,
										"name": "HandlePushNotificationResult",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "WSClientContract.handlePushNotification"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientContract.handlePushNotification"
					}
				},
				{
					"id": 865,
					"name": "offline",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 61,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L61"
						}
					],
					"signatures": [
						{
							"id": 866,
							"name": "offline",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mark the client as 'offline' to stop receiving calls over WebSocket."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves when the client is successfully marked as offline."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L61"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "WSClientContract.offline"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientContract.offline"
					}
				},
				{
					"id": 862,
					"name": "online",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 54,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L54"
						}
					],
					"signatures": [
						{
							"id": 863,
							"name": "online",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mark the client as 'online' to receive calls over WebSocket."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves when the client is successfully marked as online."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L54"
								}
							],
							"parameters": [
								{
									"id": 864,
									"name": "incomingCallHandlers",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The handlers for processing incoming calls."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 760,
										"name": "OnlineParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "WSClientContract.online"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientContract.online"
					}
				},
				{
					"id": 853,
					"name": "reattach",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 854,
							"name": "reattach",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reattach to the previous call if the previous call was not disconnected"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise resolving to a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "CallSession",
												"target": 1332
											},
											{
												"kind": "text",
												"text": " object."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L31"
								}
							],
							"parameters": [
								{
									"id": 855,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "ReattachParams",
												"target": 784
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 784,
										"name": "ReattachParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1332,
										"name": "CallSession",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "WSClientContract.reattach"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientContract.reattach"
					}
				},
				{
					"id": 867,
					"name": "registerDevice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/httpClient.ts",
							"line": 44,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/httpClient.ts#L44"
						}
					],
					"signatures": [
						{
							"id": 868,
							"name": "registerDevice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a device to receive incoming call requests."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to the registration result "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "RegisterDeviceResult",
												"target": 720
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/httpClient.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/httpClient.ts#L44"
								}
							],
							"parameters": [
								{
									"id": 869,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The parameters required to register the device "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "RegisterDeviceParams",
												"target": 708
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 708,
										"name": "RegisterDeviceParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 713,
										"name": "RegisterDeviceResponse",
										"package": "@signalwire/client"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.registerDevice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.registerDevice"
					}
				},
				{
					"id": 870,
					"name": "unregisterDevice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/httpClient.ts",
							"line": 51,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/httpClient.ts#L51"
						}
					],
					"signatures": [
						{
							"id": 871,
							"name": "unregisterDevice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unregister a device to stop receiving incoming call requests."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves when the device is successfully unregistered."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/httpClient.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/httpClient.ts#L51"
								}
							],
							"parameters": [
								{
									"id": 872,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The parameters required to unregister the device "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "UnregisterDeviceParams",
												"target": 711
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 711,
										"name": "UnregisterDeviceParams",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.unregisterDevice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.unregisterDevice"
					}
				},
				{
					"id": 859,
					"name": "updateToken",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
							"line": 47,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L47"
						}
					],
					"signatures": [
						{
							"id": 860,
							"name": "updateToken",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow the user to update the authentication token."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves when the token is successfully updated."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L47"
								}
							],
							"parameters": [
								{
									"id": 861,
									"name": "token",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "string: The new authentication token."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "WSClientContract.updateToken"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "WSClientContract.updateToken"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						803,
						830,
						804
					]
				},
				{
					"title": "Methods",
					"children": [
						850,
						848,
						873,
						856,
						865,
						862,
						853,
						867,
						870,
						859
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/index.ts",
					"line": 16,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L16"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/client",
						"packagePath": "src/unified/interfaces/wsClient.ts",
						"qualifiedName": "WSClientContract"
					},
					"name": "WSClientContract",
					"package": "@signalwire/client"
				},
				{
					"type": "reference",
					"target": {
						"packageName": "typescript",
						"packagePath": "lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"packageName": "@signalwire/client",
								"packagePath": "src/unified/interfaces/httpClient.ts",
								"qualifiedName": "HTTPClientContract"
							},
							"name": "HTTPClientContract",
							"package": "@signalwire/client"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "getAddresses"
								},
								{
									"type": "literal",
									"value": "getAddress"
								},
								{
									"type": "literal",
									"value": "getMyAddresses"
								}
							]
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			]
		},
		{
			"id": 5,
			"name": "SignalWireCredentials",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Public type for authentication credentials"
					}
				]
			},
			"children": [
				{
					"id": 11,
					"name": "host",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 20,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L20"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 7,
					"name": "satRefreshPayload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom payload for refresh request"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L13"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9,
					"name": "satRefreshResultMapper",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "String identifier for predefined mapper function"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L17"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/client",
							"packagePath": "src/unified/utils/satRefreshMappers.ts",
							"qualifiedName": "RefreshMapper"
						},
						"name": "RefreshMapper",
						"package": "@signalwire/client"
					}
				},
				{
					"id": 8,
					"name": "satRefreshURL",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "URL for refresh token endpoint"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6,
					"name": "satToken",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current SAT token"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10,
					"name": "tokenExpiry",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Token expiry timestamp"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11,
						7,
						9,
						8,
						6,
						10
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 9,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L9"
				}
			]
		},
		{
			"id": 359,
			"name": "SignalWireStorageContract",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Contract for SignalWire storage implementations.\nProvides both persistent and session storage capabilities."
					}
				]
			},
			"children": [
				{
					"id": 385,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 79,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L79"
						}
					],
					"signatures": [
						{
							"id": 386,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear all items from persistent storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L79"
								}
							],
							"parameters": [
								{
									"id": 387,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional prefix to only clear matching keys"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 413,
					"name": "clearSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 143,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L143"
						}
					],
					"signatures": [
						{
							"id": 414,
							"name": "clearSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear all items from session storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L143"
								}
							],
							"parameters": [
								{
									"id": 415,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional prefix to only clear matching keys"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 367,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 37,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L37"
						}
					],
					"signatures": [
						{
							"id": 368,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a value from persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the item was deleted, false if it didn't exist"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L37"
								}
							],
							"parameters": [
								{
									"id": 369,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 379,
					"name": "deleteMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 66,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L66"
						}
					],
					"signatures": [
						{
							"id": 380,
							"name": "deleteMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete multiple values from persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Map of keys to deletion results"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 66,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L66"
								}
							],
							"parameters": [
								{
									"id": 381,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 407,
					"name": "deleteManySession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 130,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L130"
						}
					],
					"signatures": [
						{
							"id": 408,
							"name": "deleteManySession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete multiple values from session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Map of keys to deletion results"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 130,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L130"
								}
							],
							"parameters": [
								{
									"id": 409,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 395,
					"name": "deleteSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 101,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L101"
						}
					],
					"signatures": [
						{
							"id": 396,
							"name": "deleteSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a value from session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the item was deleted, false if it didn't exist"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 101,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L101"
								}
							],
							"parameters": [
								{
									"id": 397,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 360,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 361,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a value from persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The stored value or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L23"
								}
							],
							"parameters": [
								{
									"id": 362,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 373,
					"name": "getMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 51,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L51"
						}
					],
					"signatures": [
						{
							"id": 374,
							"name": "getMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get multiple values from persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Map of keys to values (null if not found)"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L51"
								}
							],
							"parameters": [
								{
									"id": 375,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 401,
					"name": "getManySession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 115,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L115"
						}
					],
					"signatures": [
						{
							"id": 402,
							"name": "getManySession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get multiple values from session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Map of keys to values (null if not found)"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 115,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L115"
								}
							],
							"parameters": [
								{
									"id": 403,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 388,
					"name": "getSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 87,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L87"
						}
					],
					"signatures": [
						{
							"id": 389,
							"name": "getSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a value from session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The stored value or null if not found"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 87,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L87"
								}
							],
							"parameters": [
								{
									"id": 390,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 416,
					"name": "getStorageInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 149,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L149"
						}
					],
					"signatures": [
						{
							"id": 417,
							"name": "getStorageInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get information about the storage implementation"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Storage information including type and availability"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L149"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 418,
										"name": "StorageInfo",
										"package": "@signalwire/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 370,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 44,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L44"
						}
					],
					"signatures": [
						{
							"id": 371,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if a key exists in persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the key exists"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L44"
								}
							],
							"parameters": [
								{
									"id": 372,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 398,
					"name": "hasSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 108,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L108"
						}
					],
					"signatures": [
						{
							"id": 399,
							"name": "hasSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if a key exists in session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the key exists"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 108,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L108"
								}
							],
							"parameters": [
								{
									"id": 400,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 382,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 73,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 383,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all keys in persistent storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of matching keys"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 73,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L73"
								}
							],
							"parameters": [
								{
									"id": 384,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional prefix to filter keys"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 410,
					"name": "listSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 137,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L137"
						}
					],
					"signatures": [
						{
							"id": 411,
							"name": "listSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List all keys in session storage"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of matching keys"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 137,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L137"
								}
							],
							"parameters": [
								{
									"id": 412,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional prefix to filter keys"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 363,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 30,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L30"
						}
					],
					"signatures": [
						{
							"id": 364,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set a value in persistent storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 365,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 366,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to store"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 376,
					"name": "setMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 57,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 377,
							"name": "setMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set multiple values in persistent storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 57,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L57"
								}
							],
							"parameters": [
								{
									"id": 378,
									"name": "entries",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Map or array of key-value pairs"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es2015.collection.d.ts",
													"qualifiedName": "Map"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Map",
												"package": "typescript"
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 404,
					"name": "setManySession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 121,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L121"
						}
					],
					"signatures": [
						{
							"id": 405,
							"name": "setManySession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set multiple values in session storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L121"
								}
							],
							"parameters": [
								{
									"id": 406,
									"name": "entries",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Map or array of key-value pairs"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es2015.collection.d.ts",
													"qualifiedName": "Map"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Map",
												"package": "typescript"
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 391,
					"name": "setSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 94,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L94"
						}
					],
					"signatures": [
						{
							"id": 392,
							"name": "setSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set a value in session storage"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
									"line": 94,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L94"
								}
							],
							"parameters": [
								{
									"id": 393,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 394,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to store"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						385,
						413,
						367,
						379,
						407,
						395,
						360,
						373,
						401,
						388,
						416,
						370,
						398,
						382,
						410,
						363,
						376,
						404,
						391
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
					"line": 16,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L16"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 1505,
					"name": "LocalStorageAdapter"
				},
				{
					"type": "reference",
					"target": 1591,
					"name": "StorageWrapper"
				}
			]
		},
		{
			"id": 418,
			"name": "StorageInfo",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Storage information about the underlying storage implementation"
					}
				]
			},
			"children": [
				{
					"id": 420,
					"name": "isAvailable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 6,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L6"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 421,
					"name": "isPersistent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 423,
					"name": "quotaTotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 422,
					"name": "quotaUsed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 8,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 419,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
							"line": 5,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L5"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "localStorage"
							},
							{
								"type": "literal",
								"value": "sessionStorage"
							},
							{
								"type": "literal",
								"value": "memory"
							},
							{
								"type": "literal",
								"value": "custom"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						420,
						421,
						423,
						422,
						419
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/SignalwireStorageContract.ts",
					"line": 4,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/SignalwireStorageContract.ts#L4"
				}
			]
		},
		{
			"id": 711,
			"name": "UnregisterDeviceParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 712,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/device.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						712
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/device.ts",
					"line": 8,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L8"
				}
			]
		},
		{
			"id": 241,
			"name": "UserOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 251,
					"name": "contexts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 110,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L110"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SessionOptions.contexts"
					}
				},
				{
					"id": 243,
					"name": "debug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 126,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L126"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 244,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 245,
									"name": "logWsTraffic",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/core/src/utils/interfaces.ts",
											"line": 127,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L127"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										245
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/utils/interfaces.ts",
									"line": 126,
									"character": 10,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L126"
								}
							]
						}
					}
				},
				{
					"id": 242,
					"name": "devTools",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 124,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L124"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 247,
					"name": "host",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 101,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L101"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SessionOptions.host"
					}
				},
				{
					"id": 257,
					"name": "instanceMap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 119,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L119"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/utils/interfaces.ts",
							"qualifiedName": "InstanceMap"
						},
						"name": "InstanceMap",
						"package": "@signalwire/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SessionOptions.instanceMap"
					}
				},
				{
					"id": 246,
					"name": "logger",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 130,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L130"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/utils/interfaces.ts",
							"qualifiedName": "SDKLogger"
						},
						"name": "SDKLogger",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 253,
					"name": "logLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "logging level"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 115,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L115"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "debug"
							},
							{
								"type": "literal",
								"value": "trace"
							},
							{
								"type": "literal",
								"value": "info"
							},
							{
								"type": "literal",
								"value": "warn"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "silent"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SessionOptions.logLevel"
					}
				},
				{
					"id": 250,
					"name": "profileId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 108,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L108"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SessionOptions.profileId"
					}
				},
				{
					"id": 248,
					"name": "project",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SignalWire project id, e.g. "
							},
							{
								"kind": "code",
								"text": "`a10d8a9f-2166-4e82-56ff-118bc3a4840f`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 103,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L103"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SessionOptions.project"
					}
				},
				{
					"id": 256,
					"name": "sessionChannel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 118,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L118"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/redux/interfaces.ts",
							"qualifiedName": "SessionChannel"
						},
						"name": "SessionChannel",
						"package": "@signalwire/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SessionOptions.sessionChannel"
					}
				},
				{
					"id": 249,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SignalWire project token, e.g. "
							},
							{
								"kind": "code",
								"text": "`PT9e5660c101cd140a1c93a0197640a369cf5f16975a0079c9`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 105,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L105"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SessionOptions.token"
					}
				},
				{
					"id": 252,
					"name": "topics",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An alias for contexts - Topics has more priority over contexts"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 112,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L112"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SessionOptions.topics"
					}
				},
				{
					"id": 254,
					"name": "onRefreshToken",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "packages/core/src/utils/interfaces.ts",
							"line": 117,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L117"
						}
					],
					"signatures": [
						{
							"id": 255,
							"name": "onRefreshToken",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Callback invoked by the SDK to fetch a new token for re-authentication"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/core/src/utils/interfaces.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L117"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SessionOptions.onRefreshToken"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SessionOptions.onRefreshToken"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						251,
						243,
						242,
						247,
						257,
						246,
						253,
						250,
						248,
						256,
						249,
						252
					]
				},
				{
					"title": "Methods",
					"children": [
						254
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/utils/interfaces.ts",
					"line": 122,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L122"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "@signalwire/core",
						"packagePath": "src/utils/interfaces.ts",
						"qualifiedName": "SessionOptions"
					},
					"name": "SessionOptions",
					"package": "@signalwire/core"
				}
			]
		},
		{
			"id": 260,
			"name": "VideoLayout",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Base Interface for a VideoLayout entity"
					}
				]
			},
			"children": [
				{
					"id": 261,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/videoLayout.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/videoLayout.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 265,
					"name": "layers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/videoLayout.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/videoLayout.ts#L33"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"packageName": "@signalwire/core",
								"packagePath": "src/types/videoLayout.ts",
								"qualifiedName": "VideoLayoutLayer"
							},
							"name": "VideoLayoutLayer",
							"package": "@signalwire/core"
						}
					}
				},
				{
					"id": 262,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/videoLayout.ts",
							"line": 30,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/videoLayout.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 264,
					"name": "roomId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/videoLayout.ts",
							"line": 32,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/videoLayout.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 263,
					"name": "roomSessionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/core/src/types/videoLayout.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/videoLayout.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						261,
						265,
						262,
						264,
						263
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/types/videoLayout.ts",
					"line": 28,
					"character": 17,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/videoLayout.ts#L28"
				}
			]
		},
		{
			"id": 572,
			"name": "Address",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/address.ts",
					"line": 22,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L22"
				}
			],
			"type": {
				"type": "reference",
				"target": 557,
				"name": "GetAddressResponse",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 424,
			"name": "BaseConnectionOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/webrtc/src/BaseConnection.ts",
					"line": 51,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/webrtc/src/BaseConnection.ts#L51"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 425,
						"name": "ConnectionOptions",
						"package": "@signalwire/webrtc"
					},
					{
						"type": "reference",
						"target": 193,
						"name": "BaseComponentOptions",
						"package": "@signalwire/core"
					}
				]
			}
		},
		{
			"id": 209,
			"name": "BaseConnectionState",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/utils/interfaces.ts",
					"line": 267,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L267"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "active"
					},
					{
						"type": "literal",
						"value": "answering"
					},
					{
						"type": "literal",
						"value": "destroy"
					},
					{
						"type": "literal",
						"value": "early"
					},
					{
						"type": "literal",
						"value": "hangup"
					},
					{
						"type": "literal",
						"value": "held"
					},
					{
						"type": "literal",
						"value": "new"
					},
					{
						"type": "literal",
						"value": "purge"
					},
					{
						"type": "literal",
						"value": "recovering"
					},
					{
						"type": "literal",
						"value": "requesting"
					},
					{
						"type": "literal",
						"value": "ringing"
					},
					{
						"type": "literal",
						"value": "trying"
					}
				]
			}
		},
		{
			"id": 486,
			"name": "CallJoinedEventParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/utils/interfaces/fabric.ts",
					"line": 76,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L76"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 487,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 488,
									"name": "capabilities",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/fabric.ts",
											"line": 77,
											"character": 2,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L77"
										}
									],
									"type": {
										"type": "reference",
										"target": 602,
										"name": "CallCapabilitiesContract",
										"package": "@signalwire/client"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										488
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client/src/utils/interfaces/fabric.ts",
									"line": 76,
									"character": 36,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L76"
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/core",
									"packagePath": "src/types/fabricRoomSession.ts",
									"qualifiedName": "CallJoinedEventParams"
								},
								"name": "InternalCallJoinedEventParams",
								"package": "@signalwire/core",
								"qualifiedName": "CallJoinedEventParams"
							},
							{
								"type": "literal",
								"value": "capabilities"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 330,
			"name": "CallSessionEventParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricRoomSession.ts",
					"line": 768,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L768"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/fabricRoomSession.ts",
							"qualifiedName": "CallJoinedEventParams"
						},
						"name": "CallJoinedEventParams",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": 271,
						"name": "CallUpdatedEventParams",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": 275,
						"name": "CallLeftEventParams",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": 283,
						"name": "CallStateEventParams",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": 294,
						"name": "CallPlayEventParams",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": 300,
						"name": "CallConnectEventParams",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": 311,
						"name": "CallRoomEventParams",
						"package": "@signalwire/core"
					}
				]
			}
		},
		{
			"id": 555,
			"name": "CallSessionEvents",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/utils/interfaces/fabric.ts",
					"line": 114,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/fabric.ts#L114"
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "k",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/client",
							"packagePath": "src/utils/interfaces/fabric.ts",
							"qualifiedName": "CallSessionEventsHandlerMap"
						},
						"name": "CallSessionEventsHandlerMap",
						"package": "@signalwire/client"
					}
				},
				"templateType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/client",
							"packagePath": "src/utils/interfaces/fabric.ts",
							"qualifiedName": "k"
						},
						"name": "k",
						"package": "@signalwire/client",
						"refersToTypeParameter": true
					},
					"objectType": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/client",
							"packagePath": "src/utils/interfaces/fabric.ts",
							"qualifiedName": "CallSessionEventsHandlerMap"
						},
						"name": "CallSessionEventsHandlerMap",
						"package": "@signalwire/client"
					}
				}
			}
		},
		{
			"id": 210,
			"name": "ClientEvents",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of all the events the client can listen to."
					}
				],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/core/src/utils/interfaces.ts",
					"line": 265,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L265"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"packageName": "typescript",
					"packagePath": "lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 259,
						"name": "SessionEvents",
						"package": "@signalwire/core"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 211,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/core/src/utils/interfaces.ts",
									"line": 265,
									"character": 49,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L265"
								}
							],
							"signatures": [
								{
									"id": 212,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 213,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 682,
			"name": "ConversationChatMessage",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 111,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L111"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 670,
								"name": "ConversationMessage",
								"package": "@signalwire/client"
							},
							{
								"type": "literal",
								"value": "kind"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 683,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 684,
									"name": "text",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/conversation.ts",
											"line": 112,
											"character": 2,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L112"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 685,
									"name": "user_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/conversation.ts",
											"line": 113,
											"character": 2,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L113"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										684,
										685
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/conversation.ts",
									"line": 111,
									"character": 74,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L111"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 659,
			"name": "ConversationChatMessagesSubscribeResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 73,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L73"
				}
			],
			"type": {
				"type": "reference",
				"target": 652,
				"name": "ConversationSubscribeResult",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 1,
			"name": "ConversationChatSubscribeCallback",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 60,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L60"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 60,
							"character": 48,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L60"
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 4,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/conversation.ts",
											"qualifiedName": "ConversationChatEventParams"
										},
										"name": "ConversationChatEventParams",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 324,
			"name": "ConversationEvent",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/types/conversation.ts",
					"line": 39,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L39"
				}
			],
			"type": {
				"type": "reference",
				"target": 318,
				"name": "ConversationMessageEvent",
				"package": "@signalwire/core"
			}
		},
		{
			"id": 323,
			"name": "ConversationEventParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/types/conversation.ts",
					"line": 41,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L41"
				}
			],
			"type": {
				"type": "reference",
				"target": 1837,
				"name": "ConversationMessageEventParams",
				"package": "@signalwire/core"
			}
		},
		{
			"id": 317,
			"name": "ConversationMessageEventName",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/types/conversation.ts",
					"line": 3,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/conversation.ts#L3"
				}
			],
			"type": {
				"type": "literal",
				"value": "conversation.message"
			}
		},
		{
			"id": 648,
			"name": "ConversationSubscribeCallback",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 56,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L56"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 649,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 56,
							"character": 44,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L56"
						}
					],
					"signatures": [
						{
							"id": 650,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 651,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 323,
										"name": "ConversationEventParams",
										"package": "@signalwire/core"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 585,
			"name": "GetAddressesResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/address.ts",
					"line": 44,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L44"
				}
			],
			"type": {
				"type": "reference",
				"target": 920,
				"typeArguments": [
					{
						"type": "reference",
						"target": 557,
						"name": "GetAddressResponse",
						"package": "@signalwire/client"
					}
				],
				"name": "PaginatedResponse",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 586,
			"name": "GetAddressesResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/address.ts",
					"line": 46,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L46"
				}
			],
			"type": {
				"type": "reference",
				"target": 929,
				"typeArguments": [
					{
						"type": "reference",
						"target": 557,
						"name": "GetAddressResponse",
						"package": "@signalwire/client"
					}
				],
				"name": "PaginatedResult",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 583,
			"name": "GetAddressParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/address.ts",
					"line": 40,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L40"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 579,
						"name": "GetAddressByIdParams",
						"package": "@signalwire/client"
					},
					{
						"type": "reference",
						"target": 581,
						"name": "GetAddressByNameParams",
						"package": "@signalwire/client"
					}
				]
			}
		},
		{
			"id": 584,
			"name": "GetAddressResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/address.ts",
					"line": 42,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L42"
				}
			],
			"type": {
				"type": "reference",
				"target": 557,
				"name": "GetAddressResponse",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 41,
			"name": "GetClientParamsOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 107,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L107"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"packageName": "typescript",
					"packagePath": "lib/lib.es5.d.ts",
					"qualifiedName": "Omit"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 875,
						"name": "SignalWireClientParams",
						"package": "@signalwire/client"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "host"
							},
							{
								"type": "literal",
								"value": "token"
							}
						]
					}
				],
				"name": "Omit",
				"package": "typescript"
			}
		},
		{
			"id": 689,
			"name": "GetConversationChatMessageResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 121,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L121"
				}
			],
			"type": {
				"type": "reference",
				"target": 929,
				"typeArguments": [
					{
						"type": "reference",
						"target": 682,
						"name": "ConversationChatMessage",
						"package": "@signalwire/client"
					}
				],
				"name": "PaginatedResult",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 701,
			"name": "GetConversationMessagesResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 132,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L132"
				}
			],
			"type": {
				"type": "reference",
				"target": 929,
				"typeArguments": [
					{
						"type": "reference",
						"target": 670,
						"name": "ConversationMessage",
						"package": "@signalwire/client"
					}
				],
				"name": "PaginatedResult",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 646,
			"name": "GetConversationsResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 52,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L52"
				}
			],
			"type": {
				"type": "reference",
				"target": 920,
				"typeArguments": [
					{
						"type": "reference",
						"target": 639,
						"name": "ConversationResponse",
						"package": "@signalwire/client"
					}
				],
				"name": "PaginatedResponse",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 647,
			"name": "GetConversationsResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 54,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L54"
				}
			],
			"type": {
				"type": "reference",
				"target": 929,
				"typeArguments": [
					{
						"type": "reference",
						"target": 612,
						"name": "ConversationContract",
						"package": "@signalwire/client"
					}
				],
				"name": "PaginatedResult",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 681,
			"name": "GetMessagesResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 109,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L109"
				}
			],
			"type": {
				"type": "reference",
				"target": 929,
				"typeArguments": [
					{
						"type": "reference",
						"target": 670,
						"name": "ConversationMessage",
						"package": "@signalwire/client"
					}
				],
				"name": "PaginatedResult",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 919,
			"name": "GetSubscriberInfoResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/index.ts",
					"line": 86,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L86"
				}
			],
			"type": {
				"type": "reference",
				"target": 902,
				"name": "GetSubscriberInfoResponse",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 762,
			"name": "HandlePushNotificationParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
					"line": 83,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L83"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"packageName": "@signalwire/client",
							"packagePath": "src/unified/interfaces/wsClient.ts",
							"qualifiedName": "PushNotificationPayload"
						},
						"name": "PushNotificationPayload",
						"package": "@signalwire/client"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 763,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 764,
									"name": "incomingCallHandler",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
											"line": 84,
											"character": 2,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L84"
										}
									],
									"type": {
										"type": "reference",
										"target": 752,
										"name": "IncomingCallHandler",
										"package": "@signalwire/client"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										764
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/wsClient.ts",
									"line": 83,
									"character": 69,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/wsClient.ts#L83"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 752,
			"name": "IncomingCallHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
					"line": 28,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L28"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 753,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
							"line": 28,
							"character": 34,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 754,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 755,
									"name": "notification",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 741,
										"name": "IncomingCallNotification",
										"package": "@signalwire/client"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 721,
			"name": "IncomingInviteSource",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/incomingCallManager.ts",
					"line": 4,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/incomingCallManager.ts#L4"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "websocket"
					},
					{
						"type": "literal",
						"value": "pushNotification"
					}
				]
			}
		},
		{
			"id": 358,
			"name": "InternalMemberEntity",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "MemberEntity entity for internal usage (converted to snake_case)"
					}
				],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricMember.ts",
					"line": 115,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L115"
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "K",
				"parameterType": {
					"type": "reference",
					"target": {
						"packageName": "typescript",
						"packagePath": "lib/lib.es5.d.ts",
						"qualifiedName": "NonNullable"
					},
					"typeArguments": [
						{
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 357,
								"name": "MemberEntity",
								"package": "@signalwire/core"
							}
						}
					],
					"name": "NonNullable",
					"package": "typescript"
				},
				"templateType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/fabricMember.ts",
							"qualifiedName": "K"
						},
						"name": "K",
						"package": "@signalwire/core",
						"refersToTypeParameter": true
					},
					"objectType": {
						"type": "reference",
						"target": 357,
						"name": "MemberEntity",
						"package": "@signalwire/core"
					}
				},
				"nameType": {
					"type": "reference",
					"target": {
						"packageName": "@signalwire/core",
						"packagePath": "src/types/utils.ts",
						"qualifiedName": "CamelToSnakeCase"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"packageName": "@signalwire/core",
								"packagePath": "src/types/fabricMember.ts",
								"qualifiedName": "K"
							},
							"name": "K",
							"package": "@signalwire/core",
							"refersToTypeParameter": true
						}
					],
					"name": "CamelToSnakeCase",
					"package": "@signalwire/core"
				}
			}
		},
		{
			"id": 266,
			"name": "InternalVideoLayout",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/types/videoLayout.ts",
					"line": 57,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/videoLayout.ts#L57"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "reference",
							"target": {
								"packageName": "typescript",
								"packagePath": "lib/lib.es5.d.ts",
								"qualifiedName": "Exclude"
							},
							"typeArguments": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 260,
										"name": "VideoLayout",
										"package": "@signalwire/core"
									}
								},
								{
									"type": "literal",
									"value": "layers"
								}
							],
							"name": "Exclude",
							"package": "typescript"
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"packageName": "@signalwire/core",
									"packagePath": "src/types/videoLayout.ts",
									"qualifiedName": "K"
								},
								"name": "K",
								"package": "@signalwire/core",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 260,
								"name": "VideoLayout",
								"package": "@signalwire/core"
							}
						},
						"nameType": {
							"type": "reference",
							"target": {
								"packageName": "@signalwire/core",
								"packagePath": "src/types/utils.ts",
								"qualifiedName": "CamelToSnakeCase"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"packageName": "@signalwire/core",
										"packagePath": "src/types/videoLayout.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@signalwire/core",
									"refersToTypeParameter": true
								}
							],
							"name": "CamelToSnakeCase",
							"package": "@signalwire/core"
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 267,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 268,
									"name": "layers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/core/src/types/videoLayout.ts",
											"line": 63,
											"character": 2,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/videoLayout.ts#L63"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "@signalwire/core",
												"packagePath": "src/types/videoLayout.ts",
												"qualifiedName": "InternalVideoLayoutLayer"
											},
											"name": "InternalVideoLayoutLayer",
											"package": "@signalwire/core"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										268
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/core/src/types/videoLayout.ts",
									"line": 62,
									"character": 4,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/videoLayout.ts#L62"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 667,
			"name": "JoinConversationResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 87,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L87"
				}
			],
			"type": {
				"type": "reference",
				"target": 663,
				"name": "JoinConversationResponse",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 357,
			"name": "MemberEntity",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Member properties"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricMember.ts",
					"line": 99,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L99"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"packageName": "@signalwire/core",
					"packagePath": "src/types/utils.ts",
					"qualifiedName": "OnlyStateProperties"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/fabricMember.ts",
							"qualifiedName": "MemberContract"
						},
						"name": "MemberContract",
						"package": "@signalwire/core"
					}
				],
				"name": "OnlyStateProperties",
				"package": "@signalwire/core"
			}
		},
		{
			"id": 356,
			"name": "MemberEventParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricMember.ts",
					"line": 229,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricMember.ts#L229"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 335,
						"name": "MemberJoinedEventParams",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": 343,
						"name": "MemberLeftEventParams",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": 339,
						"name": "MemberUpdatedEventParams",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": 348,
						"name": "MemberTalkingEventParams",
						"package": "@signalwire/core"
					}
				]
			}
		},
		{
			"id": 1310,
			"name": "OverlayMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/VideoOverlays.ts",
					"line": 6,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/VideoOverlays.ts#L6"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"packageName": "typescript",
					"packagePath": "lib/lib.es2015.collection.d.ts",
					"qualifiedName": "Map"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 1311,
						"name": "UserOverlay",
						"package": "@signalwire/client"
					}
				],
				"name": "Map",
				"package": "typescript"
			}
		},
		{
			"id": 720,
			"name": "RegisterDeviceResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/device.ts",
					"line": 21,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L21"
				}
			],
			"type": {
				"type": "reference",
				"target": 713,
				"name": "RegisterDeviceResponse",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 707,
			"name": "RegisterDeviceType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/device.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/device.ts#L1"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "iOS"
					},
					{
						"type": "literal",
						"value": "Android"
					},
					{
						"type": "literal",
						"value": "Desktop"
					}
				]
			}
		},
		{
			"id": 556,
			"name": "ResourceType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/address.ts",
					"line": 3,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/address.ts#L3"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "app"
					},
					{
						"type": "literal",
						"value": "call"
					},
					{
						"type": "literal",
						"value": "room"
					},
					{
						"type": "literal",
						"value": "subscriber"
					}
				]
			}
		},
		{
			"id": 547,
			"name": "RoomEventNames",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of all the events a RoomObject can listen to"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/client/src/utils/interfaces/video.ts",
					"line": 88,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L88"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/videoRoomSession.ts",
							"qualifiedName": "VideoRoomSessionEventNames"
						},
						"name": "VideoRoomSessionEventNames",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/videoMember.ts",
							"qualifiedName": "VideoMemberEventNames"
						},
						"name": "VideoMemberEventNames",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/videoLayout.ts",
							"qualifiedName": "VideoLayoutEventNames"
						},
						"name": "VideoLayoutEventNames",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/videoRecording.ts",
							"qualifiedName": "VideoRecordingEventNames"
						},
						"name": "VideoRecordingEventNames",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/videoPlayback.ts",
							"qualifiedName": "VideoPlaybackEventNames"
						},
						"name": "VideoPlaybackEventNames",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/videoStream.ts",
							"qualifiedName": "VideoStreamEventNames"
						},
						"name": "VideoStreamEventNames",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": 240,
						"name": "RTCTrackEventName",
						"package": "@signalwire/core"
					}
				]
			}
		},
		{
			"id": 546,
			"name": "RoomSessionObjectEvents",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/utils/interfaces/video.ts",
					"line": 157,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L157"
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "k",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 489,
						"name": "RoomSessionObjectEventsHandlerMap",
						"package": "@signalwire/client"
					}
				},
				"templateType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "reference",
						"target": {
							"packageName": "@signalwire/client",
							"packagePath": "src/utils/interfaces/video.ts",
							"qualifiedName": "k"
						},
						"name": "k",
						"package": "@signalwire/client",
						"refersToTypeParameter": true
					},
					"objectType": {
						"type": "reference",
						"target": 489,
						"name": "RoomSessionObjectEventsHandlerMap",
						"package": "@signalwire/client"
					}
				}
			}
		},
		{
			"id": 489,
			"name": "RoomSessionObjectEventsHandlerMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/utils/interfaces/video.ts",
					"line": 97,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L97"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/core",
									"packagePath": "src/types/videoRoomDevice.ts",
									"qualifiedName": "VideoRoomDeviceEventNames"
								},
								"name": "VideoRoomDeviceEventNames",
								"package": "@signalwire/core"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 490,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 99,
											"character": 2,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L99"
										}
									],
									"signatures": [
										{
											"id": 491,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 492,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/core",
															"packagePath": "src/types/videoRoomDevice.ts",
															"qualifiedName": "DeviceUpdatedEventParams"
														},
														"name": "DeviceUpdatedEventParams",
														"package": "@signalwire/core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/core",
									"packagePath": "src/types/videoLayout.ts",
									"qualifiedName": "VideoLayoutEventNames"
								},
								"name": "VideoLayoutEventNames",
								"package": "@signalwire/core"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 493,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 103,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L103"
										}
									],
									"signatures": [
										{
											"id": 494,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 495,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/core",
															"packagePath": "src/types/videoLayout.ts",
															"qualifiedName": "VideoLayoutChangedEventParams"
														},
														"name": "VideoLayoutChangedEventParams",
														"package": "@signalwire/core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Exclude"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/videoMember.ts",
											"qualifiedName": "VideoMemberEventNames"
										},
										"name": "VideoMemberEventNames",
										"package": "@signalwire/core"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoMember.ts",
													"qualifiedName": "MemberUpdated"
												},
												"name": "MemberUpdated",
												"package": "@signalwire/core"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoMember.ts",
													"qualifiedName": "CoreMemberUpdatedEventNames"
												},
												"name": "CoreMemberUpdatedEventNames",
												"package": "@signalwire/core"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoMember.ts",
													"qualifiedName": "MemberListUpdated"
												},
												"name": "MemberListUpdated",
												"package": "@signalwire/core"
											}
										]
									}
								],
								"name": "Exclude",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 496,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 110,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L110"
										}
									],
									"signatures": [
										{
											"id": 497,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 498,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/client",
															"packagePath": "src/utils/interfaces/video.ts",
															"qualifiedName": "VideoMemberHandlerParams"
														},
														"name": "VideoMemberHandlerParams",
														"package": "@signalwire/client"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Extract"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/videoMember.ts",
											"qualifiedName": "VideoMemberEventNames"
										},
										"name": "VideoMemberEventNames",
										"package": "@signalwire/core"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoMember.ts",
													"qualifiedName": "MemberUpdated"
												},
												"name": "MemberUpdated",
												"package": "@signalwire/core"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoMember.ts",
													"qualifiedName": "CoreMemberUpdatedEventNames"
												},
												"name": "CoreMemberUpdatedEventNames",
												"package": "@signalwire/core"
											}
										]
									}
								],
								"name": "Extract",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 499,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 114,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L114"
										}
									],
									"signatures": [
										{
											"id": 500,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 501,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/client",
															"packagePath": "src/utils/interfaces/video.ts",
															"qualifiedName": "VideoMemberUpdatedHandlerParams"
														},
														"name": "VideoMemberUpdatedHandlerParams",
														"package": "@signalwire/client"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Extract"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/videoMember.ts",
											"qualifiedName": "VideoMemberEventNames"
										},
										"name": "VideoMemberEventNames",
										"package": "@signalwire/core"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/videoMember.ts",
											"qualifiedName": "MemberListUpdated"
										},
										"name": "MemberListUpdated",
										"package": "@signalwire/core"
									}
								],
								"name": "Extract",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 502,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 118,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L118"
										}
									],
									"signatures": [
										{
											"id": 503,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 504,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/client",
															"packagePath": "src/utils/interfaces/video.ts",
															"qualifiedName": "VideoMemberListUpdatedParams"
														},
														"name": "VideoMemberListUpdatedParams",
														"package": "@signalwire/client"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/client",
									"packagePath": "src/utils/interfaces/video.ts",
									"qualifiedName": "DeprecatedMemberUpdatableProps"
								},
								"name": "DeprecatedMemberUpdatableProps",
								"package": "@signalwire/client"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 505,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 122,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L122"
										}
									],
									"signatures": [
										{
											"id": 506,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 507,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/client",
															"packagePath": "src/utils/interfaces/video.ts",
															"qualifiedName": "DeprecatedVideoMemberHandlerParams"
														},
														"name": "DeprecatedVideoMemberHandlerParams",
														"package": "@signalwire/client"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/core",
									"packagePath": "src/types/videoMember.ts",
									"qualifiedName": "MemberTalkingEventNames"
								},
								"name": "MemberTalkingEventNames",
								"package": "@signalwire/core"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 508,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 126,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L126"
										}
									],
									"signatures": [
										{
											"id": 509,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 510,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/core",
															"packagePath": "src/types/videoMember.ts",
															"qualifiedName": "VideoMemberTalkingEventParams"
														},
														"name": "VideoMemberTalkingEventParams",
														"package": "@signalwire/core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Exclude"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/videoRoomSession.ts",
											"qualifiedName": "VideoRoomSessionEventNames"
										},
										"name": "VideoRoomSessionEventNames",
										"package": "@signalwire/core"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomSession.ts",
													"qualifiedName": "RoomLeft"
												},
												"name": "RoomLeft",
												"package": "@signalwire/core"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomSession.ts",
													"qualifiedName": "RoomJoined"
												},
												"name": "RoomJoined",
												"package": "@signalwire/core"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@signalwire/core",
													"packagePath": "src/types/videoRoomSession.ts",
													"qualifiedName": "RoomSubscribed"
												},
												"name": "RoomSubscribed",
												"package": "@signalwire/core"
											}
										]
									}
								],
								"name": "Exclude",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 511,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 130,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L130"
										}
									],
									"signatures": [
										{
											"id": 512,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 513,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/core",
															"packagePath": "src/types/videoRoomSession.ts",
															"qualifiedName": "VideoRoomEventParams"
														},
														"name": "VideoRoomEventParams",
														"package": "@signalwire/core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/videoRoomSession.ts",
											"qualifiedName": "RoomJoined"
										},
										"name": "RoomJoined",
										"package": "@signalwire/core"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@signalwire/core",
											"packagePath": "src/types/videoRoomSession.ts",
											"qualifiedName": "RoomSubscribed"
										},
										"name": "RoomSubscribed",
										"package": "@signalwire/core"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 514,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 134,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L134"
										}
									],
									"signatures": [
										{
											"id": 515,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 516,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/core",
															"packagePath": "src/types/videoRoomSession.ts",
															"qualifiedName": "VideoRoomSubscribedEventParams"
														},
														"name": "VideoRoomSubscribedEventParams",
														"package": "@signalwire/core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/core",
									"packagePath": "src/types/videoRoomSession.ts",
									"qualifiedName": "RoomLeft"
								},
								"name": "RoomLeft",
								"package": "@signalwire/core"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 517,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 136,
											"character": 19,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L136"
										}
									],
									"signatures": [
										{
											"id": 518,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 519,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/core",
															"packagePath": "src/types/videoRoomSession.ts",
															"qualifiedName": "RoomLeftEventParams"
														},
														"name": "RoomLeftEventParams",
														"package": "@signalwire/core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/webrtc",
									"packagePath": "src/utils/interfaces.ts",
									"qualifiedName": "MediaEventNames"
								},
								"name": "MediaEventNames",
								"package": "@signalwire/webrtc"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 520,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 137,
											"character": 26,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L137"
										}
									],
									"signatures": [
										{
											"id": 521,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/core",
									"packagePath": "src/types/videoRoomDevice.ts",
									"qualifiedName": "VideoRoomDeviceUpdatedEventNames"
								},
								"name": "VideoRoomDeviceUpdatedEventNames",
								"package": "@signalwire/core"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 522,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 140,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L140"
										}
									],
									"signatures": [
										{
											"id": 523,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 524,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/core",
															"packagePath": "src/types/videoRoomDevice.ts",
															"qualifiedName": "DeviceUpdatedEventParams"
														},
														"name": "DeviceUpdatedEventParams",
														"package": "@signalwire/core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/core",
									"packagePath": "src/types/videoRoomDevice.ts",
									"qualifiedName": "VideoRoomDeviceDisconnectedEventNames"
								},
								"name": "VideoRoomDeviceDisconnectedEventNames",
								"package": "@signalwire/core"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 525,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 144,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L144"
										}
									],
									"signatures": [
										{
											"id": 526,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 527,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/core",
															"packagePath": "src/types/videoRoomDevice.ts",
															"qualifiedName": "DeviceDisconnectedEventParams"
														},
														"name": "DeviceDisconnectedEventParams",
														"package": "@signalwire/core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/core",
									"packagePath": "src/types/videoRoomSession.ts",
									"qualifiedName": "RoomAudienceCount"
								},
								"name": "RoomAudienceCount",
								"package": "@signalwire/core"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 528,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 148,
											"character": 4,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L148"
										}
									],
									"signatures": [
										{
											"id": 529,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 530,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/core",
															"packagePath": "src/types/videoRoomSession.ts",
															"qualifiedName": "VideoRoomAudienceCountEventParams"
														},
														"name": "VideoRoomAudienceCountEventParams",
														"package": "@signalwire/core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 240,
								"name": "RTCTrackEventName",
								"package": "@signalwire/core"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 531,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 150,
											"character": 28,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L150"
										}
									],
									"signatures": [
										{
											"id": 532,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 533,
													"name": "event",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "RTCTrackEvent"
														},
														"name": "RTCTrackEvent",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/core",
									"packagePath": "src/types/videoRecording.ts",
									"qualifiedName": "VideoRecordingEventNames"
								},
								"name": "VideoRecordingEventNames",
								"package": "@signalwire/core"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 534,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 151,
											"character": 35,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L151"
										}
									],
									"signatures": [
										{
											"id": 535,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 536,
													"name": "recording",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/core",
															"packagePath": "src/rooms/RoomSessionRecording.ts",
															"qualifiedName": "RoomSessionRecording"
														},
														"name": "RoomSessionRecording",
														"package": "@signalwire/core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/core",
									"packagePath": "src/types/videoPlayback.ts",
									"qualifiedName": "VideoPlaybackEventNames"
								},
								"name": "VideoPlaybackEventNames",
								"package": "@signalwire/core"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 537,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 152,
											"character": 34,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L152"
										}
									],
									"signatures": [
										{
											"id": 538,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 539,
													"name": "recording",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/core",
															"packagePath": "src/rooms/RoomSessionPlayback.ts",
															"qualifiedName": "RoomSessionPlayback"
														},
														"name": "RoomSessionPlayback",
														"package": "@signalwire/core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 209,
								"name": "BaseConnectionState",
								"package": "@signalwire/core"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 540,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 153,
											"character": 30,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L153"
										}
									],
									"signatures": [
										{
											"id": 541,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 542,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/client",
															"packagePath": "src/video/RoomSession.ts",
															"qualifiedName": "RoomSession"
														},
														"name": "RoomSession",
														"package": "@signalwire/client"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/core",
									"packagePath": "src/types/videoStream.ts",
									"qualifiedName": "VideoStreamEventNames"
								},
								"name": "VideoStreamEventNames",
								"package": "@signalwire/core"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 543,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/utils/interfaces/video.ts",
											"line": 154,
											"character": 32,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L154"
										}
									],
									"signatures": [
										{
											"id": 544,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 545,
													"name": "stream",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@signalwire/core",
															"packagePath": "src/rooms/RoomSessionStream.ts",
															"qualifiedName": "RoomSessionStream"
														},
														"name": "RoomSessionStream",
														"package": "@signalwire/core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 240,
			"name": "RTCTrackEventName",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/types/video.ts",
					"line": 44,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/video.ts#L44"
				}
			],
			"type": {
				"type": "literal",
				"value": "track"
			}
		},
		{
			"id": 631,
			"name": "SendConversationMessageResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"children": [
				{
					"id": 635,
					"name": "from_fabric_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 34,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L34"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 633,
					"name": "group_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 32,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 634,
					"name": "text",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/conversation.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						635,
						633,
						634
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 31,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L31"
				}
			]
		},
		{
			"id": 636,
			"name": "SendConversationMessageResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/conversation.ts",
					"line": 37,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/conversation.ts#L37"
				}
			],
			"type": {
				"type": "reference",
				"target": 631,
				"name": "SendConversationMessageResponse",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 259,
			"name": "SessionEvents",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/utils/interfaces.ts",
					"line": 257,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L257"
				}
			],
			"type": {
				"type": "templateLiteral",
				"head": "session.",
				"tail": [
					[
						{
							"type": "reference",
							"target": 258,
							"name": "SessionStatus",
							"package": "@signalwire/core"
						},
						""
					]
				]
			}
		},
		{
			"id": 258,
			"name": "SessionStatus",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/utils/interfaces.ts",
					"line": 247,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/utils/interfaces.ts#L247"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "unknown"
					},
					{
						"type": "literal",
						"value": "idle"
					},
					{
						"type": "literal",
						"value": "reconnecting"
					},
					{
						"type": "literal",
						"value": "connected"
					},
					{
						"type": "literal",
						"value": "disconnecting"
					},
					{
						"type": "literal",
						"value": "disconnected"
					},
					{
						"type": "literal",
						"value": "auth_error"
					},
					{
						"type": "literal",
						"value": "expiring"
					}
				]
			}
		},
		{
			"id": 325,
			"name": "SetAudioFlagsParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/types/fabricRoomSession.ts",
					"line": 58,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L58"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/common.ts",
							"qualifiedName": "MemberCommandParams"
						},
						"name": "MemberCommandParams",
						"package": "@signalwire/core"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "@signalwire/core",
							"packagePath": "src/types/utils.ts",
							"qualifiedName": "AtLeastOne"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 326,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 328,
											"name": "autoGain",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/types/fabricRoomSession.ts",
													"line": 61,
													"character": 4,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L61"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 327,
											"name": "echoCancellation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/types/fabricRoomSession.ts",
													"line": 60,
													"character": 4,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L60"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 329,
											"name": "noiseSuppression",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/core/src/types/fabricRoomSession.ts",
													"line": 62,
													"character": 4,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L62"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												328,
												327,
												329
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/core/src/types/fabricRoomSession.ts",
											"line": 59,
											"character": 13,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/fabricRoomSession.ts#L59"
										}
									]
								}
							}
						],
						"name": "AtLeastOne",
						"package": "@signalwire/core"
					}
				]
			}
		},
		{
			"id": 801,
			"name": "SignalWireClient",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/index.ts",
					"line": 39,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/index.ts#L39"
				}
			],
			"type": {
				"type": "reference",
				"target": 802,
				"name": "SignalWireContract",
				"package": "@signalwire/client"
			}
		},
		{
			"id": 548,
			"name": "StartScreenShareOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"children": [
				{
					"id": 551,
					"name": "audio",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Audio constraints to use when joining the room. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 169,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L169"
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": "audio"
						},
						"objectType": {
							"type": "reference",
							"target": {
								"packageName": "typescript",
								"packagePath": "lib/lib.dom.d.ts",
								"qualifiedName": "MediaStreamConstraints"
							},
							"name": "MediaStreamConstraints",
							"package": "typescript"
						}
					}
				},
				{
					"id": 550,
					"name": "autoJoin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the screen share object should automatically join the room"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 167,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L167"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 553,
					"name": "layout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 172,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L172"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 554,
					"name": "positions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 173,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L173"
						}
					],
					"type": {
						"type": "reference",
						"target": 270,
						"name": "VideoPositions",
						"package": "@signalwire/core"
					}
				},
				{
					"id": 552,
					"name": "video",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Video constraints to use when joining the room. Default: "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/utils/interfaces/video.ts",
							"line": 171,
							"character": 2,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L171"
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": "video"
						},
						"objectType": {
							"type": "reference",
							"target": {
								"packageName": "typescript",
								"packagePath": "lib/lib.dom.d.ts",
								"qualifiedName": "MediaStreamConstraints"
							},
							"name": "MediaStreamConstraints",
							"package": "typescript"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						551,
						550,
						553,
						554,
						552
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client/src/utils/interfaces/video.ts",
					"line": 165,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/utils/interfaces/video.ts#L165"
				}
			]
		},
		{
			"id": 269,
			"name": "VideoPosition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Each video layout has a number of positions which members can be assigned to.\nThis type enumerates all the available position names. Note that not all\nthese position names may be available within a given layout.\n\n - "
					},
					{
						"kind": "code",
						"text": "`auto`"
					},
					{
						"kind": "text",
						"text": ": the position of the member in the layout is determined automatically.\n - "
					},
					{
						"kind": "code",
						"text": "`reserved-n`"
					},
					{
						"kind": "text",
						"text": ": the _n_-th reserved position in the layout (e.g. "
					},
					{
						"kind": "code",
						"text": "`reserved-3`"
					},
					{
						"kind": "text",
						"text": ").\n - "
					},
					{
						"kind": "code",
						"text": "`standard-n`"
					},
					{
						"kind": "text",
						"text": ": the _n_-th standard position in the layout (e.g. "
					},
					{
						"kind": "code",
						"text": "`standard-3`"
					},
					{
						"kind": "text",
						"text": ").\n - "
					},
					{
						"kind": "code",
						"text": "`off-canvas`"
					},
					{
						"kind": "text",
						"text": ": the member is hidden outside the layout."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/core/src/types/video.ts",
					"line": 56,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/video.ts#L56"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "auto"
					},
					{
						"type": "templateLiteral",
						"head": "reserved-",
						"tail": [
							[
								{
									"type": "intrinsic",
									"name": "number"
								},
								""
							]
						]
					},
					{
						"type": "templateLiteral",
						"head": "standard-",
						"tail": [
							[
								{
									"type": "intrinsic",
									"name": "number"
								},
								""
							]
						]
					},
					{
						"type": "literal",
						"value": "off-canvas"
					},
					{
						"type": "literal",
						"value": "playback"
					},
					{
						"type": "literal",
						"value": "full-screen"
					}
				]
			}
		},
		{
			"id": 270,
			"name": "VideoPositions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object whose keys represent member IDs, and values are chosen from\n"
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "VideoPosition",
						"target": 269
					},
					{
						"kind": "text",
						"text": ". Instead of a member ID, in some contexts you can use\nthe special keyword "
					},
					{
						"kind": "code",
						"text": "`self`"
					},
					{
						"kind": "text",
						"text": " if you don't know yet the ID of the member which\nis going to be created.\n\nFor example:\n\n"
					},
					{
						"kind": "code",
						"text": "```js\n{\n  \"1bf4d4fb-a3e4-4d46-80a8-3ebfdceb2a60\": \"reserved-1\",\n  \"e0c5be44-d6c7-438f-8cda-f859a1a0b1e7\": \"auto\"\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\nOr:\n\n"
					},
					{
						"kind": "code",
						"text": "```js\n{\n  \"self\": \"reserved-1\"\n}\n```"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/core/src/types/video.ts",
					"line": 87,
					"character": 12,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/core/src/types/video.ts#L87"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"packageName": "typescript",
					"packagePath": "lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 269,
						"name": "VideoPosition",
						"package": "@signalwire/core"
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 143,
			"name": "DEFAULT_CONFIG",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Default configuration values"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 347,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L347"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 144,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 145,
							"name": "INSTANCE_ACCESS_UPDATE_INTERVAL",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 348,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L348"
								}
							],
							"type": {
								"type": "literal",
								"value": 5000
							},
							"defaultValue": "5000"
						},
						{
							"id": 146,
							"name": "MAX_INSTANCES_PER_PROFILE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 349,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L349"
								}
							],
							"type": {
								"type": "literal",
								"value": 1
							},
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								145,
								146
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 347,
							"character": 30,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L347"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 126,
			"name": "STORAGE_KEYS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Storage keys used by the ClientFactory system"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
					"line": 335,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L335"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 127,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 142,
							"name": "CONFIG",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 341,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L341"
								}
							],
							"type": {
								"type": "literal",
								"value": "swcf:config"
							},
							"defaultValue": "'swcf:config'"
						},
						{
							"id": 133,
							"name": "CREDENTIALS",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 338,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L338"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 134,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
											"line": 338,
											"character": 15,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L338"
										}
									],
									"signatures": [
										{
											"id": 135,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
													"line": 338,
													"character": 15,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L338"
												}
											],
											"parameters": [
												{
													"id": 136,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 141,
							"name": "DEVICE_REGISTRATION",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 340,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L340"
								}
							],
							"type": {
								"type": "literal",
								"value": "swcf:device:registration"
							},
							"defaultValue": "'swcf:device:registration'"
						},
						{
							"id": 137,
							"name": "INSTANCE_STATE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 339,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L339"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 138,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
											"line": 339,
											"character": 18,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L339"
										}
									],
									"signatures": [
										{
											"id": 139,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
													"line": 339,
													"character": 18,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L339"
												}
											],
											"parameters": [
												{
													"id": 140,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 129,
							"name": "PROFILE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 337,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L337"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 130,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
											"line": 337,
											"character": 11,
											"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L337"
										}
									],
									"signatures": [
										{
											"id": 131,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
													"line": 337,
													"character": 11,
													"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L337"
												}
											],
											"parameters": [
												{
													"id": 132,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 128,
							"name": "PROFILES",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
									"line": 336,
									"character": 2,
									"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L336"
								}
							],
							"type": {
								"type": "literal",
								"value": "swcf:profiles"
							},
							"defaultValue": "'swcf:profiles'"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								142,
								133,
								141,
								137,
								129,
								128
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/client/src/unified/interfaces/clientFactory.ts",
							"line": 335,
							"character": 28,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/interfaces/clientFactory.ts#L335"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1264,
			"name": "buildVideoElement",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/buildVideoElement.ts",
					"line": 34,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/buildVideoElement.ts#L34"
				}
			],
			"signatures": [
				{
					"id": 1265,
					"name": "buildVideoElement",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Build Video Element"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/buildVideoElement.ts",
							"line": 34,
							"character": 33,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/buildVideoElement.ts#L34"
						}
					],
					"parameters": [
						{
							"id": 1266,
							"name": "params",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@signalwire/client",
									"packagePath": "src/buildVideoElement.ts",
									"qualifiedName": "BuildVideoElementParams"
								},
								"name": "BuildVideoElementParams",
								"package": "@signalwire/client"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@signalwire/client",
									"packagePath": "src/buildVideoElement.ts",
									"qualifiedName": "BuildVideoElementReturnType"
								},
								"name": "BuildVideoElementReturnType",
								"package": "@signalwire/client"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 1834,
			"name": "createSignalWireClient",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/SignalWire.ts",
					"line": 47,
					"character": 22,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/SignalWire.ts#L47"
				}
			],
			"signatures": [
				{
					"id": 1835,
					"name": "createSignalWireClient",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a new SignalWire client instance (multi-instance support)\nThis function is used internally by the ClientFactory for creating multiple instances"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/SignalWire.ts",
							"line": 47,
							"character": 22,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/SignalWire.ts#L47"
						}
					],
					"parameters": [
						{
							"id": 1836,
							"name": "params",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 875,
								"name": "SignalWireClientParams",
								"package": "@signalwire/client"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 802,
								"name": "SignalWireContract",
								"package": "@signalwire/client"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 1728,
			"name": "getClientFactory",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/ClientFactory.ts",
					"line": 553,
					"character": 16,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L553"
				}
			],
			"signatures": [
				{
					"id": 1729,
					"name": "getClientFactory",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the singleton ClientFactory instance"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "ClientFactory instance"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client/src/unified/ClientFactory.ts",
							"line": 553,
							"character": 16,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/ClientFactory.ts#L553"
						}
					],
					"type": {
						"type": "reference",
						"target": 1665,
						"name": "ClientFactory",
						"package": "@signalwire/client"
					}
				}
			]
		},
		{
			"id": 1502,
			"name": "isCallSession",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/unified/CallSession.ts",
					"line": 438,
					"character": 13,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/CallSession.ts#L438"
				}
			],
			"signatures": [
				{
					"id": 1503,
					"name": "isCallSession",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client/src/unified/CallSession.ts",
							"line": 438,
							"character": 29,
							"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/unified/CallSession.ts#L438"
						}
					],
					"parameters": [
						{
							"id": 1504,
							"name": "room",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "room",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": 1332,
							"name": "CallSession",
							"package": "@signalwire/client"
						}
					}
				}
			]
		},
		{
			"id": 1020,
			"name": "SignalWire",
			"variant": "reference",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client/src/index.ts",
					"line": 135,
					"character": 9,
					"url": "https://github.com/signalwire/signalwire-js/blob/c62a211b9b2868d7aee525f433a1930c434735ec/packages/client/src/index.ts#L135"
				}
			],
			"target": 943
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				942,
				1263
			]
		},
		{
			"title": "Enumerations",
			"children": [
				12
			]
		},
		{
			"title": "Classes",
			"children": [
				1665,
				147,
				186,
				179,
				173,
				1810,
				161,
				1505,
				1267,
				167,
				1730,
				155,
				1591,
				1311
			]
		},
		{
			"title": "Interfaces",
			"children": [
				37,
				193,
				602,
				300,
				331,
				275,
				294,
				1332,
				283,
				271,
				587,
				51,
				425,
				705,
				702,
				656,
				612,
				670,
				318,
				1837,
				639,
				652,
				311,
				767,
				49,
				214,
				579,
				581,
				573,
				557,
				42,
				46,
				686,
				698,
				690,
				637,
				668,
				902,
				765,
				756,
				741,
				722,
				731,
				107,
				660,
				663,
				30,
				590,
				335,
				343,
				348,
				339,
				483,
				760,
				920,
				929,
				15,
				74,
				784,
				708,
				713,
				39,
				1142,
				1021,
				625,
				875,
				802,
				5,
				359,
				418,
				711,
				241,
				260
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				572,
				424,
				209,
				486,
				330,
				555,
				210,
				682,
				659,
				1,
				324,
				323,
				317,
				648,
				585,
				586,
				583,
				584,
				41,
				689,
				701,
				646,
				647,
				681,
				919,
				762,
				752,
				721,
				358,
				266,
				667,
				357,
				356,
				1310,
				720,
				707,
				556,
				547,
				546,
				489,
				240,
				631,
				636,
				259,
				258,
				325,
				801,
				548,
				269,
				270
			]
		},
		{
			"title": "Variables",
			"children": [
				143,
				126
			]
		},
		{
			"title": "Functions",
			"children": [
				1264,
				1834,
				1728,
				1502
			]
		},
		{
			"title": "References",
			"children": [
				1020
			]
		}
	],
	"packageName": "@signalwire/client",
	"readme": [
		{
			"kind": "text",
			"text": "# @signalwire/js\n\n# RELAY Browser SDK\n\n[![The build status of the package @signalwire/js.](https://ci.signalwire.com/api/badges/signalwire/signalwire-js/status.svg)](https://ci.signalwire.com/signalwire/signalwire-js) ![The NPM shield for the package @signalwire/js.](https://img.shields.io/npm/v/@signalwire/js.svg?color=brightgreen)\n\nThe RELAY Browser SDK transforms your standard browser into a realtime media engine, enabling developers to directly make audio and video calls to phone numbers, SIP endpoints, and other browsers. Using the JavaScript SDK you can add immersive, scalable communication - from video conferences and softphones to click-to-call and mobile gaming - all available right in your own web pages and applications.\n\nSignalWire's simple and powerful authentication system, using JWT, allows you to set granular permissions, enabling some of your users to only join conference calls, while others could list on-going calls and jump in to assist from a support dashboard... the possibilities are endless.\n\n## Getting Started\n\nRead the implementation documentation, guides and API Reference at the official [SignalWire JavaScript SDK Documentation](https://developer.signalwire.com/sdks/reference/browser-sdk) site.\n\n---\n\n## Contributing\n\nSignalWire JavaScript SDK is open source and maintained by the SignalWire team, but we are very grateful for [everyone](https://github.com/signalwire/signalwire-js/contributors) who has contributed and assisted so far.\n\nIf you'd like to contribute, feel free to visit our [Slack channel](https://signalwire.community/) and read our developer section to get the code running in your local environment.\n\n## Developers\n\nThe JavaScript SDK is a package inside the [signalwire-js](https://github.com/signalwire/signalwire-js) _monorepo_. To setup the dev environment follow these steps:\n\n1. [Download the installer](https://nodejs.org/) for the LTS version of Node.js. This is the best way to also [install npm](https://blog.npmjs.org/post/85484771375/how-to-install-npm#_=_).\n2. Fork the [signalwire-js](https://github.com/signalwire/signalwire-js) repository and clone it.\n3. Create a new branch from "
		},
		{
			"kind": "code",
			"text": "`main`"
		},
		{
			"kind": "text",
			"text": " for your change.\n4. Run "
		},
		{
			"kind": "code",
			"text": "`npm install`"
		},
		{
			"kind": "text",
			"text": " to install global dependencies.\n5. Navigate into the JavaScript directory with "
		},
		{
			"kind": "code",
			"text": "`cd packages/js`"
		},
		{
			"kind": "text",
			"text": ".\n6. Make changes!\n\n## Versioning\n\nSignalWire JavaScript SDK follows Semantic Versioning 2.0 as defined at [http://semver.org](http://semver.org).\n\n## License\n\n"
		},
		{
			"kind": "code",
			"text": "`@signalwire/js`"
		},
		{
			"kind": "text",
			"text": " is copyright © 2018-2023 [SignalWire](http://signalwire.com). It is free software, and may be redistributed under the terms specified in the [MIT-LICENSE](https://github.com/signalwire/signalwire-js/blob/master/LICENSE) file."
		}
	],
	"symbolIdMap": {
		"0": {
			"packageName": "@signalwire/client",
			"packagePath": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationChatSubscribeCallback"
		},
		"2": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "__type"
		},
		"3": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "__type"
		},
		"4": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "event"
		},
		"5": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "SignalWireCredentials"
		},
		"6": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "SignalWireCredentials.satToken"
		},
		"7": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "SignalWireCredentials.satRefreshPayload"
		},
		"8": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "SignalWireCredentials.satRefreshURL"
		},
		"9": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "SignalWireCredentials.satRefreshResultMapper"
		},
		"10": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "SignalWireCredentials.tokenExpiry"
		},
		"11": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "SignalWireCredentials.host"
		},
		"12": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileType"
		},
		"13": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileType.STATIC"
		},
		"14": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileType.DYNAMIC"
		},
		"15": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "Profile"
		},
		"16": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "Profile.id"
		},
		"17": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "Profile.type"
		},
		"18": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "Profile.credentialsId"
		},
		"19": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "Profile.credentials"
		},
		"20": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "Profile.addressId"
		},
		"21": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "Profile.addressDetails"
		},
		"22": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__type"
		},
		"23": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__type.type"
		},
		"24": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__type.name"
		},
		"25": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__type.displayName"
		},
		"26": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__type.channels"
		},
		"27": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "Profile.createdAt"
		},
		"28": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "Profile.updatedAt"
		},
		"29": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "Profile.lastUsed"
		},
		"30": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ManagedInstance"
		},
		"31": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ManagedInstance.id"
		},
		"32": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ManagedInstance.profileId"
		},
		"33": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ManagedInstance.client"
		},
		"34": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ManagedInstance.createdAt"
		},
		"35": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ManagedInstance.lastAccessedAt"
		},
		"36": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ManagedInstance.usageCount"
		},
		"37": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "AddProfilesParams"
		},
		"38": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "AddProfilesParams.profiles"
		},
		"39": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "RemoveProfilesParams"
		},
		"40": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "RemoveProfilesParams.profileIds"
		},
		"41": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "GetClientParamsOptions"
		},
		"42": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "GetClientParams"
		},
		"43": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "GetClientParams.profileId"
		},
		"44": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "GetClientParams.addressId"
		},
		"45": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "GetClientParams.options"
		},
		"46": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "GetClientResult"
		},
		"47": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "GetClientResult.instance"
		},
		"48": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "GetClientResult.isNew"
		},
		"49": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "DisposeClientParams"
		},
		"50": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "DisposeClientParams.instanceId"
		},
		"51": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract"
		},
		"52": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.init"
		},
		"53": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.init"
		},
		"54": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "storage"
		},
		"55": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.addProfiles"
		},
		"56": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.addProfiles"
		},
		"57": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "params"
		},
		"58": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.removeProfiles"
		},
		"59": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.removeProfiles"
		},
		"60": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "params"
		},
		"61": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.listProfiles"
		},
		"62": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.listProfiles"
		},
		"63": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.getProfile"
		},
		"64": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.getProfile"
		},
		"65": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "profileId"
		},
		"66": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.getClient"
		},
		"67": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.getClient"
		},
		"68": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "params"
		},
		"69": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.disposeClient"
		},
		"70": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.disposeClient"
		},
		"71": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "params"
		},
		"72": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.listActiveClients"
		},
		"73": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract.listActiveClients"
		},
		"74": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract"
		},
		"75": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.init"
		},
		"76": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.init"
		},
		"77": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "storage"
		},
		"78": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.addProfile"
		},
		"79": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.addProfile"
		},
		"80": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "profile"
		},
		"81": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.updateProfile"
		},
		"82": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.updateProfile"
		},
		"83": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "profileId"
		},
		"84": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "updates"
		},
		"85": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.removeProfile"
		},
		"86": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.removeProfile"
		},
		"87": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "profileId"
		},
		"88": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.getProfile"
		},
		"89": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.getProfile"
		},
		"90": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "profileId"
		},
		"91": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.listProfiles"
		},
		"92": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.listProfiles"
		},
		"93": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "type"
		},
		"94": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.hasProfile"
		},
		"95": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.hasProfile"
		},
		"96": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "profileId"
		},
		"97": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.findProfileForAddress"
		},
		"98": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.findProfileForAddress"
		},
		"99": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "addressId"
		},
		"100": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.getProfilesByCredentialId"
		},
		"101": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.getProfilesByCredentialId"
		},
		"102": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "credentialId"
		},
		"103": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.createDynamicProfile"
		},
		"104": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract.createDynamicProfile"
		},
		"105": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "parentProfile"
		},
		"106": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "addressId"
		},
		"107": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract"
		},
		"108": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract.createInstance"
		},
		"109": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract.createInstance"
		},
		"110": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "profile"
		},
		"111": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "options"
		},
		"112": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract.disposeInstance"
		},
		"113": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract.disposeInstance"
		},
		"114": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "instanceId"
		},
		"115": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract.getInstance"
		},
		"116": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract.getInstance"
		},
		"117": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "instanceId"
		},
		"118": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract.getInstanceByProfile"
		},
		"119": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract.getInstanceByProfile"
		},
		"120": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "profileId"
		},
		"121": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract.listInstances"
		},
		"122": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract.listInstances"
		},
		"123": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract.updateInstanceAccess"
		},
		"124": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract.updateInstanceAccess"
		},
		"125": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "instanceId"
		},
		"126": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "STORAGE_KEYS"
		},
		"127": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__object"
		},
		"128": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__object.PROFILES"
		},
		"129": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__object.PROFILE"
		},
		"130": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__function"
		},
		"131": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__function"
		},
		"132": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "id"
		},
		"133": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__object.CREDENTIALS"
		},
		"134": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__function"
		},
		"135": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__function"
		},
		"136": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "id"
		},
		"137": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__object.INSTANCE_STATE"
		},
		"138": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__function"
		},
		"139": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__function"
		},
		"140": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "id"
		},
		"141": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__object.DEVICE_REGISTRATION"
		},
		"142": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__object.CONFIG"
		},
		"143": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "DEFAULT_CONFIG"
		},
		"144": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__object"
		},
		"145": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__object.INSTANCE_ACCESS_UPDATE_INTERVAL"
		},
		"146": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "__object.MAX_INSTANCES_PER_PROFILE"
		},
		"147": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError"
		},
		"148": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.__constructor"
		},
		"149": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError"
		},
		"150": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "message"
		},
		"151": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "code"
		},
		"152": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "context"
		},
		"153": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.code"
		},
		"154": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.context"
		},
		"155": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileNotFoundError"
		},
		"156": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileNotFoundError.__constructor"
		},
		"157": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileNotFoundError"
		},
		"158": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "profileId"
		},
		"159": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.code"
		},
		"160": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.context"
		},
		"161": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceNotFoundError"
		},
		"162": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceNotFoundError.__constructor"
		},
		"163": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceNotFoundError"
		},
		"164": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "instanceId"
		},
		"165": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.code"
		},
		"166": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.context"
		},
		"167": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileExistsError"
		},
		"168": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileExistsError.__constructor"
		},
		"169": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileExistsError"
		},
		"170": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "profileId"
		},
		"171": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.code"
		},
		"172": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.context"
		},
		"173": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceInUseError"
		},
		"174": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceInUseError.__constructor"
		},
		"175": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceInUseError"
		},
		"176": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "instanceId"
		},
		"177": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.code"
		},
		"178": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.context"
		},
		"179": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "CredentialRefreshError"
		},
		"180": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "CredentialRefreshError.__constructor"
		},
		"181": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "CredentialRefreshError"
		},
		"182": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "profileId"
		},
		"183": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "originalError"
		},
		"184": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.code"
		},
		"185": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.context"
		},
		"186": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "CredentialExpiredError"
		},
		"187": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "CredentialExpiredError.__constructor"
		},
		"188": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "CredentialExpiredError"
		},
		"189": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "profileId"
		},
		"190": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "expiredAt"
		},
		"191": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.code"
		},
		"192": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError.context"
		},
		"193": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "BaseComponentOptions"
		},
		"194": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "BaseComponentOptions.store"
		},
		"195": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "__object"
		},
		"196": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "__object.runSaga"
		},
		"197": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "__function"
		},
		"198": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "__function"
		},
		"199": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "T"
		},
		"200": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "saga"
		},
		"201": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "args"
		},
		"202": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "__type"
		},
		"203": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "__type.instance"
		},
		"204": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "__type.runSaga"
		},
		"205": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "__object.channels"
		},
		"206": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "__object.instanceMap"
		},
		"207": {
			"packageName": "@signalwire/core",
			"packagePath": "src/redux/index.ts",
			"qualifiedName": "__object.sessionEmitter"
		},
		"208": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "BaseComponentOptions.customSagas"
		},
		"209": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "BaseConnectionState"
		},
		"210": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ClientEvents"
		},
		"211": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "__type"
		},
		"212": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "__type"
		},
		"213": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "params"
		},
		"214": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract"
		},
		"215": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.on"
		},
		"216": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.on"
		},
		"217": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"218": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"219": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "fn"
		},
		"220": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.once"
		},
		"221": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.once"
		},
		"222": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"223": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"224": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "fn"
		},
		"225": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.off"
		},
		"226": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.off"
		},
		"227": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"228": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"229": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "fn"
		},
		"230": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.removeAllListeners"
		},
		"231": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.removeAllListeners"
		},
		"232": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"233": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"234": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.emit"
		},
		"235": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.emit"
		},
		"236": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "E"
		},
		"237": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"238": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "args"
		},
		"239": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.EventTypes"
		},
		"240": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/video.ts",
			"qualifiedName": "RTCTrackEventName"
		},
		"241": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "UserOptions"
		},
		"242": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "UserOptions.devTools"
		},
		"243": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "UserOptions.debug"
		},
		"244": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "__type"
		},
		"245": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "__type.logWsTraffic"
		},
		"246": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "UserOptions.logger"
		},
		"247": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.host"
		},
		"248": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.project"
		},
		"249": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.token"
		},
		"250": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.profileId"
		},
		"251": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.contexts"
		},
		"252": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.topics"
		},
		"253": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.logLevel"
		},
		"254": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.onRefreshToken"
		},
		"255": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.onRefreshToken"
		},
		"256": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.sessionChannel"
		},
		"257": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.instanceMap"
		},
		"258": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionStatus"
		},
		"259": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionEvents"
		},
		"260": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/videoLayout.ts",
			"qualifiedName": "VideoLayout"
		},
		"261": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/videoLayout.ts",
			"qualifiedName": "VideoLayout.id"
		},
		"262": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/videoLayout.ts",
			"qualifiedName": "VideoLayout.name"
		},
		"263": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/videoLayout.ts",
			"qualifiedName": "VideoLayout.roomSessionId"
		},
		"264": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/videoLayout.ts",
			"qualifiedName": "VideoLayout.roomId"
		},
		"265": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/videoLayout.ts",
			"qualifiedName": "VideoLayout.layers"
		},
		"266": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/videoLayout.ts",
			"qualifiedName": "InternalVideoLayout"
		},
		"267": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/videoLayout.ts",
			"qualifiedName": "__type"
		},
		"268": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/videoLayout.ts",
			"qualifiedName": "__type.layers"
		},
		"269": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/video.ts",
			"qualifiedName": "VideoPosition"
		},
		"270": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/video.ts",
			"qualifiedName": "VideoPositions"
		},
		"271": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallUpdatedEventParams"
		},
		"272": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallUpdatedEventParams.room_session"
		},
		"273": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallUpdatedEventParams.room_id"
		},
		"274": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallUpdatedEventParams.room_session_id"
		},
		"275": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallLeftEventParams"
		},
		"276": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallLeftEventParams.room_session"
		},
		"277": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallLeftEventParams.room_id"
		},
		"278": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallLeftEventParams.room_session_id"
		},
		"279": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallLeftEventParams.call_id"
		},
		"280": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallLeftEventParams.member_id"
		},
		"281": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallLeftEventParams.origin_call_id"
		},
		"282": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallLeftEventParams.reason"
		},
		"283": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallStateEventParams"
		},
		"284": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallStateEventParams.call_id"
		},
		"285": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallStateEventParams.node_id"
		},
		"286": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallStateEventParams.segment_id"
		},
		"287": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallStateEventParams.call_state"
		},
		"288": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallStateEventParams.direction"
		},
		"289": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallStateEventParams.device"
		},
		"290": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallStateEventParams.start_time"
		},
		"291": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallStateEventParams.answer_time"
		},
		"292": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallStateEventParams.end_time"
		},
		"293": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallStateEventParams.room_session_id"
		},
		"294": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallPlayEventParams"
		},
		"295": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallPlayEventParams.control_id"
		},
		"296": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallPlayEventParams.call_id"
		},
		"297": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallPlayEventParams.node_id"
		},
		"298": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallPlayEventParams.state"
		},
		"299": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallPlayEventParams.room_session_id"
		},
		"300": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallConnectEventParams"
		},
		"301": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallConnectEventParams.connect_state"
		},
		"302": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallConnectEventParams.call_id"
		},
		"303": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallConnectEventParams.node_id"
		},
		"304": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallConnectEventParams.segment_id"
		},
		"305": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallConnectEventParams.room_session_id"
		},
		"306": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallConnectEventParams.peer"
		},
		"307": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "__type"
		},
		"308": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "__type.call_id"
		},
		"309": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "__type.node_id"
		},
		"310": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "__type.device"
		},
		"311": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallRoomEventParams"
		},
		"312": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallRoomEventParams.joined_status"
		},
		"313": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallRoomEventParams.call_id"
		},
		"314": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallRoomEventParams.node_id"
		},
		"315": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallRoomEventParams.segment_id"
		},
		"316": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallRoomEventParams.room_session_id"
		},
		"317": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventName"
		},
		"318": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEvent"
		},
		"319": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEvent.event_type"
		},
		"320": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEvent.params"
		},
		"321": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "SwEvent.event_channel"
		},
		"322": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "SwEvent.timestamp"
		},
		"323": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationEventParams"
		},
		"324": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationEvent"
		},
		"325": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "SetAudioFlagsParams"
		},
		"326": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "__type"
		},
		"327": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "__type.echoCancellation"
		},
		"328": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "__type.autoGain"
		},
		"329": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "__type.noiseSuppression"
		},
		"330": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "CallSessionEventParams"
		},
		"331": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricLayout.ts",
			"qualifiedName": "CallLayoutChangedEventParams"
		},
		"332": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricLayout.ts",
			"qualifiedName": "CallLayoutChangedEventParams.room_id"
		},
		"333": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricLayout.ts",
			"qualifiedName": "CallLayoutChangedEventParams.room_session_id"
		},
		"334": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricLayout.ts",
			"qualifiedName": "CallLayoutChangedEventParams.layout"
		},
		"335": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberJoinedEventParams"
		},
		"336": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberJoinedEventParams.member"
		},
		"337": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberJoinedEventParams.room_id"
		},
		"338": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberJoinedEventParams.room_session_id"
		},
		"339": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberUpdatedEventParams"
		},
		"340": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberUpdatedEventParams.member"
		},
		"341": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberUpdatedEventParams.room_id"
		},
		"342": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberUpdatedEventParams.room_session_id"
		},
		"343": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberLeftEventParams"
		},
		"344": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberLeftEventParams.member"
		},
		"345": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberLeftEventParams.room_id"
		},
		"346": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberLeftEventParams.room_session_id"
		},
		"347": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberLeftEventParams.reason"
		},
		"348": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberTalkingEventParams"
		},
		"349": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberTalkingEventParams.room_id"
		},
		"350": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberTalkingEventParams.room_session_id"
		},
		"351": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberTalkingEventParams.member"
		},
		"352": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "__type"
		},
		"353": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "__type.member_id"
		},
		"354": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "__type.talking"
		},
		"355": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "__type.node_id"
		},
		"356": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberEventParams"
		},
		"357": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "MemberEntity"
		},
		"358": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricMember.ts",
			"qualifiedName": "InternalMemberEntity"
		},
		"359": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract"
		},
		"360": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.get"
		},
		"361": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.get"
		},
		"362": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "key"
		},
		"363": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.set"
		},
		"364": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.set"
		},
		"365": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "key"
		},
		"366": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "value"
		},
		"367": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.delete"
		},
		"368": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.delete"
		},
		"369": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "key"
		},
		"370": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.has"
		},
		"371": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.has"
		},
		"372": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "key"
		},
		"373": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.getMany"
		},
		"374": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.getMany"
		},
		"375": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "keys"
		},
		"376": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.setMany"
		},
		"377": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.setMany"
		},
		"378": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "entries"
		},
		"379": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.deleteMany"
		},
		"380": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.deleteMany"
		},
		"381": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "keys"
		},
		"382": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.list"
		},
		"383": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.list"
		},
		"384": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "prefix"
		},
		"385": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.clear"
		},
		"386": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.clear"
		},
		"387": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "prefix"
		},
		"388": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.getSession"
		},
		"389": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.getSession"
		},
		"390": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "key"
		},
		"391": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.setSession"
		},
		"392": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.setSession"
		},
		"393": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "key"
		},
		"394": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "value"
		},
		"395": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.deleteSession"
		},
		"396": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.deleteSession"
		},
		"397": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "key"
		},
		"398": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.hasSession"
		},
		"399": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.hasSession"
		},
		"400": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "key"
		},
		"401": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.getManySession"
		},
		"402": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.getManySession"
		},
		"403": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "keys"
		},
		"404": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.setManySession"
		},
		"405": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.setManySession"
		},
		"406": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "entries"
		},
		"407": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.deleteManySession"
		},
		"408": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.deleteManySession"
		},
		"409": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "keys"
		},
		"410": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.listSession"
		},
		"411": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.listSession"
		},
		"412": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "prefix"
		},
		"413": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.clearSession"
		},
		"414": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.clearSession"
		},
		"415": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "prefix"
		},
		"416": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.getStorageInfo"
		},
		"417": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "SignalWireStorageContract.getStorageInfo"
		},
		"418": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "StorageInfo"
		},
		"419": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "StorageInfo.type"
		},
		"420": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "StorageInfo.isAvailable"
		},
		"421": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "StorageInfo.isPersistent"
		},
		"422": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "StorageInfo.quotaUsed"
		},
		"423": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/SignalwireStorageContract.ts",
			"qualifiedName": "StorageInfo.quotaTotal"
		},
		"424": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/BaseConnection.ts",
			"qualifiedName": "BaseConnectionOptions"
		},
		"425": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions"
		},
		"426": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.destinationNumber"
		},
		"427": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.remoteCallerName"
		},
		"428": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.remoteCallerNumber"
		},
		"429": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.callerName"
		},
		"430": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.callerNumber"
		},
		"431": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.remoteSdp"
		},
		"432": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.localStream"
		},
		"433": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.remoteStream"
		},
		"434": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.iceServers"
		},
		"435": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.disableUdpIceServers"
		},
		"436": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.audio"
		},
		"437": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.video"
		},
		"438": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.attach"
		},
		"439": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.useStereo"
		},
		"440": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.micId"
		},
		"441": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.micLabel"
		},
		"442": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.camId"
		},
		"443": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.camLabel"
		},
		"444": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.speakerId"
		},
		"445": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.userVariables"
		},
		"446": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "__type"
		},
		"447": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "__type.__index"
		},
		"449": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.screenShare"
		},
		"450": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.additionalDevice"
		},
		"451": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.recoverCall"
		},
		"452": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.googleMaxBitrate"
		},
		"453": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.googleMinBitrate"
		},
		"454": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.googleStartBitrate"
		},
		"455": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.negotiateAudio"
		},
		"456": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.negotiateVideo"
		},
		"457": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.sfu"
		},
		"458": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.simulcast"
		},
		"459": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.msStreamsNumber"
		},
		"460": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.requestTimeout"
		},
		"461": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.shakenCheck"
		},
		"462": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.shakenResult"
		},
		"463": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.autoApplyMediaParams"
		},
		"464": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.rtcPeerConfig"
		},
		"465": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "__type"
		},
		"466": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "__type.__index"
		},
		"468": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.iceGatheringTimeout"
		},
		"469": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.maxIceGatheringTimeout"
		},
		"470": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.maxConnectionStateTimeout"
		},
		"471": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.watchMediaPackets"
		},
		"472": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.watchMediaPacketsTimeout"
		},
		"473": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.pingSupported"
		},
		"474": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.prevCallId"
		},
		"475": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.nodeId"
		},
		"476": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.fromCallAddressId"
		},
		"477": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.profileId"
		},
		"478": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.layout"
		},
		"479": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.positions"
		},
		"480": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.connectionPoolSize"
		},
		"481": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.enableConnectionPool"
		},
		"482": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "ConnectionOptions.iceCandidatePoolSize"
		},
		"483": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "MicrophoneAnalyzer"
		},
		"484": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "MicrophoneAnalyzer.destroy"
		},
		"485": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "MicrophoneAnalyzer.destroy"
		},
		"486": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "CallJoinedEventParams"
		},
		"487": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "__type"
		},
		"488": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "__type.capabilities"
		},
		"489": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomSessionObjectEventsHandlerMap"
		},
		"490": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"491": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"492": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"493": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"494": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"495": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"496": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"497": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"498": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"499": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"500": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"501": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"502": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"503": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"504": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"505": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"506": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"507": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"508": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"509": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"510": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"511": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"512": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"513": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"514": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"515": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"516": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"517": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"518": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"519": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"520": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"521": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"522": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"523": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"524": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"525": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"526": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"527": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"528": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"529": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"530": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"531": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"532": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"533": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "event"
		},
		"534": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"535": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"536": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "recording"
		},
		"537": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"538": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"539": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "recording"
		},
		"540": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"541": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"542": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"543": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"544": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"545": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "stream"
		},
		"546": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomSessionObjectEvents"
		},
		"547": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomEventNames"
		},
		"548": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "StartScreenShareOptions"
		},
		"550": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type.autoJoin"
		},
		"551": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type.audio"
		},
		"552": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type.video"
		},
		"553": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type.layout"
		},
		"554": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type.positions"
		},
		"555": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "CallSessionEvents"
		},
		"556": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "ResourceType"
		},
		"557": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResponse"
		},
		"558": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResponse.id"
		},
		"559": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResponse.display_name"
		},
		"560": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResponse.name"
		},
		"561": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResponse.preview_url"
		},
		"562": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResponse.cover_url"
		},
		"563": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResponse.resource_id"
		},
		"564": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResponse.type"
		},
		"565": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResponse.channels"
		},
		"566": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "__type"
		},
		"567": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "__type.audio"
		},
		"568": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "__type.messaging"
		},
		"569": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "__type.video"
		},
		"570": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResponse.locked"
		},
		"571": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResponse.created_at"
		},
		"572": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "Address"
		},
		"573": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressesParams"
		},
		"574": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressesParams.type"
		},
		"575": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressesParams.displayName"
		},
		"576": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressesParams.pageSize"
		},
		"577": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressesParams.sortBy"
		},
		"578": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressesParams.sortOrder"
		},
		"579": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressByIdParams"
		},
		"580": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressByIdParams.id"
		},
		"581": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressByNameParams"
		},
		"582": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressByNameParams.name"
		},
		"583": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressParams"
		},
		"584": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResult"
		},
		"585": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressesResponse"
		},
		"586": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressesResult"
		},
		"587": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CapabilityOnOffStateContract"
		},
		"588": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CapabilityOnOffStateContract.on"
		},
		"589": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CapabilityOnOffStateContract.off"
		},
		"590": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract"
		},
		"591": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract.muteAudio"
		},
		"592": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract.muteVideo"
		},
		"593": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract.microphoneVolume"
		},
		"594": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract.microphoneSensitivity"
		},
		"595": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract.speakerVolume"
		},
		"596": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract.deaf"
		},
		"597": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract.raisehand"
		},
		"598": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract.position"
		},
		"599": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract.meta"
		},
		"600": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract.remove"
		},
		"601": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract.audioFlags"
		},
		"602": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CallCapabilitiesContract"
		},
		"603": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CallCapabilitiesContract.self"
		},
		"604": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CallCapabilitiesContract.member"
		},
		"605": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CallCapabilitiesContract.end"
		},
		"606": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CallCapabilitiesContract.setLayout"
		},
		"607": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CallCapabilitiesContract.sendDigit"
		},
		"608": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CallCapabilitiesContract.vmutedHide"
		},
		"609": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CallCapabilitiesContract.lock"
		},
		"610": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CallCapabilitiesContract.device"
		},
		"611": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CallCapabilitiesContract.screenshare"
		},
		"612": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationContract"
		},
		"613": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationContract.createdAt"
		},
		"614": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationContract.groupId"
		},
		"615": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationContract.lastMessageAt"
		},
		"616": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationContract.metadata"
		},
		"617": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationContract.name"
		},
		"618": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationContract.fromAddressId"
		},
		"619": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationContract.sendMessage"
		},
		"620": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationContract.sendMessage"
		},
		"621": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "params"
		},
		"622": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationContract.getMessages"
		},
		"623": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationContract.getMessages"
		},
		"624": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "params"
		},
		"625": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "SendConversationMessageParams"
		},
		"626": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "SendConversationMessageParams.groupId"
		},
		"627": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "SendConversationMessageParams.fromAddressId"
		},
		"628": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "SendConversationMessageParams.text"
		},
		"629": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "SendConversationMessageParams.metadata"
		},
		"630": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "SendConversationMessageParams.details"
		},
		"631": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "SendConversationMessageResponse"
		},
		"633": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "__type.group_id"
		},
		"634": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "__type.text"
		},
		"635": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "__type.from_fabric_address_id"
		},
		"636": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "SendConversationMessageResult"
		},
		"637": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationsParams"
		},
		"638": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationsParams.pageSize"
		},
		"639": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationResponse"
		},
		"640": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationResponse.group_id"
		},
		"641": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationResponse.created_at"
		},
		"642": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationResponse.from_fabric_address_id"
		},
		"643": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationResponse.last_message_at"
		},
		"644": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationResponse.metadata"
		},
		"645": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationResponse.name"
		},
		"646": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationsResponse"
		},
		"647": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationsResult"
		},
		"648": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationSubscribeCallback"
		},
		"649": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "__type"
		},
		"650": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "__type"
		},
		"651": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "event"
		},
		"652": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationSubscribeResult"
		},
		"653": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationSubscribeResult.unsubscribe"
		},
		"654": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "__type"
		},
		"655": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "__type"
		},
		"656": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationChatMessagesSubscribeParams"
		},
		"657": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationChatMessagesSubscribeParams.groupId"
		},
		"658": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationChatMessagesSubscribeParams.onMessage"
		},
		"659": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationChatMessagesSubscribeResult"
		},
		"660": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "JoinConversationParams"
		},
		"661": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "JoinConversationParams.addressIds"
		},
		"662": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "JoinConversationParams.fromAddressId"
		},
		"663": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "JoinConversationResponse"
		},
		"664": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "JoinConversationResponse.group_id"
		},
		"665": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "JoinConversationResponse.addressIds"
		},
		"666": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "JoinConversationResponse.from_fabric_address_id"
		},
		"667": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "JoinConversationResult"
		},
		"668": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetMessagesParams"
		},
		"669": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetMessagesParams.pageSize"
		},
		"670": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessage"
		},
		"671": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessage.id"
		},
		"672": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessage.from_fabric_address_id"
		},
		"673": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessage.group_id"
		},
		"674": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessage.ts"
		},
		"675": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessage.metadata"
		},
		"676": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessage.details"
		},
		"677": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessage.type"
		},
		"678": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessage.subtype"
		},
		"679": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessage.kind"
		},
		"680": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessage.text"
		},
		"681": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetMessagesResult"
		},
		"682": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationChatMessage"
		},
		"683": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "__type"
		},
		"684": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "__type.text"
		},
		"685": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "__type.user_name"
		},
		"686": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationChatMessageParams"
		},
		"687": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationChatMessageParams.groupId"
		},
		"688": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationChatMessageParams.pageSize"
		},
		"689": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationChatMessageResult"
		},
		"690": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationMessagesResponse"
		},
		"691": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResponse.data"
		},
		"692": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResponse.links"
		},
		"693": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type"
		},
		"694": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.first"
		},
		"695": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.self"
		},
		"696": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.next"
		},
		"697": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.prev"
		},
		"698": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationMessagesParams"
		},
		"699": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationMessagesParams.groupId"
		},
		"700": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationMessagesParams.pageSize"
		},
		"701": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationMessagesResult"
		},
		"702": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationAPISendMessageParams"
		},
		"703": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationAPISendMessageParams.fromAddressId"
		},
		"704": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationAPISendMessageParams.text"
		},
		"705": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationAPIGetMessagesParams"
		},
		"706": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationAPIGetMessagesParams.pageSize"
		},
		"707": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceType"
		},
		"708": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceParams"
		},
		"709": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceParams.deviceType"
		},
		"710": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceParams.deviceToken"
		},
		"711": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "UnregisterDeviceParams"
		},
		"712": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "UnregisterDeviceParams.id"
		},
		"713": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceResponse"
		},
		"714": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceResponse.date_registered"
		},
		"715": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceResponse.device_name"
		},
		"716": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceResponse.device_token"
		},
		"717": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceResponse.device_type"
		},
		"718": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceResponse.id"
		},
		"719": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceResponse.push_notification_key"
		},
		"720": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceResult"
		},
		"721": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInviteSource"
		},
		"722": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite"
		},
		"723": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.callID"
		},
		"724": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.sdp"
		},
		"725": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.caller_id_name"
		},
		"726": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.caller_id_number"
		},
		"727": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.callee_id_name"
		},
		"728": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.callee_id_number"
		},
		"729": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.display_direction"
		},
		"730": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.nodeId"
		},
		"731": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInviteWithSource"
		},
		"732": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInviteWithSource.source"
		},
		"733": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.callID"
		},
		"734": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.sdp"
		},
		"735": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.caller_id_name"
		},
		"736": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.caller_id_number"
		},
		"737": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.callee_id_name"
		},
		"738": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.callee_id_number"
		},
		"739": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.display_direction"
		},
		"740": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite.nodeId"
		},
		"741": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingCallNotification"
		},
		"742": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingCallNotification.invite"
		},
		"743": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "__type"
		},
		"744": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "__type.details"
		},
		"745": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "__type.accept"
		},
		"746": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "__type"
		},
		"747": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "__type"
		},
		"748": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "param"
		},
		"749": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "__type.reject"
		},
		"750": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "__type"
		},
		"751": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "__type"
		},
		"752": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingCallHandler"
		},
		"753": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "__type"
		},
		"754": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "__type"
		},
		"755": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "notification"
		},
		"756": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingCallHandlers"
		},
		"757": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingCallHandlers.all"
		},
		"758": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingCallHandlers.pushNotification"
		},
		"759": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingCallHandlers.websocket"
		},
		"760": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "OnlineParams"
		},
		"761": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "OnlineParams.incomingCallHandlers"
		},
		"762": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "HandlePushNotificationParams"
		},
		"763": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "__type"
		},
		"764": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "__type.incomingCallHandler"
		},
		"765": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "HandlePushNotificationResult"
		},
		"766": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "HandlePushNotificationResult.resultType"
		},
		"767": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "DialParams"
		},
		"768": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "DialParams.to"
		},
		"769": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "DialParams.nodeId"
		},
		"770": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "DialParams.listen"
		},
		"771": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.disableUdpIceServers"
		},
		"772": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.audio"
		},
		"773": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.video"
		},
		"774": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.negotiateAudio"
		},
		"775": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.negotiateVideo"
		},
		"776": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.applyLocalVideoOverlay"
		},
		"777": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.applyMemberOverlay"
		},
		"778": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.mirrorLocalVideoOverlay"
		},
		"779": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.stopCameraWhileMuted"
		},
		"780": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.stopMicrophoneWhileMuted"
		},
		"781": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.fromCallAddressId"
		},
		"782": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "DefaultCallParams.rootElement"
		},
		"783": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "DefaultCallParams.userVariables"
		},
		"784": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "ReattachParams"
		},
		"785": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "ReattachParams.to"
		},
		"786": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "ReattachParams.nodeId"
		},
		"787": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "ReattachParams.listen"
		},
		"788": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.disableUdpIceServers"
		},
		"789": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.audio"
		},
		"790": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.video"
		},
		"791": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.negotiateAudio"
		},
		"792": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.negotiateVideo"
		},
		"793": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.applyLocalVideoOverlay"
		},
		"794": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.applyMemberOverlay"
		},
		"795": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.mirrorLocalVideoOverlay"
		},
		"796": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.stopCameraWhileMuted"
		},
		"797": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.stopMicrophoneWhileMuted"
		},
		"798": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "CallParams.fromCallAddressId"
		},
		"799": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "DefaultCallParams.rootElement"
		},
		"800": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "DefaultCallParams.userVariables"
		},
		"801": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "SignalWireClient"
		},
		"802": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "SignalWireContract"
		},
		"803": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "SignalWireContract.address"
		},
		"804": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "SignalWireContract.conversation"
		},
		"805": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type"
		},
		"806": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.getConversations"
		},
		"807": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.getConversations"
		},
		"808": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.getConversations"
		},
		"809": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "params"
		},
		"810": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.getMessages"
		},
		"811": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.getMessages"
		},
		"812": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.getMessages"
		},
		"813": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "params"
		},
		"814": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.getConversationMessages"
		},
		"815": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.getConversationMessages"
		},
		"816": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.getConversationMessages"
		},
		"817": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "params"
		},
		"818": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.subscribe"
		},
		"819": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.subscribe"
		},
		"820": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.subscribe"
		},
		"821": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "callback"
		},
		"822": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.sendMessage"
		},
		"823": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.sendMessage"
		},
		"824": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.sendMessage"
		},
		"825": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "params"
		},
		"826": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.join"
		},
		"827": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.joinConversation"
		},
		"828": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.joinConversation"
		},
		"829": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "params"
		},
		"830": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "SignalWireContract.chat"
		},
		"831": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type"
		},
		"832": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.getMessages"
		},
		"833": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.getChatMessages"
		},
		"834": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.getChatMessages"
		},
		"835": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "params"
		},
		"836": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.subscribe"
		},
		"837": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.subscribeChatMessages"
		},
		"838": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.subscribeChatMessages"
		},
		"839": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "params"
		},
		"840": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.sendMessage"
		},
		"841": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.sendMessage"
		},
		"842": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.sendMessage"
		},
		"843": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "params"
		},
		"844": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.join"
		},
		"845": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.joinConversation"
		},
		"846": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "Conversation.joinConversation"
		},
		"847": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/Conversation.ts",
			"qualifiedName": "params"
		},
		"848": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.disconnect"
		},
		"849": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.disconnect"
		},
		"850": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.dial"
		},
		"851": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.dial"
		},
		"852": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "params"
		},
		"853": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.reattach"
		},
		"854": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.reattach"
		},
		"855": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "params"
		},
		"856": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.handlePushNotification"
		},
		"857": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.handlePushNotification"
		},
		"858": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "params"
		},
		"859": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.updateToken"
		},
		"860": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.updateToken"
		},
		"861": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "token"
		},
		"862": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.online"
		},
		"863": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.online"
		},
		"864": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "__0"
		},
		"865": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.offline"
		},
		"866": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientContract.offline"
		},
		"867": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/httpClient.ts",
			"qualifiedName": "registerDevice"
		},
		"868": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/httpClient.ts",
			"qualifiedName": "registerDevice"
		},
		"869": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/httpClient.ts",
			"qualifiedName": "params"
		},
		"870": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/httpClient.ts",
			"qualifiedName": "unregisterDevice"
		},
		"871": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/httpClient.ts",
			"qualifiedName": "unregisterDevice"
		},
		"872": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/httpClient.ts",
			"qualifiedName": "params"
		},
		"873": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/httpClient.ts",
			"qualifiedName": "getSubscriberInfo"
		},
		"874": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/httpClient.ts",
			"qualifiedName": "getSubscriberInfo"
		},
		"875": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "SignalWireClientParams"
		},
		"876": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "SignalWireClientParams.profileId"
		},
		"877": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "SignalWireClientParams.storage"
		},
		"878": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "SignalWireClientParams.shouldDisconnect"
		},
		"879": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type"
		},
		"880": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type"
		},
		"881": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "WSClientOptions.incomingCallHandlers"
		},
		"882": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "DefaultCallParams.rootElement"
		},
		"883": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "DefaultCallParams.userVariables"
		},
		"884": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.host"
		},
		"885": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.token"
		},
		"886": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "devTools"
		},
		"887": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "debug"
		},
		"888": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "__type"
		},
		"889": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "__type.logWsTraffic"
		},
		"890": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "logger"
		},
		"891": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.project"
		},
		"892": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.contexts"
		},
		"893": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.logLevel"
		},
		"894": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "ApiRequestRetriesOptions.apiRequestRetriesDelayIncrement"
		},
		"895": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "ApiRequestRetriesOptions.apiRequestRetriesDelay"
		},
		"896": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/wsClient.ts",
			"qualifiedName": "ApiRequestRetriesOptions.maxApiRequestRetries"
		},
		"897": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.topics"
		},
		"898": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.onRefreshToken"
		},
		"899": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.onRefreshToken"
		},
		"900": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.sessionChannel"
		},
		"901": {
			"packageName": "@signalwire/core",
			"packagePath": "src/utils/interfaces.ts",
			"qualifiedName": "SessionOptions.instanceMap"
		},
		"902": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse"
		},
		"903": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.id"
		},
		"904": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.email"
		},
		"905": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.first_name"
		},
		"906": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.last_name"
		},
		"907": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.display_name"
		},
		"908": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.job_title"
		},
		"909": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.time_zone"
		},
		"910": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.country"
		},
		"911": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.region"
		},
		"912": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.company_name"
		},
		"913": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.push_notification_key"
		},
		"914": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.app_settings"
		},
		"915": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type"
		},
		"916": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.display_name"
		},
		"917": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.scopes"
		},
		"918": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse.fabric_addresses"
		},
		"919": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "GetSubscriberInfoResult"
		},
		"920": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"921": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResponse.data"
		},
		"922": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResponse.links"
		},
		"923": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type"
		},
		"924": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.first"
		},
		"925": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.self"
		},
		"926": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.next"
		},
		"927": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "__type.prev"
		},
		"928": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResponse.T"
		},
		"929": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult"
		},
		"930": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult.data"
		},
		"931": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult.self"
		},
		"932": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult.self"
		},
		"933": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult.nextPage"
		},
		"934": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult.nextPage"
		},
		"935": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult.prevPage"
		},
		"936": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult.prevPage"
		},
		"937": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult.firstPage"
		},
		"938": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult.firstPage"
		},
		"939": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult.hasNext"
		},
		"940": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult.hasPrev"
		},
		"941": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/index.ts",
			"qualifiedName": "PaginatedResult.T"
		},
		"942": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": ""
		},
		"943": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/SignalWire.ts",
			"qualifiedName": "SignalWire"
		},
		"944": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/SignalWire.ts",
			"qualifiedName": "__function"
		},
		"945": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/SignalWire.ts",
			"qualifiedName": "__function"
		},
		"946": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/SignalWire.ts",
			"qualifiedName": "params"
		},
		"947": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "ResourceType"
		},
		"948": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResponse"
		},
		"949": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "Address"
		},
		"950": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressesParams"
		},
		"951": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressByIdParams"
		},
		"952": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressByNameParams"
		},
		"953": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressParams"
		},
		"954": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressResult"
		},
		"955": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressesResponse"
		},
		"956": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/address.ts",
			"qualifiedName": "GetAddressesResult"
		},
		"957": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CapabilityOnOffStateContract"
		},
		"958": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "MemberCapabilityContract"
		},
		"959": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/capabilities.ts",
			"qualifiedName": "CallCapabilitiesContract"
		},
		"960": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationContract"
		},
		"961": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "SendConversationMessageParams"
		},
		"962": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "SendConversationMessageResponse"
		},
		"963": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "SendConversationMessageResult"
		},
		"964": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationsParams"
		},
		"965": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationResponse"
		},
		"966": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationsResponse"
		},
		"967": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationsResult"
		},
		"968": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationSubscribeCallback"
		},
		"969": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationChatSubscribeCallback"
		},
		"970": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationSubscribeResult"
		},
		"971": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationChatMessagesSubscribeParams"
		},
		"972": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationChatMessagesSubscribeResult"
		},
		"973": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "JoinConversationParams"
		},
		"974": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "JoinConversationResponse"
		},
		"975": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "JoinConversationResult"
		},
		"976": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetMessagesParams"
		},
		"977": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessage"
		},
		"978": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetMessagesResult"
		},
		"979": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationChatMessage"
		},
		"980": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationChatMessageParams"
		},
		"981": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationChatMessageResult"
		},
		"982": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationMessagesResponse"
		},
		"983": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationMessagesParams"
		},
		"984": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "GetConversationMessagesResult"
		},
		"985": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationAPISendMessageParams"
		},
		"986": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationAPIGetMessagesParams"
		},
		"987": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceType"
		},
		"988": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceParams"
		},
		"989": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "UnregisterDeviceParams"
		},
		"990": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceResponse"
		},
		"991": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/device.ts",
			"qualifiedName": "RegisterDeviceResult"
		},
		"992": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInviteSource"
		},
		"993": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInvite"
		},
		"994": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingInviteWithSource"
		},
		"995": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingCallNotification"
		},
		"996": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingCallHandler"
		},
		"997": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/incomingCallManager.ts",
			"qualifiedName": "IncomingCallHandlers"
		},
		"998": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "SignalWireCredentials"
		},
		"999": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileType"
		},
		"1000": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "Profile"
		},
		"1001": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ManagedInstance"
		},
		"1002": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "AddProfilesParams"
		},
		"1003": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "RemoveProfilesParams"
		},
		"1004": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "GetClientParamsOptions"
		},
		"1005": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "GetClientParams"
		},
		"1006": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "GetClientResult"
		},
		"1007": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "DisposeClientParams"
		},
		"1008": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryContract"
		},
		"1009": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileManagerContract"
		},
		"1010": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceManagerContract"
		},
		"1011": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "STORAGE_KEYS"
		},
		"1012": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "DEFAULT_CONFIG"
		},
		"1013": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ClientFactoryError"
		},
		"1014": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileNotFoundError"
		},
		"1015": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceNotFoundError"
		},
		"1016": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "ProfileExistsError"
		},
		"1017": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "InstanceInUseError"
		},
		"1018": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "CredentialRefreshError"
		},
		"1019": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/clientFactory.ts",
			"qualifiedName": "CredentialExpiredError"
		},
		"1020": {
			"packageName": "@signalwire/client",
			"packagePath": "src/index.ts",
			"qualifiedName": "SignalWire"
		},
		"1021": {
			"packageName": "@signalwire/client",
			"packagePath": "src/RoomSessionScreenShare.ts",
			"qualifiedName": "RoomSessionScreenShare"
		},
		"1022": {
			"packageName": "@signalwire/client",
			"packagePath": "src/RoomSessionScreenShare.ts",
			"qualifiedName": "RoomSessionScreenShare.join"
		},
		"1023": {
			"packageName": "@signalwire/client",
			"packagePath": "src/RoomSessionScreenShare.ts",
			"qualifiedName": "RoomSessionScreenShare.join"
		},
		"1024": {
			"packageName": "@signalwire/client",
			"packagePath": "src/RoomSessionScreenShare.ts",
			"qualifiedName": "RoomSessionScreenShare.leave"
		},
		"1025": {
			"packageName": "@signalwire/client",
			"packagePath": "src/RoomSessionScreenShare.ts",
			"qualifiedName": "RoomSessionScreenShare.leave"
		},
		"1026": {
			"packageName": "@signalwire/client",
			"packagePath": "src/RoomSessionScreenShare.ts",
			"qualifiedName": "RoomSessionScreenShare.runWorker"
		},
		"1027": {
			"packageName": "@signalwire/core",
			"packagePath": "src/BaseComponent.ts",
			"qualifiedName": "BaseComponent.runWorker"
		},
		"1028": {
			"packageName": "@signalwire/core",
			"packagePath": "src/BaseComponent.ts",
			"qualifiedName": "BaseComponent.runWorker"
		},
		"1029": {
			"packageName": "@signalwire/core",
			"packagePath": "src/BaseComponent.ts",
			"qualifiedName": "Hooks"
		},
		"1030": {
			"packageName": "@signalwire/core",
			"packagePath": "src/BaseComponent.ts",
			"qualifiedName": "name"
		},
		"1031": {
			"packageName": "@signalwire/core",
			"packagePath": "src/BaseComponent.ts",
			"qualifiedName": "def"
		},
		"1032": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.audioMute"
		},
		"1033": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.audioMute"
		},
		"1034": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.audioUnmute"
		},
		"1035": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.audioUnmute"
		},
		"1036": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.videoMute"
		},
		"1037": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.videoMute"
		},
		"1038": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.videoUnmute"
		},
		"1039": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.videoUnmute"
		},
		"1040": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.setMicrophoneVolume"
		},
		"1041": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.setMicrophoneVolume"
		},
		"1042": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"1043": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"1044": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type.volume"
		},
		"1045": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.setInputVolume"
		},
		"1046": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.setInputVolume"
		},
		"1047": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"1048": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"1049": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type.volume"
		},
		"1050": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.setInputSensitivity"
		},
		"1051": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.setInputSensitivity"
		},
		"1052": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"1053": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"1054": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type.value"
		},
		"1055": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.id"
		},
		"1056": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.options"
		},
		"1057": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.leaveReason"
		},
		"1058": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.cameraId"
		},
		"1059": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.cameraLabel"
		},
		"1060": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.cameraConstraints"
		},
		"1061": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.localStream"
		},
		"1062": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.withAudio"
		},
		"1063": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.withVideo"
		},
		"1064": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.localAudioTrack"
		},
		"1065": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.localVideoTrack"
		},
		"1066": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.microphoneId"
		},
		"1067": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.microphoneLabel"
		},
		"1068": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.microphoneConstraints"
		},
		"1069": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.remoteStream"
		},
		"1070": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.roomId"
		},
		"1071": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.callId"
		},
		"1072": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.roomSessionId"
		},
		"1073": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.active"
		},
		"1074": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.memberId"
		},
		"1075": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.previewUrl"
		},
		"1076": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateCamera"
		},
		"1077": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateCamera"
		},
		"1078": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "constraints"
		},
		"1079": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateMicrophone"
		},
		"1080": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateMicrophone"
		},
		"1081": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "constraints"
		},
		"1082": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setLocalStream"
		},
		"1083": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setLocalStream"
		},
		"1084": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "stream"
		},
		"1085": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.sendDigits"
		},
		"1086": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.sendDigits"
		},
		"1087": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "dtmf"
		},
		"1088": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateMedia"
		},
		"1089": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateMedia"
		},
		"1090": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "params"
		},
		"1091": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setAudioDirection"
		},
		"1092": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setAudioDirection"
		},
		"1093": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "direction"
		},
		"1094": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setVideoDirection"
		},
		"1095": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setVideoDirection"
		},
		"1096": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "direction"
		},
		"1097": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.hold"
		},
		"1098": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.hold"
		},
		"1099": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.unhold"
		},
		"1100": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.unhold"
		},
		"1101": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.stopOutboundAudio"
		},
		"1102": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.stopOutboundAudio"
		},
		"1103": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.restoreOutboundAudio"
		},
		"1104": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.restoreOutboundAudio"
		},
		"1105": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.stopOutboundVideo"
		},
		"1106": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.stopOutboundVideo"
		},
		"1107": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.restoreOutboundVideo"
		},
		"1108": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.restoreOutboundVideo"
		},
		"1109": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.on"
		},
		"1110": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.on"
		},
		"1111": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"1112": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1113": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "fn"
		},
		"1114": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1115": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1116": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "args"
		},
		"1117": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.once"
		},
		"1118": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.once"
		},
		"1119": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"1120": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1121": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "fn"
		},
		"1122": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1123": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1124": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "args"
		},
		"1125": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.off"
		},
		"1126": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.off"
		},
		"1127": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"1128": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1129": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "fn"
		},
		"1130": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1131": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1132": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "args"
		},
		"1133": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.removeAllListeners"
		},
		"1134": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.removeAllListeners"
		},
		"1135": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"1136": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1137": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.emit"
		},
		"1138": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.emit"
		},
		"1139": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "E"
		},
		"1140": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1141": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "args"
		},
		"1142": {
			"packageName": "@signalwire/client",
			"packagePath": "src/RoomSessionDevice.ts",
			"qualifiedName": "RoomSessionDevice"
		},
		"1143": {
			"packageName": "@signalwire/client",
			"packagePath": "src/RoomSessionDevice.ts",
			"qualifiedName": "RoomSessionDevice.join"
		},
		"1144": {
			"packageName": "@signalwire/client",
			"packagePath": "src/RoomSessionDevice.ts",
			"qualifiedName": "RoomSessionDevice.join"
		},
		"1145": {
			"packageName": "@signalwire/client",
			"packagePath": "src/RoomSessionDevice.ts",
			"qualifiedName": "RoomSessionDevice.leave"
		},
		"1146": {
			"packageName": "@signalwire/client",
			"packagePath": "src/RoomSessionDevice.ts",
			"qualifiedName": "RoomSessionDevice.leave"
		},
		"1147": {
			"packageName": "@signalwire/client",
			"packagePath": "src/RoomSessionDevice.ts",
			"qualifiedName": "RoomSessionDevice.runWorker"
		},
		"1148": {
			"packageName": "@signalwire/core",
			"packagePath": "src/BaseComponent.ts",
			"qualifiedName": "BaseComponent.runWorker"
		},
		"1149": {
			"packageName": "@signalwire/core",
			"packagePath": "src/BaseComponent.ts",
			"qualifiedName": "BaseComponent.runWorker"
		},
		"1150": {
			"packageName": "@signalwire/core",
			"packagePath": "src/BaseComponent.ts",
			"qualifiedName": "Hooks"
		},
		"1151": {
			"packageName": "@signalwire/core",
			"packagePath": "src/BaseComponent.ts",
			"qualifiedName": "name"
		},
		"1152": {
			"packageName": "@signalwire/core",
			"packagePath": "src/BaseComponent.ts",
			"qualifiedName": "def"
		},
		"1153": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.audioMute"
		},
		"1154": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.audioMute"
		},
		"1155": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.audioUnmute"
		},
		"1156": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.audioUnmute"
		},
		"1157": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.videoMute"
		},
		"1158": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.videoMute"
		},
		"1159": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.videoUnmute"
		},
		"1160": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.videoUnmute"
		},
		"1161": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.setMicrophoneVolume"
		},
		"1162": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.setMicrophoneVolume"
		},
		"1163": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"1164": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"1165": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type.volume"
		},
		"1166": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.setInputVolume"
		},
		"1167": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.setInputVolume"
		},
		"1168": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"1169": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"1170": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type.volume"
		},
		"1171": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.setInputSensitivity"
		},
		"1172": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "RoomMemberSelfMethodsInterface.setInputSensitivity"
		},
		"1173": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "params"
		},
		"1174": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type"
		},
		"1175": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/video.ts",
			"qualifiedName": "__type.value"
		},
		"1176": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.id"
		},
		"1177": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.options"
		},
		"1178": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.leaveReason"
		},
		"1179": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.cameraId"
		},
		"1180": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.cameraLabel"
		},
		"1181": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.cameraConstraints"
		},
		"1182": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.localStream"
		},
		"1183": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.withAudio"
		},
		"1184": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.withVideo"
		},
		"1185": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.localAudioTrack"
		},
		"1186": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.localVideoTrack"
		},
		"1187": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.microphoneId"
		},
		"1188": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.microphoneLabel"
		},
		"1189": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.microphoneConstraints"
		},
		"1190": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.remoteStream"
		},
		"1191": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.roomId"
		},
		"1192": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.callId"
		},
		"1193": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.roomSessionId"
		},
		"1194": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.active"
		},
		"1195": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.memberId"
		},
		"1196": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.previewUrl"
		},
		"1197": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateCamera"
		},
		"1198": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateCamera"
		},
		"1199": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "constraints"
		},
		"1200": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateMicrophone"
		},
		"1201": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateMicrophone"
		},
		"1202": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "constraints"
		},
		"1203": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setLocalStream"
		},
		"1204": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setLocalStream"
		},
		"1205": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "stream"
		},
		"1206": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.sendDigits"
		},
		"1207": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.sendDigits"
		},
		"1208": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "dtmf"
		},
		"1209": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateMedia"
		},
		"1210": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateMedia"
		},
		"1211": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "params"
		},
		"1212": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setAudioDirection"
		},
		"1213": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setAudioDirection"
		},
		"1214": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "direction"
		},
		"1215": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setVideoDirection"
		},
		"1216": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setVideoDirection"
		},
		"1217": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "direction"
		},
		"1218": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.hold"
		},
		"1219": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.hold"
		},
		"1220": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.unhold"
		},
		"1221": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.unhold"
		},
		"1222": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.stopOutboundAudio"
		},
		"1223": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.stopOutboundAudio"
		},
		"1224": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.restoreOutboundAudio"
		},
		"1225": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.restoreOutboundAudio"
		},
		"1226": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.stopOutboundVideo"
		},
		"1227": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.stopOutboundVideo"
		},
		"1228": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.restoreOutboundVideo"
		},
		"1229": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.restoreOutboundVideo"
		},
		"1230": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.on"
		},
		"1231": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.on"
		},
		"1232": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"1233": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1234": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "fn"
		},
		"1235": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1236": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1237": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "args"
		},
		"1238": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.once"
		},
		"1239": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.once"
		},
		"1240": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"1241": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1242": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "fn"
		},
		"1243": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1244": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1245": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "args"
		},
		"1246": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.off"
		},
		"1247": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.off"
		},
		"1248": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"1249": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1250": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "fn"
		},
		"1251": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1252": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1253": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "args"
		},
		"1254": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.removeAllListeners"
		},
		"1255": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.removeAllListeners"
		},
		"1256": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"1257": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1258": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.emit"
		},
		"1259": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.emit"
		},
		"1260": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "E"
		},
		"1261": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1262": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "args"
		},
		"1263": {
			"packageName": "@signalwire/client",
			"packagePath": "src/webrtc.ts",
			"qualifiedName": ""
		},
		"1264": {
			"packageName": "@signalwire/client",
			"packagePath": "src/buildVideoElement.ts",
			"qualifiedName": "buildVideoElement"
		},
		"1265": {
			"packageName": "@signalwire/client",
			"packagePath": "src/buildVideoElement.ts",
			"qualifiedName": "buildVideoElement"
		},
		"1266": {
			"packageName": "@signalwire/client",
			"packagePath": "src/buildVideoElement.ts",
			"qualifiedName": "params"
		},
		"1267": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay"
		},
		"1268": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay.__constructor"
		},
		"1269": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay"
		},
		"1270": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "options"
		},
		"1273": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay.userId"
		},
		"1274": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay.userId"
		},
		"1275": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay.mirrored"
		},
		"1276": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay.mirrored"
		},
		"1279": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay.detachListeners"
		},
		"1280": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay.detachListeners"
		},
		"1291": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay.setMediaStream"
		},
		"1292": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay.setMediaStream"
		},
		"1293": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "stream"
		},
		"1294": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay.setMirror"
		},
		"1295": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "LocalVideoOverlay.setMirror"
		},
		"1296": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "mirror"
		},
		"1297": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.id"
		},
		"1298": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.domElement"
		},
		"1299": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.domElement"
		},
		"1300": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.domElement"
		},
		"1301": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "element"
		},
		"1302": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.status"
		},
		"1303": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.status"
		},
		"1304": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.status"
		},
		"1305": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "status"
		},
		"1306": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.hide"
		},
		"1307": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.hide"
		},
		"1308": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.show"
		},
		"1309": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.show"
		},
		"1310": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "OverlayMap"
		},
		"1311": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay"
		},
		"1312": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.__constructor"
		},
		"1313": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay"
		},
		"1314": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "options"
		},
		"1315": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.id"
		},
		"1318": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.userId"
		},
		"1319": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.userId"
		},
		"1320": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.domElement"
		},
		"1321": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.domElement"
		},
		"1322": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.domElement"
		},
		"1323": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "element"
		},
		"1324": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.status"
		},
		"1325": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.status"
		},
		"1326": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.status"
		},
		"1327": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "status"
		},
		"1328": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.hide"
		},
		"1329": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.hide"
		},
		"1330": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.show"
		},
		"1331": {
			"packageName": "@signalwire/client",
			"packagePath": "src/VideoOverlays.ts",
			"qualifiedName": "UserOverlay.show"
		},
		"1332": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/CallSession.ts",
			"qualifiedName": "CallSession"
		},
		"1333": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "CallSessionContract.currentLayoutEvent"
		},
		"1334": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "CallSessionContract.currentLayout"
		},
		"1335": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "CallSessionContract.currentPosition"
		},
		"1336": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "CallSessionContract.start"
		},
		"1337": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "CallSessionContract.start"
		},
		"1338": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "CallSessionContract.answer"
		},
		"1339": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "CallSessionContract.answer"
		},
		"1340": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "CallSessionContract.hangup"
		},
		"1341": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "CallSessionContract.hangup"
		},
		"1342": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/fabric.ts",
			"qualifiedName": "id"
		},
		"1343": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "audioMute"
		},
		"1344": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "audioMute"
		},
		"1345": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1346": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "audioUnmute"
		},
		"1347": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "audioUnmute"
		},
		"1348": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1349": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "videoMute"
		},
		"1350": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "videoMute"
		},
		"1351": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1352": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "videoUnmute"
		},
		"1353": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "videoUnmute"
		},
		"1354": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1355": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setInputVolume"
		},
		"1356": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setInputVolume"
		},
		"1357": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1358": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setInputSensitivity"
		},
		"1359": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setInputSensitivity"
		},
		"1360": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1361": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "getMembers"
		},
		"1362": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "getMembers"
		},
		"1363": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "deaf"
		},
		"1364": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "deaf"
		},
		"1365": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1366": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "undeaf"
		},
		"1367": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "undeaf"
		},
		"1368": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1369": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setOutputVolume"
		},
		"1370": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setOutputVolume"
		},
		"1371": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1372": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "removeMember"
		},
		"1373": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "removeMember"
		},
		"1374": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1375": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "getLayouts"
		},
		"1376": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "getLayouts"
		},
		"1377": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setLayout"
		},
		"1378": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setLayout"
		},
		"1379": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1380": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setPositions"
		},
		"1381": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setPositions"
		},
		"1382": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1383": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "lock"
		},
		"1384": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "lock"
		},
		"1385": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "unlock"
		},
		"1386": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "unlock"
		},
		"1387": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setRaisedHand"
		},
		"1388": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setRaisedHand"
		},
		"1389": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1390": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setAudioFlags"
		},
		"1391": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "setAudioFlags"
		},
		"1392": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1393": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "end"
		},
		"1394": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "end"
		},
		"1395": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/fabricRoomSession.ts",
			"qualifiedName": "params"
		},
		"1396": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "BaseRoomSessionContract.overlayMap"
		},
		"1397": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "BaseRoomSessionContract.localVideoOverlay"
		},
		"1398": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "BaseRoomSessionContract.screenShareList"
		},
		"1399": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "BaseRoomSessionContract.leave"
		},
		"1400": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "BaseRoomSessionContract.leave"
		},
		"1401": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "BaseRoomSessionContract.getMemberOverlay"
		},
		"1402": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "__type"
		},
		"1403": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "__type"
		},
		"1404": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "memberId"
		},
		"1405": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "BaseRoomSessionContract.startScreenShare"
		},
		"1406": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "BaseRoomSessionContract.startScreenShare"
		},
		"1407": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "opts"
		},
		"1408": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "BaseRoomSessionContract.updateSpeaker"
		},
		"1409": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "BaseRoomSessionContract.updateSpeaker"
		},
		"1410": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "opts"
		},
		"1411": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "__type"
		},
		"1412": {
			"packageName": "@signalwire/client",
			"packagePath": "src/utils/interfaces/base.ts",
			"qualifiedName": "__type.deviceId"
		},
		"1413": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.id"
		},
		"1414": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.options"
		},
		"1415": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.leaveReason"
		},
		"1416": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.cameraId"
		},
		"1417": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.cameraLabel"
		},
		"1418": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.cameraConstraints"
		},
		"1419": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.localStream"
		},
		"1420": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.withAudio"
		},
		"1421": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.withVideo"
		},
		"1422": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.localAudioTrack"
		},
		"1423": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.localVideoTrack"
		},
		"1424": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.microphoneId"
		},
		"1425": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.microphoneLabel"
		},
		"1426": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.microphoneConstraints"
		},
		"1427": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.remoteStream"
		},
		"1428": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.roomId"
		},
		"1429": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.callId"
		},
		"1430": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.roomSessionId"
		},
		"1431": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.active"
		},
		"1432": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.memberId"
		},
		"1433": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.previewUrl"
		},
		"1434": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateCamera"
		},
		"1435": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateCamera"
		},
		"1436": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "constraints"
		},
		"1437": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateMicrophone"
		},
		"1438": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateMicrophone"
		},
		"1439": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "constraints"
		},
		"1440": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setLocalStream"
		},
		"1441": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setLocalStream"
		},
		"1442": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "stream"
		},
		"1443": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.sendDigits"
		},
		"1444": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.sendDigits"
		},
		"1445": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "dtmf"
		},
		"1446": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateMedia"
		},
		"1447": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.updateMedia"
		},
		"1448": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "params"
		},
		"1449": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setAudioDirection"
		},
		"1450": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setAudioDirection"
		},
		"1451": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "direction"
		},
		"1452": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setVideoDirection"
		},
		"1453": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.setVideoDirection"
		},
		"1454": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "direction"
		},
		"1455": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.hold"
		},
		"1456": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.hold"
		},
		"1457": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.unhold"
		},
		"1458": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.unhold"
		},
		"1459": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.stopOutboundAudio"
		},
		"1460": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.stopOutboundAudio"
		},
		"1461": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.restoreOutboundAudio"
		},
		"1462": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.restoreOutboundAudio"
		},
		"1463": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.stopOutboundVideo"
		},
		"1464": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.stopOutboundVideo"
		},
		"1465": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.restoreOutboundVideo"
		},
		"1466": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseConnectionContract.restoreOutboundVideo"
		},
		"1467": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.on"
		},
		"1468": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.on"
		},
		"1469": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"1470": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1471": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "fn"
		},
		"1472": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1473": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1474": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "args"
		},
		"1475": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.once"
		},
		"1476": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.once"
		},
		"1477": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"1478": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1479": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "fn"
		},
		"1480": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1481": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1482": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "args"
		},
		"1483": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.off"
		},
		"1484": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.off"
		},
		"1485": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"1486": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1487": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "fn"
		},
		"1488": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1489": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"1490": {
			"packageName": "eventemitter3",
			"packagePath": "index.d.ts",
			"qualifiedName": "args"
		},
		"1491": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.removeAllListeners"
		},
		"1492": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.removeAllListeners"
		},
		"1493": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "T"
		},
		"1494": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1495": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.emit"
		},
		"1496": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "EmitterContract.emit"
		},
		"1497": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "E"
		},
		"1498": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "event"
		},
		"1499": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "args"
		},
		"1500": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseComponentContract.destroy"
		},
		"1501": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "BaseComponentContract.destroy"
		},
		"1502": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/CallSession.ts",
			"qualifiedName": "isCallSession"
		},
		"1503": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/CallSession.ts",
			"qualifiedName": "isCallSession"
		},
		"1504": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/CallSession.ts",
			"qualifiedName": "room"
		},
		"1505": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter"
		},
		"1506": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.__constructor"
		},
		"1507": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter"
		},
		"1525": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.get"
		},
		"1526": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.get"
		},
		"1527": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "T"
		},
		"1528": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "key"
		},
		"1529": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.set"
		},
		"1530": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.set"
		},
		"1531": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "T"
		},
		"1532": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "key"
		},
		"1533": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "value"
		},
		"1534": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.delete"
		},
		"1535": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.delete"
		},
		"1536": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "key"
		},
		"1537": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.has"
		},
		"1538": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.has"
		},
		"1539": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "key"
		},
		"1540": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.getMany"
		},
		"1541": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.getMany"
		},
		"1542": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "T"
		},
		"1543": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "keys"
		},
		"1544": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.setMany"
		},
		"1545": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.setMany"
		},
		"1546": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "T"
		},
		"1547": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "entries"
		},
		"1548": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.deleteMany"
		},
		"1549": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.deleteMany"
		},
		"1550": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "keys"
		},
		"1551": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.list"
		},
		"1552": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.list"
		},
		"1553": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "prefix"
		},
		"1554": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.clear"
		},
		"1555": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.clear"
		},
		"1556": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "prefix"
		},
		"1557": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.getSession"
		},
		"1558": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.getSession"
		},
		"1559": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "T"
		},
		"1560": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "key"
		},
		"1561": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.setSession"
		},
		"1562": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.setSession"
		},
		"1563": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "T"
		},
		"1564": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "key"
		},
		"1565": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "value"
		},
		"1566": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.deleteSession"
		},
		"1567": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.deleteSession"
		},
		"1568": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "key"
		},
		"1569": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.hasSession"
		},
		"1570": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.hasSession"
		},
		"1571": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "key"
		},
		"1572": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.getManySession"
		},
		"1573": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.getManySession"
		},
		"1574": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "T"
		},
		"1575": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "keys"
		},
		"1576": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.setManySession"
		},
		"1577": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.setManySession"
		},
		"1578": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "T"
		},
		"1579": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "entries"
		},
		"1580": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.deleteManySession"
		},
		"1581": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.deleteManySession"
		},
		"1582": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "keys"
		},
		"1583": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.listSession"
		},
		"1584": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.listSession"
		},
		"1585": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "prefix"
		},
		"1586": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.clearSession"
		},
		"1587": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.clearSession"
		},
		"1588": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "prefix"
		},
		"1589": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.getStorageInfo"
		},
		"1590": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/storage/LocalStorageAdapter.ts",
			"qualifiedName": "LocalStorageAdapter.getStorageInfo"
		},
		"1591": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper"
		},
		"1592": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.__constructor"
		},
		"1593": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper"
		},
		"1594": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "storage"
		},
		"1595": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "profileId"
		},
		"1607": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.get"
		},
		"1608": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.get"
		},
		"1609": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "key"
		},
		"1610": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.set"
		},
		"1611": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.set"
		},
		"1612": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "key"
		},
		"1613": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "value"
		},
		"1614": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.delete"
		},
		"1615": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.delete"
		},
		"1616": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "key"
		},
		"1617": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.has"
		},
		"1618": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.has"
		},
		"1619": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "key"
		},
		"1620": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.getMany"
		},
		"1621": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.getMany"
		},
		"1622": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "keys"
		},
		"1623": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.setMany"
		},
		"1624": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.setMany"
		},
		"1625": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "entries"
		},
		"1626": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.deleteMany"
		},
		"1627": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.deleteMany"
		},
		"1628": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "keys"
		},
		"1629": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.list"
		},
		"1630": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.list"
		},
		"1631": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "prefix"
		},
		"1632": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.clear"
		},
		"1633": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.clear"
		},
		"1634": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "prefix"
		},
		"1635": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.getSession"
		},
		"1636": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.getSession"
		},
		"1637": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "key"
		},
		"1638": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.setSession"
		},
		"1639": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.setSession"
		},
		"1640": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "key"
		},
		"1641": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "value"
		},
		"1642": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.deleteSession"
		},
		"1643": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.deleteSession"
		},
		"1644": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "key"
		},
		"1645": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.hasSession"
		},
		"1646": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.hasSession"
		},
		"1647": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "key"
		},
		"1648": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.getManySession"
		},
		"1649": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.getManySession"
		},
		"1650": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "keys"
		},
		"1651": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.setManySession"
		},
		"1652": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.setManySession"
		},
		"1653": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "entries"
		},
		"1654": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.deleteManySession"
		},
		"1655": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.deleteManySession"
		},
		"1656": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "keys"
		},
		"1657": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.listSession"
		},
		"1658": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.listSession"
		},
		"1659": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "prefix"
		},
		"1660": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.clearSession"
		},
		"1661": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.clearSession"
		},
		"1662": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "prefix"
		},
		"1663": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.getStorageInfo"
		},
		"1664": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/utils/StorageWrapper.ts",
			"qualifiedName": "StorageWrapper.getStorageInfo"
		},
		"1665": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory"
		},
		"1667": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.getInstance"
		},
		"1668": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.getInstance"
		},
		"1675": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.init"
		},
		"1676": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.init"
		},
		"1677": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "storage"
		},
		"1678": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.addProfiles"
		},
		"1679": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.addProfiles"
		},
		"1680": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "params"
		},
		"1681": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.removeProfiles"
		},
		"1682": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.removeProfiles"
		},
		"1683": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "params"
		},
		"1684": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.listProfiles"
		},
		"1685": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.listProfiles"
		},
		"1686": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.getProfile"
		},
		"1687": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.getProfile"
		},
		"1688": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "profileId"
		},
		"1689": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.getClient"
		},
		"1690": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.getClient"
		},
		"1691": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "params"
		},
		"1692": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.disposeClient"
		},
		"1693": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.disposeClient"
		},
		"1694": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "params"
		},
		"1695": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.listActiveClients"
		},
		"1696": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.listActiveClients"
		},
		"1697": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.addDynamicProfile"
		},
		"1698": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.addDynamicProfile"
		},
		"1699": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "credentialsId"
		},
		"1700": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "credentials"
		},
		"1701": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "addressId"
		},
		"1702": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "addressDetails"
		},
		"1703": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "__type"
		},
		"1704": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "__type.type"
		},
		"1705": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "__type.name"
		},
		"1706": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "__type.displayName"
		},
		"1707": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "__type.channels"
		},
		"1708": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.addStaticProfile"
		},
		"1709": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.addStaticProfile"
		},
		"1710": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "credentialsId"
		},
		"1711": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "credentials"
		},
		"1712": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "addressId"
		},
		"1713": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "addressDetails"
		},
		"1714": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "__type"
		},
		"1715": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "__type.type"
		},
		"1716": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "__type.name"
		},
		"1717": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "__type.displayName"
		},
		"1718": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "__type.channels"
		},
		"1719": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.getStorageInfo"
		},
		"1720": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.getStorageInfo"
		},
		"1721": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.dispose"
		},
		"1722": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "ClientFactory.dispose"
		},
		"1728": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "getClientFactory"
		},
		"1729": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ClientFactory.ts",
			"qualifiedName": "getClientFactory"
		},
		"1730": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager"
		},
		"1738": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.init"
		},
		"1739": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.init"
		},
		"1740": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "storage"
		},
		"1746": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.addProfile"
		},
		"1747": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.addProfile"
		},
		"1748": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "profile"
		},
		"1749": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.updateProfile"
		},
		"1750": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.updateProfile"
		},
		"1751": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "profileId"
		},
		"1752": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "updates"
		},
		"1753": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.removeProfile"
		},
		"1754": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.removeProfile"
		},
		"1755": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "profileId"
		},
		"1756": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.getProfile"
		},
		"1757": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.getProfile"
		},
		"1758": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "profileId"
		},
		"1759": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.listProfiles"
		},
		"1760": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.listProfiles"
		},
		"1761": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "type"
		},
		"1762": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.hasProfile"
		},
		"1763": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.hasProfile"
		},
		"1764": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "profileId"
		},
		"1776": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.refreshCredentials"
		},
		"1777": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.refreshCredentials"
		},
		"1778": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "profileId"
		},
		"1779": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.validateCredentials"
		},
		"1780": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.validateCredentials"
		},
		"1781": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "profileId"
		},
		"1782": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.scheduleRefresh"
		},
		"1783": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.scheduleRefresh"
		},
		"1784": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "profile"
		},
		"1788": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.cleanup"
		},
		"1789": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.cleanup"
		},
		"1800": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.findProfileForAddress"
		},
		"1801": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.findProfileForAddress"
		},
		"1802": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "addressId"
		},
		"1803": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.getProfilesByCredentialId"
		},
		"1804": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.getProfilesByCredentialId"
		},
		"1805": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "credentialId"
		},
		"1806": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.createDynamicProfile"
		},
		"1807": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "ProfileManager.createDynamicProfile"
		},
		"1808": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "parentProfile"
		},
		"1809": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/ProfileManager.ts",
			"qualifiedName": "addressId"
		},
		"1810": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager"
		},
		"1814": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.createInstance"
		},
		"1815": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.createInstance"
		},
		"1816": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "profile"
		},
		"1817": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "options"
		},
		"1818": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.disposeInstance"
		},
		"1819": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.disposeInstance"
		},
		"1820": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "instanceId"
		},
		"1821": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.getInstance"
		},
		"1822": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.getInstance"
		},
		"1823": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "instanceId"
		},
		"1824": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.getInstanceByProfile"
		},
		"1825": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.getInstanceByProfile"
		},
		"1826": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "profileId"
		},
		"1827": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.listInstances"
		},
		"1828": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.listInstances"
		},
		"1829": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.updateInstanceAccess"
		},
		"1830": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.updateInstanceAccess"
		},
		"1831": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "instanceId"
		},
		"1832": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.dispose"
		},
		"1833": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/InstanceManager.ts",
			"qualifiedName": "InstanceManager.dispose"
		},
		"1834": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/SignalWire.ts",
			"qualifiedName": "createSignalWireClient"
		},
		"1835": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/SignalWire.ts",
			"qualifiedName": "createSignalWireClient"
		},
		"1836": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/SignalWire.ts",
			"qualifiedName": "params"
		},
		"1837": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams"
		},
		"1838": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams.group_id"
		},
		"1839": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams.details"
		},
		"1840": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams.hidden"
		},
		"1841": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams.id"
		},
		"1842": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams.kind"
		},
		"1843": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams.metadata"
		},
		"1844": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams.subtype"
		},
		"1845": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams.text"
		},
		"1846": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams.ts"
		},
		"1847": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams.type"
		},
		"1848": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams.from_fabric_address_id"
		},
		"1849": {
			"packageName": "@signalwire/core",
			"packagePath": "src/types/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams.user_name"
		},
		"1850": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "OnlineParams"
		},
		"1851": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "HandlePushNotificationParams"
		},
		"1852": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "HandlePushNotificationResult"
		},
		"1853": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "DialParams"
		},
		"1854": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "ReattachParams"
		},
		"1855": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "SignalWireClient"
		},
		"1856": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "SignalWireContract"
		},
		"1857": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "SignalWireClientParams"
		},
		"1858": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "GetSubscriberInfoResponse"
		},
		"1859": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "GetSubscriberInfoResult"
		},
		"1860": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"1861": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "PaginatedResult"
		},
		"1862": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "CallSession"
		},
		"1863": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "isCallSession"
		},
		"1864": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "LocalStorageAdapter"
		},
		"1865": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "StorageWrapper"
		},
		"1866": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "ClientFactory"
		},
		"1867": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "getClientFactory"
		},
		"1868": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "ProfileManager"
		},
		"1869": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "InstanceManager"
		},
		"1870": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/index.ts",
			"qualifiedName": "createSignalWireClient"
		},
		"1871": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessageEventName"
		},
		"1872": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessageEventParams"
		},
		"1873": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationMessageEvent"
		},
		"1874": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationEvent"
		},
		"1875": {
			"packageName": "@signalwire/client",
			"packagePath": "src/unified/interfaces/conversation.ts",
			"qualifiedName": "ConversationEventParams"
		},
		"1876": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getDevices"
		},
		"1877": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getDevices"
		},
		"1878": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "name"
		},
		"1879": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "fullList"
		},
		"1880": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getCameraDevices"
		},
		"1881": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getCameraDevices"
		},
		"1882": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getMicrophoneDevices"
		},
		"1883": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getMicrophoneDevices"
		},
		"1884": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getSpeakerDevices"
		},
		"1885": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getSpeakerDevices"
		},
		"1886": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getDevicesWithPermissions"
		},
		"1887": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getDevicesWithPermissions"
		},
		"1888": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "kind"
		},
		"1889": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "fullList"
		},
		"1890": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getCameraDevicesWithPermissions"
		},
		"1891": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getCameraDevicesWithPermissions"
		},
		"1892": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getMicrophoneDevicesWithPermissions"
		},
		"1893": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getMicrophoneDevicesWithPermissions"
		},
		"1894": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getSpeakerDevicesWithPermissions"
		},
		"1895": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "getSpeakerDevicesWithPermissions"
		},
		"1896": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/permissions.ts",
			"qualifiedName": "checkPermissions"
		},
		"1897": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/permissions.ts",
			"qualifiedName": "checkPermissions"
		},
		"1898": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/permissions.ts",
			"qualifiedName": "name"
		},
		"1899": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/permissions.ts",
			"qualifiedName": "checkCameraPermissions"
		},
		"1900": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/permissions.ts",
			"qualifiedName": "checkCameraPermissions"
		},
		"1901": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/permissions.ts",
			"qualifiedName": "checkMicrophonePermissions"
		},
		"1902": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/permissions.ts",
			"qualifiedName": "checkMicrophonePermissions"
		},
		"1903": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/permissions.ts",
			"qualifiedName": "checkSpeakerPermissions"
		},
		"1904": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/permissions.ts",
			"qualifiedName": "checkSpeakerPermissions"
		},
		"1905": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/requestPermissions.ts",
			"qualifiedName": "requestPermissions"
		},
		"1906": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/requestPermissions.ts",
			"qualifiedName": "requestPermissions"
		},
		"1907": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/requestPermissions.ts",
			"qualifiedName": "constraints"
		},
		"1908": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "createDeviceWatcher"
		},
		"1909": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "createDeviceWatcher"
		},
		"1910": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "options"
		},
		"1911": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "createCameraDeviceWatcher"
		},
		"1912": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "createCameraDeviceWatcher"
		},
		"1913": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "createMicrophoneDeviceWatcher"
		},
		"1914": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "createMicrophoneDeviceWatcher"
		},
		"1915": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "createSpeakerDeviceWatcher"
		},
		"1916": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "createSpeakerDeviceWatcher"
		},
		"1917": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "supportsMediaDevices"
		},
		"1918": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "supportsMediaDevices"
		},
		"1919": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "supportsGetUserMedia"
		},
		"1920": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "supportsGetUserMedia"
		},
		"1921": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "supportsGetDisplayMedia"
		},
		"1922": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "supportsGetDisplayMedia"
		},
		"1923": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/getUserMedia.ts",
			"qualifiedName": "getUserMedia"
		},
		"1924": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/getUserMedia.ts",
			"qualifiedName": "getUserMedia"
		},
		"1925": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/getUserMedia.ts",
			"qualifiedName": "constraints"
		},
		"1926": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/getDisplayMedia.ts",
			"qualifiedName": "getDisplayMedia"
		},
		"1927": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/getDisplayMedia.ts",
			"qualifiedName": "getDisplayMedia"
		},
		"1928": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/getDisplayMedia.ts",
			"qualifiedName": "constraints"
		},
		"1929": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/enumerateDevices.ts",
			"qualifiedName": "enumerateDevices"
		},
		"1930": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/enumerateDevices.ts",
			"qualifiedName": "enumerateDevices"
		},
		"1931": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/enumerateDevices.ts",
			"qualifiedName": "enumerateDevicesByKind"
		},
		"1932": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/enumerateDevices.ts",
			"qualifiedName": "enumerateDevicesByKind"
		},
		"1933": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/enumerateDevices.ts",
			"qualifiedName": "filterByKind"
		},
		"1934": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "getSupportedConstraints"
		},
		"1935": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "getSupportedConstraints"
		},
		"1936": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "supportsMediaOutput"
		},
		"1937": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "supportsMediaOutput"
		},
		"1938": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "setMediaElementSinkId"
		},
		"1939": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "setMediaElementSinkId"
		},
		"1940": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "el"
		},
		"1941": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "deviceId"
		},
		"1942": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "stopStream"
		},
		"1943": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "stopStream"
		},
		"1944": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "stream"
		},
		"1945": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "stopTrack"
		},
		"1946": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "stopTrack"
		},
		"1947": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/primitives.ts",
			"qualifiedName": "track"
		},
		"1948": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "createMicrophoneAnalyzer"
		},
		"1949": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "createMicrophoneAnalyzer"
		},
		"1950": {
			"packageName": "@signalwire/webrtc",
			"packagePath": "src/utils/deviceHelpers.ts",
			"qualifiedName": "options"
		},
		"1951": {
			"packageName": "@signalwire/client",
			"packagePath": "src/webrtc.ts",
			"qualifiedName": "MicrophoneAnalyzer"
		}
	},
	"files": {
		"entries": {
			"1": "packages/client/src/index.ts",
			"2": "packages/client/src/unified/index.ts",
			"3": "packages/client/src/webrtc.ts",
			"4": "packages/client/README.md",
			"5": "packages/client"
		},
		"reflections": {
			"1": 0,
			"2": 942,
			"3": 1263,
			"4": 0,
			"5": 0
		}
	}
}
