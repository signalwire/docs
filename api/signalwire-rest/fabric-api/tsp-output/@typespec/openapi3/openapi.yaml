openapi: 3.0.0
info:
  title: Call Fabric API
  description: API to access/manage SignalWire's Call Fabric objects.
  version: 0.0.0
tags:
  - name: Fabric Address
  - name: 'Subscribers: SIP Endpoints'
  - name: Subscribers
  - name: 'Subscribers: Tokens'
  - name: External LAML Handler
  - name: External SWML Handler
  - name: 'AI Agents: Custom'
  - name: AI Agent
  - name: Embeds Tokens
paths:
  /addresses:
    get:
      operationId: FabricAddresses_list
      summary: List Fabric Addresses
      description: |-
        A list of Fabric Addresses. This endpoint uses the bearer token authentication method with the SAT (Subscriber Access Token) wich can be
        generated using the [Create Subscriber Token endpoint](/rest/signalwire-rest/endpoints/fabric/subscriber-tokens-create).
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricAddressesResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - Fabric Address
      security:
        - BearerAuth: []
  /addresses/{id}:
    get:
      operationId: FabricAddresses_read
      summary: Get Fabric Address
      description: |-
        Returns a Fabric Address by ID. This endpoint uses the bearer token authentication method with the SAT (Subscriber Access Token) wich can be
        generated using the [Create Subscriber Token endpoint](/rest/signalwire-rest/endpoints/fabric/subscriber-tokens-create).
      parameters:
        - $ref: '#/components/parameters/FabricAddressID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricAddress'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - Fabric Address
      security:
        - BearerAuth: []
  /embeds/tokens:
    post:
      operationId: EmbedsTokens_create
      summary: Create Embeds Tokens
      description: Exchanges a public Click-to-Call (C2C) token for a short-lived, private embed guest token used to authorize a call. This allows secure activation of the C2C widget without exposing sensitive credentials.
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbedsTokensResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                anyOf:
                  - type: string
                    enum:
                      - Unauthorized
                  - type: string
                    enum:
                      - Forbidden
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - Embeds Tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbedsTokensRequest'
      security:
        - {}
  /guests/tokens:
    post:
      operationId: GuestTokens_create
      summary: Create Subscriber Guest Token
      description: Creates a Subscriber Guest Token to be used for server-side API calls. The token is authorized using an existing API token.
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberGuestTokenCreateResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestTokenCreateStatusCode422'
      tags:
        - 'Subscribers: Tokens'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberGuestTokenCreateRequest'
  /resources/ai_agents:
    get:
      operationId: AIAgents_list
      summary: List AI Agents
      description: A list of AI Agents
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - 'AI Agents: Custom'
    post:
      operationId: AIAgents_create
      summary: Create AI Agent
      description: Creates an AI Agent
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentCreateStatusCode422'
      tags:
        - 'AI Agents: Custom'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIAgentCreateRequest'
  /resources/ai_agents/{ai_agent_id}/addresses:
    get:
      operationId: AIAgentAddresses_list
      summary: List AI Agent Addresses
      description: A list of AI Agent Addresses
      parameters:
        - $ref: '#/components/parameters/AIAgentIDPath'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - AI Agent
  /resources/ai_agents/{id}:
    get:
      operationId: AIAgents_read
      summary: Get AI Agent
      description: Returns an AI Agent by ID
      parameters:
        - $ref: '#/components/parameters/AIAgentPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - 'AI Agents: Custom'
    patch:
      operationId: AIAgents_update
      summary: Update AI Agent
      description: Updates an AI Agent by ID
      parameters:
        - $ref: '#/components/parameters/AIAgentPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentUpdateStatusCode422'
      tags:
        - 'AI Agents: Custom'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIAgentUpdateRequest'
    delete:
      operationId: AIAgents_delete
      summary: Delete AI Agent
      description: Deletes an AI Agent by ID
      parameters:
        - $ref: '#/components/parameters/AIAgentPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - 'AI Agents: Custom'
  /resources/external_laml_handlers:
    get:
      operationId: ExternalLAMLHandlers_list
      summary: List External LAML Handlers
      description: A list of External LAML Handlers
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLAMLHandlerListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - External LAML Handler
    post:
      operationId: ExternalLAMLHandlers_create
      summary: Create External LAML Handler
      description: Creates an External LAML Handler
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLAMLHandlerResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLamlHandlerCreateStatusCode422'
      tags:
        - External LAML Handler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalLAMLHandlerCreateRequest'
  /resources/external_laml_handlers/{external_laml_handler_id}/addresses:
    get:
      operationId: ExternalLAMLHandlerAddresses_list
      summary: List External LAML Handler Addresses
      description: A list of External LAML Handler Addresses
      parameters:
        - $ref: '#/components/parameters/ExternalLAMLHandlerIDPath'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLAMLHandlerAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - External LAML Handler
  /resources/external_laml_handlers/{id}:
    get:
      operationId: ExternalLAMLHandlers_read
      summary: Get External LAML Handler
      description: Returns an External LAML Handler by ID
      parameters:
        - $ref: '#/components/parameters/ExternalLAMLHandlerID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLAMLHandlerResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - External LAML Handler
    patch:
      operationId: ExternalLAMLHandlers_update
      summary: Update External LAML Handler
      description: Updates an External LAML Handler by ID
      parameters:
        - $ref: '#/components/parameters/ExternalLAMLHandlerID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLAMLHandlerResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLamlHandlerUpdateStatusCode422'
      tags:
        - External LAML Handler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalLAMLHandlerUpdateRequest'
    delete:
      operationId: ExternalLAMLHandlers_delete
      summary: Delete External LAML Handler
      description: Deletes an External LAML Handler by ID
      parameters:
        - $ref: '#/components/parameters/ExternalLAMLHandlerID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - External LAML Handler
  /resources/external_swml_handlers:
    get:
      operationId: ExternalSWMLHandlers_list
      summary: List External SWML Handlers
      description: A list of External SWML Handlers
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalSWMLHandlerListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - External SWML Handler
    post:
      operationId: ExternalSWMLHandlers_create
      summary: Create External SWML Handler
      description: Creates an External SWML Handler
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalSWMLHandlerResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalSwmlHandlerCreateStatusCode422'
      tags:
        - External SWML Handler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalSWMLHandlerCreateRequest'
  /resources/external_swml_handlers/{external_swml_handler_id}/addresses:
    get:
      operationId: ExternalSWMLHandlerAddresses_list
      summary: List External SWML Handler Addresses
      description: A list of External SWML Handler Addresses
      parameters:
        - $ref: '#/components/parameters/ExternalSWMLHandlerIDPath'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalSWMLHandlerAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - External SWML Handler
  /resources/external_swml_handlers/{id}:
    get:
      operationId: ExternalSWMLHandlers_read
      summary: Get External SWML Handler
      description: Returns an External SWML Handler by ID
      parameters:
        - $ref: '#/components/parameters/ExternalSWMLHandlerID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalSWMLHandlerResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - External SWML Handler
    patch:
      operationId: ExternalSWMLHandlers_update
      summary: Update External SWML Handler
      description: Updates an External SWML Handler by ID
      parameters:
        - $ref: '#/components/parameters/ExternalSWMLHandlerID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalSWMLHandlerResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalSwmlHandlerUpdateStatusCode422'
      tags:
        - External SWML Handler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalSWMLHandlerUpdateRequest'
    delete:
      operationId: ExternalSWMLHandlers_delete
      summary: Delete External SWML Handler
      description: Deletes an External SWML Handler by ID
      parameters:
        - $ref: '#/components/parameters/ExternalSWMLHandlerID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - External SWML Handler
  /resources/subscribers:
    get:
      operationId: Subscribers_list
      summary: List Subscribers
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - Subscribers
    post:
      operationId: Subscribers_create
      summary: Create Subscriber
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberCreateStatusCode422'
      tags:
        - Subscribers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberRequest'
  /resources/subscribers/{fabric_subscriber_id}/sip_endpoints:
    get:
      operationId: SubscriberSipEndpoint_list
      summary: List Subscriber SIP Endpoints
      description: A list of Sip Endpoints of the Subscriber
      parameters:
        - $ref: '#/components/parameters/FabricSubscriberID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberSipEndpointListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - 'Subscribers: SIP Endpoints'
    post:
      operationId: SubscriberSipEndpoint_create
      summary: Create Subscriber SIP Endpoint
      description: Creates a Subscriber Sip Endpoint
      parameters:
        - $ref: '#/components/parameters/FabricSubscriberID'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIPEndpoint'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipEndpointCreateStatusCode422'
      tags:
        - 'Subscribers: SIP Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberSipEndpointCreateRequest'
  /resources/subscribers/{fabric_subscriber_id}/sip_endpoints/{id}:
    get:
      operationId: SubscriberSipEndpoint_read
      summary: Get Subscriber SIP Endpoint
      description: Returns a Subscriber Sip Endpoint by ID
      parameters:
        - $ref: '#/components/parameters/SIPEndpointID'
        - $ref: '#/components/parameters/FabricSubscriberID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIPEndpoint'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - 'Subscribers: SIP Endpoints'
    patch:
      operationId: SubscriberSipEndpoint_update
      summary: Update Subscriber SIP Endpoint
      description: Updates a Subscriber Sip Endpoint by ID
      parameters:
        - $ref: '#/components/parameters/SIPEndpointID'
        - $ref: '#/components/parameters/FabricSubscriberID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIPEndpoint'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipEndpointUpdateStatusCode422'
      tags:
        - 'Subscribers: SIP Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberSipEndpointUpdateRequest'
    delete:
      operationId: SubscriberSipEndpoint_delete
      summary: Delete Subscriber SIP Endpoint
      description: Deletes a Subscriber Sip Endpoint by ID
      parameters:
        - $ref: '#/components/parameters/SIPEndpointID'
        - $ref: '#/components/parameters/FabricSubscriberID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - 'Subscribers: SIP Endpoints'
  /resources/subscribers/{id}:
    get:
      operationId: Subscribers_get
      summary: Get Subscriber
      parameters:
        - $ref: '#/components/parameters/SubscriberPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - Subscribers
    put:
      operationId: Subscribers_update
      summary: Update Subscriber
      parameters:
        - $ref: '#/components/parameters/SubscriberPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberUpdateStatusCode422'
      tags:
        - Subscribers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberRequest'
    delete:
      operationId: Subscribers_delete
      summary: Delete Subscriber
      parameters:
        - $ref: '#/components/parameters/SubscriberPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - Subscribers
  /resources/subscribers/{id}/addresses:
    get:
      operationId: SubscriberAddresses_list
      summary: List Subscriber Addresses
      parameters:
        - $ref: '#/components/parameters/SubscriberAddressID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriberAddressesResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - Subscribers
  /subscriber/invites:
    post:
      operationId: InviteTokens_create
      summary: Create a Subscriber Invite Token
      description: Creates a Subscriber Invite Token to be used for client-side API calls. The token is authorized using a subscriber's SAT (Subscriber Access Token)
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberInviteTokenCreateResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteTokenCreateStatusCode422'
      tags:
        - 'Subscribers: Tokens'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberInviteTokenCreateRequest'
  /subscribers/tokens:
    post:
      operationId: SubscriberTokens_create
      summary: Create Subscriber Token
      description: Create a Subscriber Token
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberTokenResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberTokenStatusCode422'
      tags:
        - 'Subscribers: Tokens'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberTokenRequest'
security:
  - BasicAuth: []
components:
  parameters:
    AIAgentIDPath:
      name: ai_agent_id
      in: path
      required: true
      description: Unique ID of a AI Agent.
      schema:
        $ref: '#/components/schemas/uuid'
    AIAgentPathID:
      name: id
      in: path
      required: true
      description: Unique ID of an AI Agent.
      schema:
        $ref: '#/components/schemas/uuid'
    ExternalLAMLHandlerID:
      name: id
      in: path
      required: true
      description: Unique ID of a External LAML Handler.
      schema:
        $ref: '#/components/schemas/uuid'
    ExternalLAMLHandlerIDPath:
      name: external_laml_handler_id
      in: path
      required: true
      description: Unique ID of a External LAML Handler.
      schema:
        $ref: '#/components/schemas/uuid'
    ExternalSWMLHandlerID:
      name: id
      in: path
      required: true
      description: Unique ID of a External SWML Handler.
      schema:
        $ref: '#/components/schemas/uuid'
    ExternalSWMLHandlerIDPath:
      name: external_swml_handler_id
      in: path
      required: true
      description: Unique ID of a External SWML Handler.
      schema:
        $ref: '#/components/schemas/uuid'
    FabricAddressID:
      name: id
      in: path
      required: true
      description: Unique ID of a FabricAddress.
      schema:
        $ref: '#/components/schemas/uuid'
    FabricSubscriberID:
      name: fabric_subscriber_id
      in: path
      required: true
      description: Unique ID of a Fabric Subscriber.
      schema:
        $ref: '#/components/schemas/uuid'
    SIPEndpointID:
      name: id
      in: path
      required: true
      description: Unique ID of a Sip Endpoint.
      schema:
        $ref: '#/components/schemas/uuid'
    SubscriberAddressID:
      name: id
      in: path
      required: true
      description: Unique ID of a Subscriber Address.
      schema:
        $ref: '#/components/schemas/uuid'
    SubscriberPathID:
      name: id
      in: path
      required: true
      description: Unique ID of a Subscriber.
      schema:
        $ref: '#/components/schemas/uuid'
  schemas:
    AIAgentAddress:
      type: object
      required:
        - id
        - resource_id
        - name
        - display_name
        - type
        - cover_url
        - preview_url
        - channel
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: 691af061-cd86-4893-a605-173f47afc4c2
          description: Unique ID of the Fabric Address.
        resource_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: 691af061-cd86-4893-a605-173f47afc4c2
          description: Fabric resource ID that the Fabric Address belongs to.
        name:
          type: string
          example: justice-league
          description: Name of the Fabric Address.
        display_name:
          type: string
          example: Justice League
          description: Display name of the Fabric Address.
        type:
          allOf:
            - $ref: '#/components/schemas/DisplayTypes'
          example: app
          description: Type of the Fabric Address.
        cover_url:
          type: string
          example: https://coverurl.com
          description: Cover url of the Fabric Address.
        preview_url:
          type: string
          example: https://previewurl.com
          description: Preview url of the Fabric Address.
        channel:
          allOf:
            - $ref: '#/components/schemas/AddressChannel'
          description: Channels of the Fabric Address.
    AIAgentAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AIAgentAddress'
        links:
          $ref: '#/components/schemas/AIAgentAddressPaginationResponse'
    AIAgentAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/ai_agents/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
          description: Link of the current page
        first:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/ai_agents/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
          description: Link to the first page
        next:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/ai_agents/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
          description: Link to the next page
    AIAgentCreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: My AI Agent
          description: Name of the AI Agent.
        prompt:
          allOf:
            - $ref: '#/components/schemas/AIPrompt'
          description: Establishes the initial set of instructions and settings to configure the agent.
        post_prompt:
          allOf:
            - $ref: '#/components/schemas/AIPostPrompt'
          description: The final set of instructions and configuration settings to send to the agent.
        params:
          allOf:
            - $ref: '#/components/schemas/AIParams'
          description: A JSON object containing parameters as key-value pairs.
        pronounce:
          type: array
          items:
            $ref: '#/components/schemas/Pronounce'
          description: An array of JSON objects to clarify the AI's pronunciation of words or expressions.
        hints:
          type: array
          items:
            type: string
          example:
            - One Hint
            - Two Hint
          description: An array of hints (as strings) to provide context to the dialogue.
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Languages'
          description: An array of JSON objects defining supported languages in the conversation.
        SWAIG:
          allOf:
            - $ref: '#/components/schemas/SWAIG'
          description: A JSON object to create user-defined functions/endpoints that can be executed during the dialogue.
    AIAgentCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: Name can't be blank
            attribute: name
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    AIAgentListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AIAgentResponse'
        links:
          $ref: '#/components/schemas/AIAgentPaginationResponse'
    AIAgentPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/ai_agents?page_number=0&page_size=50
          description: Link of the current page
        first:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/ai_agents?page_number=0&page_size=50
          description: Link to the first page
        next:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/ai_agents?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
          description: Link to the next page
    AIAgentResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - ai_agent
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: a87db7ed-8ebe-42e4-829f-8ba5a4152f54
          description: Unique ID of the AIAgent.
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: 99151cf8-9548-4860-ba70-a8de824f3312
          description: Unique ID of the Project.
        display_name:
          type: string
          example: Booking Assistant
          description: Display name of the AIAgent Fabric Resource
        type:
          type: string
          example: external_laml_handler
          description: Type of the Fabric Resource
        created_at:
          type: string
          format: date-time
          example: 2024-10-17T14:14:53Z
          description: Date and time when the resource was created.
        updated_at:
          type: string
          format: date-time
          example: 2024-10-17T14:14:53Z
          description: Date and time when the resource was updated.
        ai_agent:
          allOf:
            - $ref: '#/components/schemas/AIAgentWithID'
          description: AIAgent data.
    AIAgentUpdateRequest:
      type: object
      properties:
        name:
          type: string
          example: My AI Agent
          description: Name of the AI Agent.
        prompt:
          allOf:
            - $ref: '#/components/schemas/AIPromptUpdate'
          description: Establishes the initial set of instructions and settings to configure the agent.
        post_prompt:
          allOf:
            - $ref: '#/components/schemas/AIPostPromptUpdate'
          description: The final set of instructions and configuration settings to send to the agent.
        params:
          allOf:
            - $ref: '#/components/schemas/AIParams'
          description: A JSON object containing parameters as key-value pairs.
        pronounce:
          type: array
          items:
            $ref: '#/components/schemas/Pronounce'
          description: An array of JSON objects to clarify the AI's pronunciation of words or expressions.
        hints:
          type: array
          items:
            type: string
          example:
            - One Hint
            - Two Hint
          description: An array of hints (as strings) to provide context to the dialogue.
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Languages'
          description: An array of JSON objects defining supported languages in the conversation.
        SWAIG:
          allOf:
            - $ref: '#/components/schemas/SWAIG'
          description: A JSON object to create user-defined functions/endpoints that can be executed during the dialogue.
    AIAgentUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: Name can't be blank
            attribute: name
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    AIAgentWithID:
      type: object
      required:
        - agent_id
        - name
      properties:
        agent_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          description: Unique ID of an AI Agent.
        name:
          type: string
          example: My AI Agent
          description: Name of the AI Agent.
        prompt:
          allOf:
            - $ref: '#/components/schemas/AIPrompt'
          description: Establishes the initial set of instructions and settings to configure the agent.
        post_prompt:
          allOf:
            - $ref: '#/components/schemas/AIPostPrompt'
          description: The final set of instructions and configuration settings to send to the agent.
        params:
          allOf:
            - $ref: '#/components/schemas/AIParams'
          description: A JSON object containing parameters as key-value pairs.
        pronounce:
          type: array
          items:
            $ref: '#/components/schemas/Pronounce'
          description: An array of JSON objects to clarify the AI's pronunciation of words or expressions.
        hints:
          type: array
          items:
            type: string
          example:
            - One Hint
            - Two Hint
          description: An array of hints (as strings) to provide context to the dialogue.
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Languages'
          description: An array of JSON objects defining supported languages in the conversation.
        SWAIG:
          allOf:
            - $ref: '#/components/schemas/SWAIG'
          description: A JSON object to create user-defined functions/endpoints that can be executed during the dialogue.
    AIParams:
      type: object
      properties:
        acknowledge_interruptions:
          type: boolean
          description: Instructs the agent to acknowledge crosstalk and confirm user input when the user speaks over the agent.
        ai_volume:
          type: integer
          minimum: -50
          maximum: 50
          description: Adjust the volume of the AI. Allowed values from `-50` - `50`.
        attention_timeout:
          anyOf:
            - type: integer
            - type: number
              enum:
                - 0
          minimum: 10000
          maximum: 600000
          description: Amount of time, in ms, to wait before prompting the user to respond. Allowed values from `10,000` - `600,000`. Set to `0` to disable.
        attention_timeout_prompt:
          type: string
          example: Ask if the user would like you to repeat yourself, or if they need more time to respond.
          description: A custom prompt that is fed into the AI when the attention_timeout is reached.
        background_file:
          type: string
          format: uri
          example: https://cdn.signalwire.com/default-music/welcome.mp3
          description: URL of audio file to play in the background while AI plays in foreground.
        background_file_loops:
          type: integer
          nullable: true
          example: 5
          description: Maximum number of times to loop playing the background file. `undefined` means loop indefinitely.
        background_file_volume:
          type: integer
          minimum: -50
          maximum: 50
          description: Defines background_file volume within a range of `-50` to `50`.
        barge_match_string:
          type: string
          example: Cancel order
          description: |-
            Takes a string, including a regular expression, defining barge behavior.
            For example, this param can direct the AI to stop when the word 'hippopotomus' is input.
        barge_min_words:
          type: integer
          minimum: 1
          maximum: 99
          description: Defines the number of words that must be input before triggering barge behavior, in a range of `1-99`.
        conscience:
          type: string
          example: Place an order
          description: Sets the prompt which binds the agent to its purpose.
        conversation_id:
          type: string
          example: Conversation ID
          description: Used by `check_for_input` and `save_conversation` to identify an individual conversation.
        debug_webhook_level:
          type: integer
          minimum: 0
          maximum: 1
          description: Enables debugging to the set URL. Allowed values from `0` - `1`.
        debug_webhook_url:
          type: string
          format: uri
          example: https://example.com
          description: Each interaction between the AI and end user is posted in real time to the established URL.
        direction:
          type: array
          items:
            $ref: '#/components/schemas/Direction'
          description: Forces the direction of the call to the assistant. Valid values are `inbound` and `outbound`.
        digit_termiantors:
          type: string
          example: '#'
          description: "DTMF digit, as a string, to signal the end of input (ex: '#')"
        digit_timeout:
          type: integer
          minimum: 250
          maximum: 10000
          description: Time, in ms, at the end of digit input to detect end of input. Allowed values from `250` - `10,000`.
        end_of_speech_timeout:
          type: integer
          minimum: 250
          maximum: 10000
          description: Amount of silence, in ms, at the end of an utterance to detect end of speech. Allowed values from `250` - `10,000`.
        eleven_labs_stability:
          type: number
          description: The stability slider determines how stable the voice is and the randomness between each generation. Lowering this slider introduces a broader emotional range for the voice.
        eleven_labs_similarity:
          type: number
          description: The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it. The higher the similarity, the closer the AI will sound to the original voice.
        energy_level:
          type: number
          minimum: 0
          maximum: 100
          description: Amount of energy necessary for bot to hear you (in dB). Allowed values from `0.0` - `100.0`.
        hold_music:
          type: string
          format: uri
          example: https://cdn.signalwire.com/default-music/welcome.mp3
          description: A URL for the hold music to play, accepting WAV, mp3, and FreeSWITCH tone_stream.
        hold_on_process:
          type: boolean
          description: Enables hold music during SWAIG processing.
        inactivity_timeout:
          type: integer
          minimum: 10000
          maximum: 3600000
          description: Amount of time, in ms, to wait before exiting the app due to inactivity. Allowed values from `10,000` - `3,600,000`.
        input_poll_freq:
          type: string
          description: |-
            Check for input function with check_for_input.
            Example use case: Feeding an inbound SMS to AI on a voice call, eg., for collecting an email address or other complex information.
        interrupt_on_noise:
          type: boolean
          description: When enabled, barges agent upon any sound interruption longer than 1 second.
        interrupt_prompt:
          type: string
          example: Inform user that you can't hear anything
          description: Provide a prompt for the agent to handle crosstalk.
        languages_enabled:
          type: boolean
          description: Allows multilingualism when `true`.
        local_tz:
          type: string
          example: America/Ensenada
          description: The local timezone setting for the AI. Value should use `IANA TZ ID`
        outbound_attention_timeout:
          type: integer
          minimum: 10000
          maximum: 600000
          description: Sets a time duration for the outbound call recipient to respond to the AI agent before timeout, in a range from `10000` to `600000`.
        save_conversation:
          type: boolean
          description: |-
            Send a summary of the conversation after the call ends.
            This requires a `post_url` to be set in the ai parameters and the `conversation_id` defined below.
            This eliminates the need for a `post_prompt` in the ai parameters.
        swaig_allow_settings:
          type: boolean
          description: Allows tweaking any of the indicated settings, such as `barge_match_string`, using the returned SWML from the SWAIG function.
        swaig_allow_swml:
          type: boolean
          description: Allows your SWAIG to return SWML to be executed.
        swaig_post_conversation:
          type: boolean
          description: Post entire conversation to any SWAIG call.
        transfer_summary:
          type: boolean
          description: Pass a summary of a conversation from one AI agent to another. For example, transfer a call summary between support agents in two departments.
        verbose_logs:
          type: boolean
          description: Enable verbose logging.
        wait_for_user:
          type: boolean
          description: When false, AI agent will initialize dialogue after call is setup. When true, agent will wait for the user to speak first.
      title: params object
    AIPostPrompt:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          example: Your name is Franklin and you are taking orders for Franklin's Pizza. Begin by greeting the caller, and ask if they'd like to place an order for pickup or delivery.
          description: The instructions to send to the agent.
        temperature:
          type: number
          minimum: 0
          maximum: 1.5
          description: Randomness setting. Float value between 0.0 and 1.5. Closer to 0 will make the output less random.
        top_p:
          type: number
          minimum: 0
          maximum: 1
          description: Randomness setting. Alternative to `temperature`. Float value between 0.0 and 1.0. Closer to 0 will make the output less random.
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: |-
            Threshold to fire a speech-detect event at the end of the utterance. Float value between 0.0 and 1.0.
            Decreasing this value will reduce the pause after the user speaks, but may introduce false positives.
        presence_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics.
        frequency_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to repeating lines. Float value between -2.0 and 2.0. Positive values decrease the model's likelihood to repeat the same line verbatim.
      title: post_prompt
    AIPostPromptUpdate:
      type: object
      properties:
        text:
          type: string
          example: Your name is Franklin and you are taking orders for Franklin's Pizza. Begin by greeting the caller, and ask if they'd like to place an order for pickup or delivery.
          description: The instructions to send to the agent.
        temperature:
          type: number
          minimum: 0
          maximum: 1.5
          description: Randomness setting. Float value between 0.0 and 1.5. Closer to 0 will make the output less random.
        top_p:
          type: number
          minimum: 0
          maximum: 1
          description: Randomness setting. Alternative to `temperature`. Float value between 0.0 and 1.0. Closer to 0 will make the output less random.
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: |-
            Threshold to fire a speech-detect event at the end of the utterance. Float value between 0.0 and 1.0.
            Decreasing this value will reduce the pause after the user speaks, but may introduce false positives.
        presence_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics.
        frequency_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to repeating lines. Float value between -2.0 and 2.0. Positive values decrease the model's likelihood to repeat the same line verbatim.
      title: post_prompt
    AIPrompt:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          example: Your name is Franklin and you are taking orders for Franklin's Pizza. Begin by greeting the caller, and ask if they'd like to place an order for pickup or delivery.
          description: The instructions to send to the agent.
        temperature:
          type: number
          minimum: 0
          maximum: 1.5
          description: Randomness setting. Float value between 0.0 and 1.5. Closer to 0 will make the output less random.
        top_p:
          type: number
          minimum: 0
          maximum: 1
          description: Randomness setting. Alternative to `temperature`. Float value between 0.0 and 1.0. Closer to 0 will make the output less random.
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: |-
            Threshold to fire a speech-detect event at the end of the utterance. Float value between 0.0 and 1.0.
            Decreasing this value will reduce the pause after the user speaks, but may introduce false positives.
        presence_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics.
        frequency_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to repeating lines. Float value between -2.0 and 2.0. Positive values decrease the model's likelihood to repeat the same line verbatim.
        contexts:
          allOf:
            - $ref: '#/components/schemas/Contexts'
          description: |-
            An object that defines the context steps for the AI. The context steps are used to define the flow of the conversation.
            Every context object requires a `default` key, which is the default context to use at the beginning of the conversation.
            Additionally, more context steps can be defined as any other key in the object.
      title: prompt
    AIPromptUpdate:
      type: object
      properties:
        text:
          type: string
          example: Your name is Franklin and you are taking orders for Franklin's Pizza. Begin by greeting the caller, and ask if they'd like to place an order for pickup or delivery.
          description: The instructions to send to the agent.
        temperature:
          type: number
          minimum: 0
          maximum: 1.5
          description: Randomness setting. Float value between 0.0 and 1.5. Closer to 0 will make the output less random.
        top_p:
          type: number
          minimum: 0
          maximum: 1
          description: Randomness setting. Alternative to `temperature`. Float value between 0.0 and 1.0. Closer to 0 will make the output less random.
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: |-
            Threshold to fire a speech-detect event at the end of the utterance. Float value between 0.0 and 1.0.
            Decreasing this value will reduce the pause after the user speaks, but may introduce false positives.
        presence_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics.
        frequency_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to repeating lines. Float value between -2.0 and 2.0. Positive values decrease the model's likelihood to repeat the same line verbatim.
        contexts:
          allOf:
            - $ref: '#/components/schemas/ContextsUpdate'
          description: |-
            An object that defines the context steps for the AI. The context steps are used to define the flow of the conversation.
            Every context object requires a `default` key, which is the default context to use at the beginning of the conversation.
            Additionally, more context steps can be defined as any other key in the object.
      title: prompt
    Action:
      anyOf:
        - $ref: '#/components/schemas/ContextSwitchAction'
        - $ref: '#/components/schemas/PlaybackBGAction'
        - $ref: '#/components/schemas/SayAction'
        - $ref: '#/components/schemas/SetGlobalDataAction'
        - $ref: '#/components/schemas/SetMetaDataAction'
        - $ref: '#/components/schemas/StopAction'
        - $ref: '#/components/schemas/StopPlaybackBGAction'
        - $ref: '#/components/schemas/ToggleFunctionsAction'
        - $ref: '#/components/schemas/UnsetGlobalDataAction'
        - $ref: '#/components/schemas/UnsetMetaDataAction'
        - $ref: '#/components/schemas/UserInputAction'
      title: Action union
    AddressChannel:
      anyOf:
        - $ref: '#/components/schemas/AudioChannel'
        - $ref: '#/components/schemas/MessagingChannel'
        - $ref: '#/components/schemas/VideoChannel'
    AllOfProperty:
      type: object
      required:
        - allOf
      properties:
        allOf:
          type: array
          items:
            $ref: '#/components/schemas/SchemaType'
          description: An array of schemas where all of the schemas must be valid.
      title: allOf Property
    AnyOfProperty:
      type: object
      required:
        - anyOf
      properties:
        anyOf:
          type: array
          items:
            $ref: '#/components/schemas/SchemaType'
          description: An array of schemas where at least one of the schemas must be valid.
      title: anyOf Property
    ArrayProperty:
      type: object
      required:
        - type
        - items
      properties:
        description:
          type: string
          example: Property description
          description: A description of the property.
        nullable:
          type: boolean
          description: Whether the property can be null.
        type:
          type: string
          enum:
            - array
          description: The type of parameter(s) the AI is passing to the function.
        default:
          type: array
          items: {}
          description: The default array value
        items:
          allOf:
            - $ref: '#/components/schemas/SchemaType'
          description: Schema for array items
      description: Base interface for all property types
      title: Array Function Property
    AudioChannel:
      type: object
      required:
        - audio
      properties:
        audio:
          type: string
          example: /external/resource_name?channel=audio
          description: Audio Channel of Fabric Address
    BooleanProperty:
      type: object
      required:
        - type
      properties:
        description:
          type: string
          example: Property description
          description: A description of the property.
        nullable:
          type: boolean
          description: Whether the property can be null.
        type:
          type: string
          enum:
            - boolean
          description: The type of parameter(s) the AI is passing to the function.
        default:
          type: boolean
          description: The default boolean value
      description: Base interface for all property types
      title: Boolean Function Property
    CallHandlerPassthroughType:
      type: string
      enum:
        - default
        - passthrough
        - block-pstn
      description: Call handler of the Sip Endpoint.
    CallHandlerType:
      type: string
      enum:
        - default
        - passthrough
        - block-pstn
        - relay_script
        - laml_webhook
        - laml_application
        - dialogflow
        - relay_context
        - relay_connector
        - video_room
        - ai_agent
        - call_flow
      description: Call handler of the Sip Endpoint.
    CipherType:
      type: string
      enum:
        - AEAD_AES_256_GCM_8
        - AES_256_CM_HMAC_SHA1_80
        - AES_CM_128_HMAC_SHA1_80
        - AES_256_CM_HMAC_SHA1_32
        - AES_CM_128_HMAC_SHA1_32
      description: Ciphers
    CodecType:
      type: string
      enum:
        - OPUS
        - G722
        - PCMU
        - PCMA
        - G729
        - VP8
        - H264
      description: Codecs
    ConstProperty:
      type: object
      required:
        - const
      properties:
        const:
          description: A constant value that can be passed to the function.
      title: Const Property
    ContextSteps:
      type: object
      required:
        - steps
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/ContextStepsParams'
          description: An array of objects that define the steps in the context. These steps are used to define the flow of the conversation.
          title: steps
      title: ContextSteps object
    ContextStepsEnd:
      type: object
      required:
        - name
        - text
      properties:
        name:
          type: string
          example: Take Pizza order
          description: The name of the step. The name must be unique within the context. The name is used for referencing the step in the context.
        text:
          type: string
          example: Your name is Franklin and you are taking orders for Franklin's Pizza.
          description: The prompt or instructions given to the AI at this step.
        step_criteria:
          type: string
          example: Customer wants to order Pizza
          description: |-
            The conditions that must be met for the conversation to proceed to the next step.
            If a condition is not met, the conversation will not proceed to the next step.
            It's **highly** recommended you create a custom criteria for the step to get the intended behavior.
        functions:
          type: array
          items:
            type: string
          example:
            - Take Order
            - Confirm Order
            - Confirm Address
          description: An array of SWAIG.functions that can be executed from this step.
        valid_contexts:
          type: array
          items:
            type: string
          example:
            - Place Order
            - Confirm Order
          description: An array of valid contexts that the conversation can transition to from this step.
        skip_user_turn:
          type: boolean
          description: A boolean value that, when true, will skip the user's turn to respond in the conversation and proceed to the next step.
        end:
          type: boolean
          description: A boolean value that, when true, will end the contexts conversation and transition to a normal interaction.
      title: ContextStepsEnd object
    ContextStepsParams:
      anyOf:
        - $ref: '#/components/schemas/ContextStepsEnd'
        - $ref: '#/components/schemas/ContextStepsValidSteps'
      title: ContextStepsParams union
    ContextStepsUpdate:
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/ContextStepsParams'
          description: An array of objects that define the steps in the context. These steps are used to define the flow of the conversation.
          title: steps
      title: ContextSteps object
    ContextStepsValidSteps:
      type: object
      required:
        - name
        - text
      properties:
        name:
          type: string
          example: Take Pizza order
          description: The name of the step. The name must be unique within the context. The name is used for referencing the step in the context.
        text:
          type: string
          example: Your name is Franklin and you are taking orders for Franklin's Pizza.
          description: The prompt or instructions given to the AI at this step.
        step_criteria:
          type: string
          example: Customer wants to order Pizza
          description: |-
            The conditions that must be met for the conversation to proceed to the next step.
            If a condition is not met, the conversation will not proceed to the next step.
            It's **highly** recommended you create a custom criteria for the step to get the intended behavior.
        functions:
          type: array
          items:
            type: string
          example:
            - Take Order
            - Confirm Order
            - Confirm Address
          description: An array of SWAIG.functions that can be executed from this step.
        valid_contexts:
          type: array
          items:
            type: string
          example:
            - Place Order
            - Confirm Order
          description: An array of valid contexts that the conversation can transition to from this step.
        skip_user_turn:
          type: boolean
          description: A boolean value that, when true, will skip the user's turn to respond in the conversation and proceed to the next step.
        valid_steps:
          type: array
          items:
            type: string
          example:
            - get order
            - confirm order
          description: |-
            An array of valid steps that the conversation can proceed to from this step.
            If the array is empty, or the `valid_steps` key is not present, the conversation will proceed to the next step in the context.
      title: ContextStepsValidSteps object
    ContextSwitchAction:
      type: object
      required:
        - context_switch
      properties:
        context_switch:
          type: object
          properties:
            system_prompt:
              type: string
              description: The instructions to send to the agent. Default is not set.
            consolidate:
              type: boolean
              description: Whether to consolidate the context. Default is `false`.
            user_prompt:
              type: string
              description: |-
                A string serving as simulated user input for the AI Agent.
                During a context_switch in the AI's prompt, the user_prompt offers the AI pre-established context or guidance.
                Default is not set
          required:
            - system_prompt
          description: A JSON object containing the context to switch to. Default is not set.
          title: context_switch
      title: ContextSwitchAction object
    Contexts:
      type: object
      required:
        - default
      properties:
        default:
          allOf:
            - $ref: '#/components/schemas/ContextSteps'
          description: The default context to use at the beginning of the conversation. Additional context steps can be defined as any other key in the object.
      additionalProperties:
        $ref: '#/components/schemas/ContextSteps'
      title: contexts
    ContextsUpdate:
      type: object
      properties:
        default:
          allOf:
            - $ref: '#/components/schemas/ContextStepsUpdate'
          description: The default context to use at the beginning of the conversation. Additional context steps can be defined as any other key in the object.
      additionalProperties:
        $ref: '#/components/schemas/ContextStepsUpdate'
      title: contexts
    DataMap:
      oneOf:
        - $ref: '#/components/schemas/Output'
        - $ref: '#/components/schemas/Expression'
        - $ref: '#/components/schemas/Webhook'
      title: DataMap union
    Direction:
      type: string
      enum:
        - inbound
        - outbound
      title: Direction enum
    DisplayTypes:
      type: string
      enum:
        - app
        - room
        - call
        - subscriber
      description: DisplayTypes
    EmbedsTokensRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          example: c2c_7acc0e5e968706a032983cd80cdca219
          description: Click to Call Token
    EmbedsTokensResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          example: eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiY2giOiJwdWMubHZoLm1lIiwidHlwIjoiU0FUIn0..
          description: Encrypted guest token.
    EncryptionType:
      type: string
      enum:
        - default
        - required
        - optional
      description: Encryption
    Expression:
      type: object
      required:
        - expressions
      properties:
        expressions:
          type: array
          items:
            type: object
            properties:
              string:
                type: string
                example: I want a refund
                description: The actual input or value from the user or system.
              pattern:
                type: string
                description: A regular expression pattern to validate or match the string.
              output:
                type: object
                properties:
                  response:
                    type: string
                    example: Order placed
                    description: A static response text or message returned to the AI agents context.
                  action:
                    type: array
                    items:
                      $ref: '#/components/schemas/Action'
                    description: A list of actions to be performed upon matching.
                required:
                  - response
                description: An object that defines the `response` or `action` to be taken when the webhook is successfully triggered.
                title: output
            required:
              - string
              - pattern
              - output
          description: An array of objects that define patterns and corresponding actions.
          title: expressions
      title: Expression object
    ExternalLAMLHandler:
      type: object
      required:
        - id
        - name
        - used_for
        - primary_request_url
        - primary_request_method
        - fallback_request_url
        - fallback_request_method
        - status_callback_url
        - status_callback_method
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: a87db7ed-8ebe-42e4-829f-8ba5a4152f54
          description: Unique ID of the External LAML Handler.
        name:
          type: string
          example: My External LAML Handler
          description: Name of the External LAML Handler.
        used_for:
          allOf:
            - $ref: '#/components/schemas/UsedForType'
          example: calling
          description: Used for of the External LAML Handler.
        primary_request_url:
          type: string
          example: https://primary.com
          description: Primary request url of the External LAML Handler.
        primary_request_method:
          allOf:
            - $ref: '#/components/schemas/UrlMethodType'
          example: GET
          description: Primary request method of the External LAML Handler.
        fallback_request_url:
          type: string
          example: https://fallback.com
          description: Fallback request url of the External LAML Handler.
        fallback_request_method:
          allOf:
            - $ref: '#/components/schemas/UrlMethodType'
          example: GET
          description: Fallback request method of the External LAML Handler.
        status_callback_url:
          type: string
          example: https://callback.com
          description: Status callback url of the External LAML Handler.
        status_callback_method:
          allOf:
            - $ref: '#/components/schemas/UrlMethodType'
          example: POST
          description: Status callback method of the External LAML Handler.
    ExternalLAMLHandlerAddress:
      type: object
      required:
        - id
        - resource_id
        - name
        - display_name
        - type
        - cover_url
        - preview_url
        - channel
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: 691af061-cd86-4893-a605-173f47afc4c2
          description: Unique ID of the Fabric Address.
        resource_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: 691af061-cd86-4893-a605-173f47afc4c2
          description: Fabric resource ID that the Fabric Address belongs to.
        name:
          type: string
          example: justice-league
          description: Name of the Fabric Address.
        display_name:
          type: string
          example: Justice League
          description: Display name of the Fabric Address.
        type:
          allOf:
            - $ref: '#/components/schemas/DisplayTypes'
          example: app
          description: Type of the Fabric Address.
        cover_url:
          type: string
          example: https://coverurl.com
          description: Cover url of the Fabric Address.
        preview_url:
          type: string
          example: https://previewurl.com
          description: Preview url of the Fabric Address.
        channel:
          allOf:
            - $ref: '#/components/schemas/AddressChannel'
          description: Channels of the Fabric Address.
    ExternalLAMLHandlerAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExternalLAMLHandlerAddress'
        links:
          $ref: '#/components/schemas/ExternalLAMLHandlerAddressPaginationResponse'
    ExternalLAMLHandlerAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_laml_handlers/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
          description: Link of the current page
        first:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_laml_handlers/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
          description: Link to the first page
        next:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_laml_handlers/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
          description: Link to the next page
    ExternalLAMLHandlerCreateRequest:
      type: object
      required:
        - primary_request_url
      properties:
        name:
          type: string
          example: My External LAML Handler
          description: Name of the External LAML Handler.
        used_for:
          type: string
          enum:
            - calling
            - messaging
          example: calling
          description: Used for of the External LAML Handler.
          default: calling
        primary_request_url:
          type: string
          example: https://primary.com
          description: Primary request url of the External LAML Handler.
        primary_request_method:
          type: string
          enum:
            - GET
            - POST
          example: GET
          description: Primary request method of the External LAML Handler.
          default: POST
        fallback_request_url:
          type: string
          example: https://fallback.com
          description: Fallback request url of the External LAML Handler.
        fallback_request_method:
          type: string
          enum:
            - GET
            - POST
          example: GET
          description: Fallback request method of the External LAML Handler.
          default: POST
        status_callback_url:
          type: string
          example: https://callback.com
          description: Status callback url of the External LAML Handler.
        status_callback_method:
          type: string
          enum:
            - GET
            - POST
          example: POST
          description: Status callback method of the External LAML Handler.
          default: POST
    ExternalLAMLHandlerListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExternalLAMLHandlerResponse'
        links:
          $ref: '#/components/schemas/ExternalLAMLHandlerPaginationResponse'
    ExternalLAMLHandlerPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_laml_handlers?page_number=0&page_size=50
          description: Link of the current page
        first:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_laml_handlers?page_number=0&page_size=50
          description: Link to the first page
        next:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_laml_handlers?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
          description: Link to the next page
    ExternalLAMLHandlerResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - external_laml_handler
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: a87db7ed-8ebe-42e4-829f-8ba5a4152f54
          description: Unique ID of the ExternalLAMLHandler.
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: 99151cf8-9548-4860-ba70-a8de824f3312
          description: Unique ID of the Project.
        display_name:
          type: string
          example: Booking Assistant
          description: Display name of the ExternalLAMLHandler Fabric Resource
        type:
          type: string
          example: external_laml_handler
          description: Type of the Fabric Resource
        created_at:
          type: string
          format: date-time
          example: 2024-10-17T14:14:53Z
          description: Date and time when the resource was created.
        updated_at:
          type: string
          format: date-time
          example: 2024-10-17T14:14:53Z
          description: Date and time when the resource was updated.
        external_laml_handler:
          allOf:
            - $ref: '#/components/schemas/ExternalLAMLHandler'
          description: ExternalLAMLHandler data.
    ExternalLAMLHandlerUpdateRequest:
      type: object
      properties:
        name:
          type: string
          example: My External LAML Handler
          description: Name of the External LAML Handler.
        used_for:
          type: string
          enum:
            - calling
            - messaging
          example: calling
          description: Used for of the External LAML Handler.
          default: calling
        primary_request_url:
          type: string
          example: https://primary.com
          description: Primary request url of the External LAML Handler.
        primary_request_method:
          type: string
          enum:
            - GET
            - POST
          example: GET
          description: Primary request method of the External LAML Handler.
          default: POST
        fallback_request_url:
          type: string
          example: https://fallback.com
          description: Fallback request url of the External LAML Handler.
        fallback_request_method:
          type: string
          enum:
            - GET
            - POST
          example: GET
          description: Fallback request method of the External LAML Handler.
          default: POST
        status_callback_url:
          type: string
          example: https://callback.com
          description: Status callback url of the External LAML Handler.
        status_callback_method:
          type: string
          enum:
            - GET
            - POST
          example: POST
          description: Status callback method of the External LAML Handler.
          default: POST
    ExternalLamlHandlerCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: http_url_required
            message: This value must be an HTTP or HTTPS URL.
            attribute: status_callback_url
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#http_url_required
    ExternalLamlHandlerUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: http_url_required
            message: This value must be an HTTP or HTTPS URL.
            attribute: status_callback_url
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#http_url_required
    ExternalSWMLHandler:
      type: object
      required:
        - id
        - name
        - used_for
        - primary_request_url
        - primary_request_method
        - fallback_request_url
        - fallback_request_method
        - status_callback_url
        - status_callback_method
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: a87db7ed-8ebe-42e4-829f-8ba5a4152f54
          description: Unique ID of the External SWML Handler.
        name:
          type: string
          example: My External SWML Handler
          description: Name of the External SWML Handler.
        used_for:
          type: string
          enum:
            - calling
          example: calling
          description: Used for of the External SWML Handler.
        primary_request_url:
          type: string
          example: https://primary.com
          description: Primary request url of the External SWML Handler.
        primary_request_method:
          allOf:
            - $ref: '#/components/schemas/UrlMethodType'
          example: GET
          description: Primary request method of the External SWML Handler.
        fallback_request_url:
          type: string
          example: https://fallback.com
          description: Fallback request url of the External SWML Handler.
        fallback_request_method:
          allOf:
            - $ref: '#/components/schemas/UrlMethodType'
          example: GET
          description: Fallback request method of the External SWML Handler.
        status_callback_url:
          type: string
          example: https://callback.com
          description: Status callback url of the External SWML Handler.
        status_callback_method:
          allOf:
            - $ref: '#/components/schemas/UrlMethodType'
          example: POST
          description: Status callback method of the External SWML Handler.
    ExternalSWMLHandlerAddress:
      type: object
      required:
        - id
        - resource_id
        - name
        - display_name
        - type
        - cover_url
        - preview_url
        - channel
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: 691af061-cd86-4893-a605-173f47afc4c2
          description: Unique ID of the Fabric Address.
        resource_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: 691af061-cd86-4893-a605-173f47afc4c2
          description: Fabric resource ID that the Fabric Address belongs to.
        name:
          type: string
          example: justice-league
          description: Name of the Fabric Address.
        display_name:
          type: string
          example: Justice League
          description: Display name of the Fabric Address.
        type:
          allOf:
            - $ref: '#/components/schemas/DisplayTypes'
          example: app
          description: Type of the Fabric Address.
        cover_url:
          type: string
          example: https://coverurl.com
          description: Cover url of the Fabric Address.
        preview_url:
          type: string
          example: https://previewurl.com
          description: Preview url of the Fabric Address.
        channel:
          allOf:
            - $ref: '#/components/schemas/AddressChannel'
          description: Channels of the Fabric Address.
    ExternalSWMLHandlerAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExternalSWMLHandlerAddress'
        links:
          $ref: '#/components/schemas/ExternalSWMLHandlerAddressPaginationResponse'
    ExternalSWMLHandlerAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_swml_handlers/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
          description: Link of the current page
        first:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_swml_handlers/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
          description: Link to the first page
        next:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_swml_handlers/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
          description: Link to the next page
    ExternalSWMLHandlerCreateRequest:
      type: object
      required:
        - primary_request_url
      properties:
        name:
          type: string
          example: My External SWML Handler
          description: Name of the External SWML Handler.
        used_for:
          type: string
          enum:
            - calling
          example: calling
          description: Used for of the External SWML Handler.
          default: calling
        primary_request_url:
          type: string
          example: https://primary.com
          description: Primary request url of the External SWML Handler.
        primary_request_method:
          type: string
          enum:
            - GET
            - POST
          example: GET
          description: Primary request method of the External SWML Handler.
          default: POST
        fallback_request_url:
          type: string
          example: https://fallback.com
          description: Fallback request url of the External SWML Handler.
        fallback_request_method:
          type: string
          enum:
            - GET
            - POST
          example: GET
          description: Fallback request method of the External SWML Handler.
          default: POST
        status_callback_url:
          type: string
          example: https://callback.com
          description: Status callback url of the External SWML Handler.
        status_callback_method:
          type: string
          enum:
            - GET
            - POST
          example: POST
          description: Status callback method of the External SWML Handler.
          default: POST
    ExternalSWMLHandlerListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExternalSWMLHandlerResponse'
        links:
          $ref: '#/components/schemas/ExternalSWMLHandlerPaginationResponse'
    ExternalSWMLHandlerPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_swml_handlers?page_number=0&page_size=50
          description: Link of the current page
        first:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_swml_handlers?page_number=0&page_size=50
          description: Link to the first page
        next:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_swml_handlers?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
          description: Link to the next page
    ExternalSWMLHandlerResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - external_swml_handler
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: a87db7ed-8ebe-42e4-829f-8ba5a4152f54
          description: Unique ID of the External SWML Handler.
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: 99151cf8-9548-4860-ba70-a8de824f3312
          description: Unique ID of the Project.
        display_name:
          type: string
          example: Booking Assistant
          description: Display name of the External SWML Handler Fabric Resource
        type:
          type: string
          example: external_swml_handler
          description: Type of the Fabric Resource
        created_at:
          type: string
          format: date-time
          example: 2024-10-17T14:14:53Z
          description: Date and time when the resource was created.
        updated_at:
          type: string
          format: date-time
          example: 2024-10-17T14:14:53Z
          description: Date and time when the resource was updated.
        external_swml_handler:
          allOf:
            - $ref: '#/components/schemas/ExternalSWMLHandler'
          description: External SWML Handler data.
    ExternalSWMLHandlerUpdateRequest:
      type: object
      properties:
        name:
          type: string
          example: My External SWML Handler
          description: Name of the External SWML Handler.
        used_for:
          type: string
          enum:
            - calling
          example: calling
          description: Used for of the External SWML Handler.
          default: calling
        primary_request_url:
          type: string
          example: https://primary.com
          description: Primary request url of the External SWML Handler.
        primary_request_method:
          type: string
          enum:
            - GET
            - POST
          example: GET
          description: Primary request method of the External SWML Handler.
          default: POST
        fallback_request_url:
          type: string
          example: https://fallback.com
          description: Fallback request url of the External SWML Handler.
        fallback_request_method:
          type: string
          enum:
            - GET
            - POST
          example: GET
          description: Fallback request method of the External SWML Handler.
          default: POST
        status_callback_url:
          type: string
          example: https://callback.com
          description: Status callback url of the External SWML Handler.
        status_callback_method:
          type: string
          enum:
            - GET
            - POST
          example: POST
          description: Status callback method of the External SWML Handler.
          default: POST
    ExternalSwmlHandlerCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: http_url_required
            message: This value must be an HTTP or HTTPS URL.
            attribute: status_callback_url
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#http_url_required
    ExternalSwmlHandlerUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: http_url_required
            message: This value must be an HTTP or HTTPS URL.
            attribute: status_callback_url
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#http_url_required
    FabricAddress:
      type: object
      required:
        - id
        - name
        - display_name
        - type
        - cover_url
        - preview_url
        - locked
        - channel
        - created_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: 691af061-cd86-4893-a605-173f47afc4c2
          description: Unique ID of the Fabric Address.
        name:
          type: string
          example: justice-league
          description: Name of the Fabric Address.
        display_name:
          type: string
          example: Justice League
          description: Display name of the Fabric Address.
        type:
          allOf:
            - $ref: '#/components/schemas/DisplayTypes'
          example: app
          description: Type of the Fabric Address.
        cover_url:
          type: string
          example: https://coverurl.com
          description: Cover url of the Fabric Address.
        preview_url:
          type: string
          example: https://previewurl.com
          description: Preview url of the Fabric Address.
        locked:
          type: boolean
          example: true
          description: Locks the Fabric Address. This is used to prevent the Fabric Address from accepting calls.
        channel:
          allOf:
            - $ref: '#/components/schemas/AddressChannel'
          description: Channels of the Fabric Address.
        created_at:
          type: string
          format: date-time
          example: 2024-05-06T12:20-12Z
          description: Fabric Address Creation Date.
    FabricAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/addresses?page_number=0&page_size=50
          description: Link of the current page
        first:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/addresses?page_number=0&page_size=50
          description: Link to the first page
        next:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
          description: Link to the next page
    FabricAddressesResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddress'
        links:
          $ref: '#/components/schemas/FabricAddressPaginationResponse'
    FunctionParameters:
      type: object
      required:
        - type
        - properties
      properties:
        type:
          type: string
          enum:
            - object
          description: The type of argument the AI is passing to the function. Possible values are 'string' and 'object'.
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SchemaType'
          description: |-
            An object containing the property definitions that are passed to the function.

            A property definition is a valid JSON schema type with dynamic property names, where:
            - Keys: User-defined strings, that set the property names.
            - Values: A valid property type, which can be one of the following: `string`, `integer`, `number`, `boolean`, `array`, `object`, or `null`.
        required:
          type: array
          items:
            type: string
          example:
            - name1
            - name2
          description: An array of required property names from the `properties` object.
    GuestTokenCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: must_belong_to_project
            message: The addresses must belong to the project
            attribute: allowed_addresses
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes#must_belong_to_project
    IntegerProperty:
      type: object
      required:
        - type
      properties:
        description:
          type: string
          example: Property description
          description: A description of the property.
        nullable:
          type: boolean
          description: Whether the property can be null.
        type:
          type: string
          enum:
            - integer
          description: The type of parameter(s) the AI is passing to the function.
        enum:
          type: array
          items:
            type: integer
          example:
            - 1
            - 2
            - 3
          description: An array of integers that are the possible values
        default:
          type: integer
          example: 5
          description: The default integer value
      description: Base interface for all property types
      title: Integer Function Property
    InviteTokenCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter
            message: Address is invalid
            attribute: address_id
            url: https://developer.signalwire.com/rest/overview/error-codes#invalid_parameter
          - type: validation_error
            code: invalid_parameter
            message: Expires At must be an integer
            attribute: expires_at
            url: https://developer.signalwire.com/rest/overview/error-codes#invalid_parameter
          - type: validation_error
            code: invalid_parameter
            message: Expires At must be greater than 1733254773
            attribute: expires_at
            url: https://developer.signalwire.com/rest/overview/error-codes#invalid_parameter
    Languages:
      type: object
      allOf:
        - $ref: '#/components/schemas/LanguagesWithFillers'
      title: languages
    LanguagesWithFillers:
      type: object
      required:
        - name
        - code
        - voice
      properties:
        name:
          type: string
          example: French
          description: Name of the language ('French', 'English', etc).
        code:
          type: string
          example: fr-FR
          description: Language code. For example, 'fr-FR'.
        voice:
          type: string
          example: fr-FR-Neural2-B
          description: Voice to use for the language. For example, 'fr-FR-Neural2-B'.
        function_fillers:
          type: array
          items:
            type: string
          example:
            - great
            - ok
          description: An array of strings to be used as fillers in the conversation when calling a `swaig function`. This helps the AI break silence between responses.
        speech_fillers:
          type: array
          items:
            type: string
          example:
            - umm
            - hmm
          description: An array of strings to be used as fillers in the conversation. This helps the AI break silence between responses.
      title: LanguagesWithFillers
    MessagingChannel:
      type: object
      required:
        - messaging
      properties:
        messaging:
          type: string
          example: /external/resource_name?channel=messaging
          description: Messaging Channel of Fabric Address
    NullProperty:
      type: object
      required:
        - type
        - description
      properties:
        type:
          type: string
          enum:
            - 'null'
          description: The type of parameter(s) the AI is passing to the function.
        description:
          type: string
          example: Property Description
          description: A description of the property.
      title: Null Function Property
    NumberProperty:
      type: object
      required:
        - type
      properties:
        description:
          type: string
          example: Property description
          description: A description of the property.
        nullable:
          type: boolean
          description: Whether the property can be null.
        type:
          type: string
          enum:
            - number
          description: The type of parameter(s) the AI is passing to the function.
        enum:
          type: array
          items:
            anyOf:
              - type: integer
              - type: number
          example:
            - 1
            - 2
            - 3
          description: An array of integers that are the possible values
        default:
          anyOf:
            - type: integer
            - type: number
          example: 3
          description: The default integer value
      description: Base interface for all property types
      title: Number Function Property
    ObjectProperty:
      type: object
      required:
        - type
      properties:
        description:
          type: string
          example: Property description
          description: A description of the property.
        nullable:
          type: boolean
          description: Whether the property can be null.
        type:
          type: string
          enum:
            - object
          description: The type of parameter(s) the AI is passing to the function.
        default:
          type: object
          additionalProperties: {}
          description: The default object value
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SchemaType'
          description: Nested properties
        required:
          type: array
          items:
            type: string
          example:
            - name1
            - name2
          description: Required property names
      description: Base interface for all property types
      title: Object Function Property
    OneOfProperty:
      type: object
      required:
        - oneOf
      properties:
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/SchemaType'
          description: An array of schemas where exactly one of the schemas must be valid.
      title: oneOf Property
    Output:
      type: object
      required:
        - output
      properties:
        output:
          type: object
          properties:
            response:
              type: string
              example: Order placed
              description: A static response text or message returned to the AI agents context.
            action:
              type: array
              items:
                $ref: '#/components/schemas/Action'
              description: A list of actions to be performed upon matching.
          required:
            - response
          description: An object that defines the `response` or `action` to be taken when the webhook is successfully triggered.
          title: output
      title: Output object
    PaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/subscribers/d369a402-7b43-4512-8735-9d5e1f387814/sip_endpoints?page_number=0&page_size=50
          description: Link of the current page
        first:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/subscribers/d369a402-7b43-4512-8735-9d5e1f387814/sip_endpoints?page_number=0&page_size=50
          description: Link to the first page
        next:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/subscribers/d369a402-7b43-4512-8735-9d5e1f387814/sip_endpoints?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
          description: Link to the next page
    PlaybackBGAction:
      type: object
      required:
        - playback_bg
      properties:
        playback_bg:
          type: object
          properties:
            file:
              type: string
              format: uri
              example: https://cdn.signalwire.com/default-music/welcome.mp3
              description: URL or filepath of the audio file to play.
            wait:
              type: boolean
              description: Whether to wait for the audio file to finish playing before continuing. Default is `false`.
          required:
            - file
          description: A JSON object containing the audio file to play.
          title: playback_bg
      title: PlaybackBGAction object
    Pronounce:
      type: object
      required:
        - replace
        - with
      properties:
        replace:
          type: string
          example: pizza
          description: The expression to replace.
        with:
          type: string
          example: pissa
          description: The phonetic spelling of the expression.
        ignore_case:
          type: boolean
          description: Whether the pronunciation replacement should ignore case.
      title: Pronounce object
    SIPEndpoint:
      type: object
      required:
        - id
        - username
        - caller_id
        - send_as
        - ciphers
        - codecs
        - encryption
        - call_handler
        - calling_handler_resource_id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: acaa5c49-be5e-4477-bce0-48f4b23b7720
          description: Unique ID of the Sip Endpoint.
        username:
          type: string
          example: justice-league
          description: Username of the Sip Endpoint.
        caller_id:
          type: string
          example: call-id-123
          description: Caller ID of the Sip Endpoint.
        send_as:
          type: string
          example: '+14632322867'
          description: Purchased or verified number
        ciphers:
          type: array
          items:
            $ref: '#/components/schemas/CipherType'
          description: Ciphers of the Sip Endpoint.
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/CodecType'
          description: Codecs of the Sip Endpoint.
        encryption:
          allOf:
            - $ref: '#/components/schemas/EncryptionType'
          example: optional
          description: Encryption requirement of the Sip Endpoint.
        call_handler:
          allOf:
            - $ref: '#/components/schemas/CallHandlerType'
          example: ai_agent
          description: Call handler of the Sip Endpoint.
        calling_handler_resource_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: f7078ea7-dc79-4763-96f6-725bf5829097
          description: Unique ID of the Calling Handler Resource.
    SWAIG:
      type: object
      properties:
        defaults:
          allOf:
            - $ref: '#/components/schemas/SWAIGDefaults'
          description: Default settings for all SWAIG functions. If `defaults` is not set, settings may be set in each function object. Default is not set.
        native_functions:
          type: array
          items:
            $ref: '#/components/schemas/SWAIGNativeFunction'
          description: Prebuilt functions the AI agent is able to call from this list of available native functions
        includes:
          type: array
          items:
            $ref: '#/components/schemas/SWAIGIncludes'
          description: |-
            An array of objects to include remote function signatures.
            The object fields are url to specify where the remote functions are defined and functions which is an array of the function names as strings.
        functions:
          type: array
          items:
            $ref: '#/components/schemas/SWAIGFunction'
          description: |-
            An array of JSON objects to define functions that can be executed during the interaction with the AI. Default is not set.
            The fields of this object are the six following.
      title: swaig
    SWAIGDefaults:
      type: object
      properties:
        web_hook_url:
          type: string
          example: username:password@https://example.com
          description: Default URL to send status callbacks and reports to. Authentication can also be set in the url in the format of `username:password@url.`
      title: defaults
    SWAIGFunction:
      type: object
      required:
        - function
        - description
      properties:
        function:
          type: string
          example: get_weather
          description: A unique name for the function. For example, 'get_weather'.
        description:
          type: string
          example: Get the weather information
          description: A description of the context and purpose of the function, to explain to the agent when to use it.
        parameters:
          allOf:
            - $ref: '#/components/schemas/FunctionParameters'
          description: A JSON object defining the input that should be passed to the function. The fields of this object are the following two parameters.
        active:
          type: boolean
          description: Whether the function is active. Default is `true`.
        meta_data:
          type: object
          additionalProperties: {}
          description: |-
            A powerful and flexible environmental variable which can accept arbitrary data that is set initially in the SWML script or from the SWML set_meta_data action.
            This data can be referenced locally to the function.
            All contained information can be accessed and expanded within the prompt - for example, by using a template string.
            Default is not set.
        meta_data_token:
          type: string
          description: Scoping token for meta_data. If not supplied, metadata will be scoped to function's `web_hook_url`. Default is set by SignalWire.
        data_map:
          allOf:
            - $ref: '#/components/schemas/DataMap'
          description: |-
            An object containing properties to process or validate the input,
            perform actions based on the input, or connect to external APIs or services in a serverless fashion.
        web_hook_url:
          type: string
          example: username:password:https://statuscallback.com
          description: Function-specific URL to send status callbacks and reports to. Takes precedence over a default setting. Authentication can also be set in the url in the format of `username:password@url.`
        wait_file:
          type: string
          format: uri
          example: https://cdn.signalwire.com/default-music/welcome.mp3
          description: A file to play while the function is running. `wait_file_loops` can specify the amount of times that files should continuously play. Default is not set.
        wait_file_loops:
          anyOf:
            - type: integer
            - type: string
          example: 5
          description: The number of times to loop playing the file. Default is not set.
      title: functions
    SWAIGIncludes:
      type: object
      required:
        - functions
        - url
      properties:
        functions:
          type: array
          items:
            type: string
          example:
            - transfer call
            - notify kitchen
          description: Remote functions to fetch and include in your AI application.
        url:
          type: string
          example: username:password@https://example.com
          description: URL to fetch remote functions and include in your AI application. Authentication can also be set in the url in the format of `username:password@url`.
        meta_data:
          type: object
          additionalProperties: {}
          description: ''
      title: includes
    SWAIGNativeFunction:
      type: string
      enum:
        - check_time
        - wait_seconds
      title: native_functions
    SayAction:
      type: object
      required:
        - say
      properties:
        say:
          type: string
          example: Welcome to Franklin's Pizza.
          description: A message to be spoken by the AI agent.
          title: say
      title: SayAction object
    SchemaType:
      oneOf:
        - $ref: '#/components/schemas/StringProperty'
        - $ref: '#/components/schemas/IntegerProperty'
        - $ref: '#/components/schemas/NumberProperty'
        - $ref: '#/components/schemas/BooleanProperty'
        - $ref: '#/components/schemas/ArrayProperty'
        - $ref: '#/components/schemas/ObjectProperty'
        - $ref: '#/components/schemas/NullProperty'
        - $ref: '#/components/schemas/OneOfProperty'
        - $ref: '#/components/schemas/AllOfProperty'
        - $ref: '#/components/schemas/AnyOfProperty'
        - $ref: '#/components/schemas/ConstProperty'
      title: Function Parameters Type Union
    SetGlobalDataAction:
      type: object
      required:
        - set_global_data
      properties:
        set_global_data:
          type: object
          additionalProperties: {}
          example:
            small_size: 8 Inch
            large_size: 12 Inch
            closed: Monday
          description: A JSON object containing any global data, as a key-value map. This action sets the data in the `global_meta_data` to be globally referenced.
          title: set_global_data
      title: SetGlobalDataAction object
    SetMetaDataAction:
      type: object
      required:
        - set_meta_data
      properties:
        set_meta_data:
          type: object
          additionalProperties: {}
          example:
            extra_cheese: Can't do
            extra_large_pizza: Only on Friday
          description: A JSON object containing any metadata, as a key-value map. This action sets the data in the `meta_data` to be referenced locally in the function.
          title: set_meta_data
      title: SetMetaDataAction object
    SipEndpointCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter
            message: Ciphers are invalid
            attribute: ciphers
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes#invalid_parameter
    SipEndpointUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter
            message: Ciphers are invalid
            attribute: ciphers
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes#invalid_parameter
    StopAction:
      type: object
      required:
        - stop
      properties:
        stop:
          type: boolean
          description: Whether to stop the conversation.
          title: stop
      title: StopAction object
    StopPlaybackBGAction:
      type: object
      required:
        - stop_playback_bg
      properties:
        stop_playback_bg:
          type: boolean
          description: Whether to stop the background audio file.
          title: stop_playback_bg
      title: StopPlaybackBGAction object
    StringFormat:
      type: string
      enum:
        - date_time
        - time
        - date
        - duration
        - email
        - hostname
        - ipv4
        - ipv6
        - uri
        - uuid
    StringProperty:
      type: object
      required:
        - type
      properties:
        description:
          type: string
          example: Property description
          description: A description of the property.
        nullable:
          type: boolean
          description: Whether the property can be null.
        type:
          type: string
          enum:
            - string
          description: The type of parameter(s) the AI is passing to the function.
        enum:
          type: array
          items:
            type: string
          example:
            - value1
            - value2
            - value3
          description: An array of strings that are the possible values
        default:
          type: string
          example: default value
          description: The default string value
        pattern:
          type: string
          example: ^[a-zA-Z0-9_.-]*$
          description: Regular expression pattern
        format:
          allOf:
            - $ref: '#/components/schemas/StringFormat'
          description: String format (email, date-time, etc.)
      description: Base interface for all property types
      title: String Function Property
    Subscriber:
      type: object
      required:
        - id
        - email
        - first_name
        - last_name
        - display_name
        - job_title
        - timezone
        - country
        - region
        - company_name
      properties:
        id:
          type: string
          example: d369a402-7b43-4512-8735-9d5e1f387814
          description: Unique ID of the Subscriber.
        email:
          type: string
          example: johndoe@example.com
          description: Email of the Subscriber.
        first_name:
          type: string
          example: John
          description: First name of the Subscriber.
        last_name:
          type: string
          example: Doe
          description: Last name of the Subscriber.
        display_name:
          type: string
          example: John Doe
          description: Display name of the Subscriber.
        job_title:
          type: string
          example: Software Engineer
          description: Job title of the Subscriber.
        timezone:
          type: string
          example: America/New_York
          description: Timezone of the Subscriber.
        country:
          type: string
          example: United States
          description: Country of the Subscriber.
        region:
          type: string
          example: New York
          description: Region of the Subscriber.
        company_name:
          type: string
          example: SignalWire
          description: Company name of the Subscriber.
    SubscriberAddress:
      type: object
      required:
        - id
        - resource_id
        - name
        - display_name
        - type
        - cover_url
        - preview_url
        - channels
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: acaa5c49-be5e-4477-bce0-48f4b23b7720
          description: Unique ID of a Subscriber Address.
        resource_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: acaa5c49-be5e-4477-bce0-48f4b23b7720
          description: Unique ID of a Subscriber Address.
        name:
          type: string
          example: reception
          description: Name of the Subscriber Address.
        display_name:
          type: string
          example: Reception
          description: Display Name of the Subscriber Address.
        type:
          type: string
          example: room
          description: Type of the Subscriber Address.
        cover_url:
          type: string
          format: uri
          example: https://example.com/cover.webp
          description: Cover URL of the Subscriber Address.
        preview_url:
          type: string
          format: uri
          example: https://example.com/preview.webp
          description: Preview URL of the Subscriber Address.
        channels:
          type: object
          properties:
            video:
              type: string
              example: /public/reception?channel=video
              description: Video Channel of the Subscriber Address.
            audio:
              type: string
              example: /public/reception?channel=audio
              description: Audio Channel of the Subscriber Address.
            messaging:
              type: string
              example: /public/reception?channel=messaging
              description: Messaging Channel of the Subscriber Address.
          required:
            - video
            - audio
            - messaging
    SubscriberAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_swml_handlers?page_number=0&page_size=50
          description: Link of the current page
        first:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_swml_handlers?page_number=0&page_size=50
          description: Link to the first page
        next:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/external_swml_handlers?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
          description: Link to the next page
    SubscriberAddressesResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubscriberAddress'
        links:
          $ref: '#/components/schemas/SubscriberAddressPaginationResponse'
    SubscriberCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: Required parameter is missing
            attribute: password
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes#invalid_parameter
    SubscriberGuestTokenCreateRequest:
      type: object
      required:
        - allowed_addresses
      properties:
        allowed_addresses:
          type: array
          items:
            $ref: '#/components/schemas/uuid'
          maxItems: 10
          description: List of up to 10 UUIDs representing the allowed Fabric addresses.
        expire_at:
          type: integer
          example: 1725513600
          description: A unixtime (the number of seconds since 1970-01-01 00:00:00) at which the token should no longer be valid. Defaults to 'two hours from now'
    SubscriberGuestTokenCreateResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          example: eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiY2giOiJwdWMuc2lnbmFsd2lyZS5jb20iLCJ0eXAiOiJTQVQifQ..8O4EJs349q97jAcd.H4GNrC6gsWdz91ArWF9ce00Cm62iHfsrFRRUUGW3e96j9C3IphiJXvHYHTmD4qMt8czZ8cniF8c53vVAIZF-yBQibejiMxwnqW6KkLct2EJoPUf9g-wQwM0-lGGj9iPx_7yprkQekFK-7svkLcKlo1voZyavxIsWQlXByppmR_ospVx2u8jbAab0ZjKJNEnr1yPF9oNkyMAnkpkS8k8PwKaxUHBc5SGumKlexUjL3ixZDR6UOcbApVXxrB-DmQBs3otOT7hzME7oKvR-6Xy0XJ1pt4Of7MEzNBUK5Z5NMjtFiA8IqwDlNJz3I5gn8hbjSZwSMJHRJGx2DKpNKiu6fcd-3i2VwCpnKHaNUybMJ5gV3cTNfTFJQBSearCLv-7gMx6Gqy9FF_Hm2bGlfnjTQ9BCsCqXBkQ9EQD6yboi2uUhPyLmpzPqlrBc9ik0c3qR5ey5Jym_VnZXaT_S5NxjzIjLzvs33GOKiooGMsBWOm6mzTPcf398xaSErT4dF2wXwtZANou7Dt4BoTKa.DcLVYpma-iItaGhaOStu9A
          description: Guest Token
    SubscriberInviteTokenCreateRequest:
      type: object
      required:
        - address_id
      properties:
        address_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          description: Unique ID of a Subscriber Address
        expires_at:
          type: integer
          example: 1725513600
          description: A unixtime (the number of seconds since 1970-01-01 00:00:00) at which the token should no longer be valid. Defaults to 'two hours from now'
    SubscriberInviteTokenCreateResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          example: eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiY2giOiJwdWMuc2lnbmFsd2lyZS5jb20iLCJ0eXAiOiJTQVQifQ..8O4EJs349q97jAcd.H4GNrC6gsWdz91ArWF9ce00Cm62iHfsrFRRUUGW3e96j9C3IphiJXvHYHTmD4qMt8czZ8cniF8c53vVAIZF-yBQibejiMxwnqW6KkLct2EJoPUf9g-wQwM0-lGGj9iPx_7yprkQekFK-7svkLcKlo1voZyavxIsWQlXByppmR_ospVx2u8jbAab0ZjKJNEnr1yPF9oNkyMAnkpkS8k8PwKaxUHBc5SGumKlexUjL3ixZDR6UOcbApVXxrB-DmQBs3otOT7hzME7oKvR-6Xy0XJ1pt4Of7MEzNBUK5Z5NMjtFiA8IqwDlNJz3I5gn8hbjSZwSMJHRJGx2DKpNKiu6fcd-3i2VwCpnKHaNUybMJ5gV3cTNfTFJQBSearCLv-7gMx6Gqy9FF_Hm2bGlfnjTQ9BCsCqXBkQ9EQD6yboi2uUhPyLmpzPqlrBc9ik0c3qR5ey5Jym_VnZXaT_S5NxjzIjLzvs33GOKiooGMsBWOm6mzTPcf398xaSErT4dF2wXwtZANou7Dt4BoTKa.DcLVYpma-iItaGhaOStu9A
          description: Invite Token
    SubscriberListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubscriberResponse'
        links:
          $ref: '#/components/schemas/SubscriberPaginationResponse'
    SubscriberPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/subscribers?page_number=0&page_size=50
          description: Link of the current page
        first:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/subscribers?page_number=0&page_size=50
          description: Link to the first page
        next:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/fabric/resources/subscribers?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
          description: Link to the next page
    SubscriberRequest:
      type: object
      required:
        - email
      properties:
        password:
          type: string
          example: password123
          minLength: 8
          maxLength: 72
          description: Password of the Subscriber. Defaults to a secure random password if not provided.
        email:
          type: string
          example: johndoe@example.com
          description: Email of the Subscriber.
        first_name:
          type: string
          example: John
          description: First name of the Subscriber.
        last_name:
          type: string
          example: Doe
          description: Last name of the Subscriber.
        display_name:
          type: string
          example: John Doe
          description: Display name of the Subscriber.
        job_title:
          type: string
          example: Software Engineer
          description: Job title of the Subscriber.
        timezone:
          type: string
          example: America/New_York
          description: Timezone of the Subscriber.
        country:
          type: string
          example: United States
          description: Country of the Subscriber.
        region:
          type: string
          example: New York
          description: Region of the Subscriber.
        company_name:
          type: string
          example: SignalWire
          description: Company name of the Subscriber.
    SubscriberResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - subscriber
      properties:
        id:
          type: string
          example: d369a402-7b43-4512-8735-9d5e1f387814
          description: Unique ID of the request.
        project_id:
          type: string
          example: d369a402-7b43-4512-8735-9d5e1f387814
          description: Unique ID of the project.
        display_name:
          type: string
          example: John Doe
          description: Display name of the Subscriber.
        type:
          type: string
          enum:
            - subscriber
          description: Type of the resource.
        created_at:
          type: string
          format: date-time
          example: 2024-10-17T14:14:53Z
          description: Date and time when the resource was created.
        updated_at:
          type: string
          format: date-time
          example: 2024-10-17T14:14:53Z
          description: Date and time when the resource was updated.
        subscriber:
          allOf:
            - $ref: '#/components/schemas/Subscriber'
          description: Subscriber data.
    SubscriberSipEndpointBaseRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: justice-league
          description: Username of the Sip Endpoint.
        password:
          type: string
          example: hack-me-if-you-can
          description: Password of the Sip Endpoint.
        caller_id:
          type: string
          example: call-id-123
          description: Caller ID of the Sip Endpoint.
        send_as:
          type: string
          example: '+14632322867'
          description: The Number to send as.
        ciphers:
          type: array
          items:
            $ref: '#/components/schemas/CipherType'
          description: Ciphers of the Sip Endpoint.
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/CodecType'
          description: Codecs of the Sip Endpoint.
        encryption:
          allOf:
            - $ref: '#/components/schemas/EncryptionType'
          example: optional
          description: Encryption requirement of the Sip Endpoint.
          default: default
    SubscriberSipEndpointBaseRequestUpdate:
      type: object
      properties:
        username:
          type: string
          example: justice-league
          description: Username of the Sip Endpoint.
        password:
          type: string
          example: hack-me-if-you-can
          description: Password of the Sip Endpoint.
        caller_id:
          type: string
          example: call-id-123
          description: Caller ID of the Sip Endpoint.
        send_as:
          type: string
          example: '+14632322867'
          description: The Number to send as.
        ciphers:
          type: array
          items:
            $ref: '#/components/schemas/CipherType'
          description: Ciphers of the Sip Endpoint.
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/CodecType'
          description: Codecs of the Sip Endpoint.
        encryption:
          allOf:
            - $ref: '#/components/schemas/EncryptionType'
          example: optional
          description: Encryption requirement of the Sip Endpoint.
          default: default
    SubscriberSipEndpointCreateRequest:
      oneOf:
        - $ref: '#/components/schemas/SubscriberSipEndpointCreateWithHandler'
        - $ref: '#/components/schemas/SubscriberSipEndpointCreateWithResourceId'
    SubscriberSipEndpointCreateWithHandler:
      type: object
      properties:
        call_handler:
          allOf:
            - $ref: '#/components/schemas/CallHandlerPassthroughType'
          example: block-pstn
          description: Call handler of the Sip Endpoint.
      allOf:
        - $ref: '#/components/schemas/SubscriberSipEndpointBaseRequest'
      title: Create Subscriber SIP Endpoint with Call Handler
    SubscriberSipEndpointCreateWithHandlerUpdate:
      type: object
      properties:
        call_handler:
          allOf:
            - $ref: '#/components/schemas/CallHandlerPassthroughType'
          example: block-pstn
          description: Call handler of the Sip Endpoint.
      allOf:
        - $ref: '#/components/schemas/SubscriberSipEndpointBaseRequestUpdate'
      title: Create Subscriber SIP Endpoint with Call Handler
    SubscriberSipEndpointCreateWithResourceId:
      type: object
      properties:
        calling_handler_resource_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: f7078ea7-dc79-4763-96f6-725bf5829097
          description: Unique ID of the Calling Handler Resource.
      allOf:
        - $ref: '#/components/schemas/SubscriberSipEndpointBaseRequest'
      title: Create Subscriber SIP Endpoint with Resource ID
    SubscriberSipEndpointCreateWithResourceIdUpdate:
      type: object
      properties:
        calling_handler_resource_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: f7078ea7-dc79-4763-96f6-725bf5829097
          description: Unique ID of the Calling Handler Resource.
      allOf:
        - $ref: '#/components/schemas/SubscriberSipEndpointBaseRequestUpdate'
      title: Create Subscriber SIP Endpoint with Resource ID
    SubscriberSipEndpointListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SIPEndpoint'
        links:
          $ref: '#/components/schemas/PaginationResponse'
    SubscriberSipEndpointUpdateRequest:
      oneOf:
        - $ref: '#/components/schemas/SubscriberSipEndpointUpdateWithHandlerUpdate'
        - $ref: '#/components/schemas/SubscriberSipEndpointUpdateWithResourceIdUpdate'
    SubscriberSipEndpointUpdateWithHandler:
      type: object
      properties:
        call_handler:
          allOf:
            - $ref: '#/components/schemas/CallHandlerPassthroughType'
          example: block-pstn
          description: Call handler of the Sip Endpoint.
      allOf:
        - $ref: '#/components/schemas/SubscriberSipEndpointBaseRequest'
      title: Update Subscriber SIP Endpoint with Call Handler
    SubscriberSipEndpointUpdateWithHandlerUpdate:
      type: object
      properties:
        call_handler:
          allOf:
            - $ref: '#/components/schemas/CallHandlerPassthroughType'
          example: block-pstn
          description: Call handler of the Sip Endpoint.
      allOf:
        - $ref: '#/components/schemas/SubscriberSipEndpointBaseRequestUpdate'
      title: Update Subscriber SIP Endpoint with Call Handler
    SubscriberSipEndpointUpdateWithResourceId:
      type: object
      properties:
        calling_handler_resource_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: f7078ea7-dc79-4763-96f6-725bf5829097
          description: Unique ID of the Calling Handler Resource.
      allOf:
        - $ref: '#/components/schemas/SubscriberSipEndpointBaseRequest'
      title: Update Subscriber SIP Endpoint with Resource ID
    SubscriberSipEndpointUpdateWithResourceIdUpdate:
      type: object
      properties:
        calling_handler_resource_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: f7078ea7-dc79-4763-96f6-725bf5829097
          description: Unique ID of the Calling Handler Resource.
      allOf:
        - $ref: '#/components/schemas/SubscriberSipEndpointBaseRequestUpdate'
      title: Update Subscriber SIP Endpoint with Resource ID
    SubscriberTokenRequest:
      type: object
      required:
        - reference
      properties:
        reference:
          type: string
          example: john.doe@example.com
          description: A string that uniquely identifies the subscriber. Often it's an email, but can be any other string.
        expire_at:
          type: integer
          example: 1693823284
          description: A unixtime (the number of seconds since 1970-01-01 00:00:00) at which the token should no longer be valid. Defaults to 'two hours from now'
        application_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: 123e4567-e89b-12d3-a456-426614174000
          description: The ID of the application that the token is associated with.
        password:
          type: string
          example: password123
          description: Set or update the subscriber's password. Omit this field or pass an empty string if you don't want to update the password.
        first_name:
          type: string
          example: John
          description: Set or update the first name of the subscriber.
        last_name:
          type: string
          example: Doe
          description: Set or update the last name of the subscriber.
        display_name:
          type: string
          example: John Doe
          description: Set or update the display name of the subscriber.
        job_title:
          type: string
          example: Software Engineer
          description: Set or update the job title of the subscriber.
        time_zone:
          type: string
          example: America/New_York
          description: Set or update the time zone of the subscriber.
        country:
          type: string
          example: US
          description: Set or update the country of the subscriber.
        region:
          type: string
          example: CA
          description: Set or update the region of the subscriber.
        company_name:
          type: string
          example: SignalWire
          description: Set or update the company name of the subscriber.
    SubscriberTokenResponse:
      type: object
      required:
        - subscriber_id
        - token
      properties:
        subscriber_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: 32d94154-9297-418c-9a85-4a69e0c67c30
          description: The ID of the subscriber that the token is associated with.
        token:
          allOf:
            - $ref: '#/components/schemas/uuid'
          example: eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwidHlwIjoiU0FUIn0..HahMYxqt4uI14qSH.daMTBR53lfEfEFiVAhr0pPSRqZhEod_YzavoG9-4ieiRQvl8GtP3FFNx0VLfkJqNcjUNbAaiKrEMnfOtCnQjiq1Kn0Iq90MYdM00QJ7cTaQ88vfbqdE92p-d4oDeg6z_vAsgrFgEobmrlDQndKxCWOD921iYxyLP0vqNaokN3kIM06iAWu_UpnTYEeR1l068xhK2xb6P9wbI2FDKFQoMgCdbjvABF7RRyaEzUoaQ5_Wj53YO6PFYuYcPbqMhdtvSSQiK3Nw6bFer2OfFs6s2RTukRGsocgC5Q7pwQwzYky-YgrPCb-pVAJajVSXUJrayvOi8-TeyCpICW4zTeJa5icZ380cWtafUH4rEB_FOJciJf0BCy48ajbz0NE121uBl2mqA1HE0_mQA53UqVjbrbE9hVOfnN4KpwOfULhIjx54tIekJQgG-aK2AYsLPCDNhuSpHvdwJcTM0Gzy3mS2veyaDV8q2qN5F_F9OThTQzcfy.AXzVNrJc_pGVPsticsVM0w
          description: The token that is associated with the subscriber.
    SubscriberTokenStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: Required parameter is missing
            attribute: reference
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes#invalid_parameter
    SubscriberUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: Required parameter is missing
            attribute: password
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes#invalid_parameter
    ToggleFunctionsAction:
      type: object
      required:
        - toggle_functions
      properties:
        toggle_functions:
          type: array
          items:
            type: object
            properties:
              active:
                type: boolean
                description: Whether to activate or deactivate the functions. Default is `true`
              function:
                anyOf:
                  - type: string
                  - type: array
                    items:
                      type: string
                example: Discount
                description: The function names to toggle.
            required:
              - active
              - function
          description: Whether to toggle the functions on or off.
          title: toggle_functions
      title: ToggleFunctionsAction object
    Types.StatusCodes.StatusCode422Error:
      type: object
      required:
        - type
        - code
        - message
        - attribute
        - url
      properties:
        type:
          type: string
          description: Error type.
        code:
          type: string
          description: Error code.
        message:
          type: string
          description: Error details.
        attribute:
          type: string
          description: Request parameter associated with this error.
        url:
          type: string
          description: Link to developer resource for this error.
    UnsetGlobalDataAction:
      type: object
      required:
        - unset_global_data
      properties:
        unset_global_data:
          anyOf:
            - type: string
            - type: object
          example: closed
          description: The key of the global data to unset from the `global_meta_data`. You can also reset the `global_meta_data` by passing in a new object.
          title: unset_global_data
      title: UnsetGlobalDataAction object
    UnsetMetaDataAction:
      type: object
      required:
        - unset_meta_data
      properties:
        unset_meta_data:
          anyOf:
            - type: string
            - type: object
          example: extra_cheese
          description: The key of the local data to unset from the `meta_data`. You can also reset the `meta_data` by passing in a new object.
          title: unset_meta_data
      title: UnsetMetaDataAction object
    UrlMethodType:
      type: string
      enum:
        - GET
        - POST
      description: The method type to use for the URL
    UsedForType:
      type: string
      enum:
        - calling
        - messaging
      description: Sets the handler to handle incoming `calls` or `messages`.
    UserInputAction:
      type: object
      required:
        - user_input
      properties:
        user_input:
          type: string
          example: I want a tasty Pizza.
          description: Used to inject text into the users queue as if they input the data themselves.
          title: user_input
      title: UserInputAction object
    VideoChannel:
      type: object
      required:
        - video
      properties:
        video:
          type: string
          example: /external/resource_name?channel=video
          description: Video Channel of Fabric Address
    Webhook:
      type: object
      required:
        - webhooks
      properties:
        webhooks:
          type: array
          items:
            type: object
            properties:
              expressions:
                type: array
                items:
                  $ref: '#/components/schemas/Expression'
                description: A list of expressions to be evaluated upon matching.
              error_keys:
                anyOf:
                  - type: string
                  - type: array
                    items:
                      type: string
                example: failed
                description: A string or array of strings that represent the keys to be used for error handling. This will match the key(s) in the response from the API call.
              url:
                type: string
                example: https://example.com
                description: The endpoint for the external service or API.
              foreach:
                type: object
                properties:
                  input_key:
                    type: string
                    example: success
                    description: The key to be used to access the current element in the array.
                  output_key:
                    type: string
                    example: deliverer
                    description: The key that can be referenced in the output of the `foreach` iteration. The values that are stored from `append` will be stored in this key.
                  max:
                    type: integer
                    example: 5
                    description: The max amount of elements that are iterated over in the array. This will start at the beginning of the array.
                  append:
                    type: string
                    description: |-
                      The values to append to the output_key.
                      Properties from the object can be referenced and added to the output_key by using the following syntax:
                      ${this.property_name}.
                      The `this` keyword is used to reference the current object in the array.
                required:
                  - input_key
                  - output_key
                  - append
                description: Iterates over an array of objects and processes a output based on each element in the array. Works similarly to JavaScript's forEach method.
              headers:
                type: object
                additionalProperties: {}
                description: Any necessary headers for the API call.
              method:
                type: string
                enum:
                  - GET
                  - POST
                  - PUT
                  - DELETE
                description: The HTTP method (GET, POST, etc.) for the API call.
              input_args_as_params:
                type: boolean
                description: A boolean to determine if the input arguments should be passed as parameters.
              params:
                type: object
                additionalProperties: {}
                description: An object of any necessary parameters for the API call. The key is the parameter name and the value is the parameter value.
              require_args:
                anyOf:
                  - type: string
                  - type: array
                    items:
                      type: string
                description: A string or array of strings that represent the `arguments` that are required to make the webhook request.
              output:
                type: object
                properties:
                  response:
                    type: string
                    example: Order placed
                    description: A static response text or message returned to the AI agents context.
                  action:
                    type: array
                    items:
                      $ref: '#/components/schemas/Action'
                    description: A list of actions to be performed upon matching.
                required:
                  - response
                description: An object that defines the `response` or `action` to be taken when the webhook is successfully triggered.
                title: output
            required:
              - url
              - output
          description: An array of objects that define external API calls.
          title: webhooks
      title: Webhook object
    uuid:
      type: string
      format: uuid
      description: Universal Unique Identifier.
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
servers:
  - url: https://{space_name}.signalwire.com/api/fabric/
    description: Endpoint
    variables:
      space_name:
        default: '{Your_Space_Name}'
