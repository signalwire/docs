openapi: 3.0.0
info:
  title: Datasphere API
  description: An AI-powered API for document search.
  version: 0.0.0
tags:
  - name: Documents
paths:
  /documents:
    get:
      operationId: Documents_list
      summary: List Documents
      description: A list of Datasphere Documents
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - Documents
    post:
      operationId: Documents_create
      summary: Create a Document
      description: Creates a Datasphere Document
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStatusCode422'
      tags:
        - Documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateRequest'
  /documents/search:
    post:
      operationId: Documents_search
      summary: Search Documents
      description: Search Datasphere Documents
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chunk'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchStatusCode422'
      tags:
        - Documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSearchRequest'
  /documents/{id}:
    patch:
      operationId: Documents_update
      summary: Update a Document
      description: Updates a Datasphere Document by ID
      parameters:
        - $ref: '#/components/parameters/PathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchStatusCode422'
      tags:
        - Documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUpdateRequest'
    delete:
      operationId: Documents_delete
      summary: Delete a Document
      description: Deletes a Datasphere Document by ID
      parameters:
        - $ref: '#/components/parameters/PathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Unauthorized
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not Found
      tags:
        - Documents
security:
  - BasicAuth: []
components:
  parameters:
    PathID:
      name: id
      in: path
      required: true
      description: Unique ID of a Document.
      schema:
        $ref: '#/components/schemas/docid'
  schemas:
    Chunk:
      type: object
      required:
        - text
        - document_id
      properties:
        text:
          type: string
          example: Cristiano Ronaldo is the highest-paid football player in the world in 2024
          description: A search result.
        document_id:
          allOf:
            - $ref: '#/components/schemas/docid'
          example: acaa5c49-be5e-4477-bce0-48f4b23b7720
          description: Unique ID of the Document.
    ChunkingStrategy:
      type: string
      enum:
        - sentence
        - paragraph
        - page
        - sliding
      description: Strategy to use when chunking the document.
    CreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter
            message: Invalid chunking_strategy
            attribute: chunking_strategy
            url: https://developer.signalwire.com/rest/overview/error-codes#{code}
    Document:
      type: object
      required:
        - id
        - filename
        - status
        - tags
        - chunking_strategy
        - max_sentences_per_chunk
        - split_newlines
        - overlap_size
        - chunk_size
        - number_of_chunks
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/docid'
          example: acaa5c49-be5e-4477-bce0-48f4b23b7720
          description: Unique ID of the Document.
        filename:
          type: string
          example: player_list.pdf
          description: Name of the Document.
        status:
          allOf:
            - $ref: '#/components/schemas/DocumentStatus'
          example: in_progress
          description: Status of the Document.
        tags:
          type: array
          items:
            type: string
          example:
            - sports
            - football
            - game
          description: Document tags.
        chunking_strategy:
          allOf:
            - $ref: '#/components/schemas/ChunkingStrategy'
          example: sentence
          description: Strategy used to chunk the document.
        max_sentences_per_chunk:
          type: string
          example: '80'
          description: Max Sentences per Chunk (only used for chunking type 'sentence')
        split_newlines:
          type: boolean
          example: true
          description: Split on Newlines (only used for chunking type 'sentence')
        overlap_size:
          type: string
          example: '10'
          description: Overlap Size (only used for chunking type 'sliding')
        chunk_size:
          type: string
          example: '50'
          description: Chunk Size (only used for chunking type 'sliding')
        number_of_chunks:
          type: integer
          example: 2345
          description: Number of Chunks in the Document.
        created_at:
          type: string
          format: date-time
          example: 2024-05-06T12:20-12Z
          description: Document Creation Date.
        updated_at:
          type: string
          format: date-time
          example: 2024-05-06T12:20-12Z
          description: Document Update Date.
    DocumentCreatePageRequest:
      type: object
      properties:
        chunking_strategy:
          type: string
          enum:
            - page
          example: page
          description: Strategy for chunking the document
      allOf:
        - $ref: '#/components/schemas/DocumentCreateRequestBase'
      title: Page strategy
    DocumentCreateParagraphRequest:
      type: object
      properties:
        chunking_strategy:
          type: string
          enum:
            - paragraph
          example: paragraph
          description: Strategy for chunking the document
      allOf:
        - $ref: '#/components/schemas/DocumentCreateRequestBase'
      title: Paragraph strategy
    DocumentCreateRequest:
      oneOf:
        - $ref: '#/components/schemas/DocumentCreateSentenceRequest'
        - $ref: '#/components/schemas/DocumentCreateSlidingRequest'
        - $ref: '#/components/schemas/DocumentCreatePageRequest'
        - $ref: '#/components/schemas/DocumentCreateParagraphRequest'
    DocumentCreateRequestBase:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          format: uri
          example: https://example.com/document.pdf
          description: URL of the document.
        tags:
          type: array
          items:
            type: string
          example:
            - sports
            - football
            - game
          description: Document tags.
    DocumentCreateSentenceRequest:
      type: object
      properties:
        max_sentences_per_chunk:
          type: integer
          example: 40
          description: Maximum number of sentences per chunk.
          default: 50
        chunking_strategy:
          type: string
          enum:
            - sentence
          example: sentence
          description: Strategy for chunking the document
        split_newlines:
          type: boolean
          example: false
          description: |-
            Whether to split chunks on new lines.


             
            **Default value:** `false`
          default: false
      allOf:
        - $ref: '#/components/schemas/DocumentCreateRequestBase'
      title: Sentence strategy
    DocumentCreateSlidingRequest:
      type: object
      properties:
        chunk_size:
          type: integer
          example: 50
          description: Number of words per chunk.
          default: 50
        chunking_strategy:
          type: string
          enum:
            - sliding
          example: sliding
          description: Strategy for chunking the document
        overlap_size:
          type: integer
          example: 10
          description: Amount of overlap between chunks, in number of words.
          default: 10
      allOf:
        - $ref: '#/components/schemas/DocumentCreateRequestBase'
      title: Sliding strategy
    DocumentListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        links:
          $ref: '#/components/schemas/PaginationResponse'
    DocumentSearchRequest:
      type: object
      required:
        - query_string
      properties:
        tags:
          type: array
          items:
            type: string
          example:
            - sports
            - football
            - game
          description: Document tags.
        document_id:
          allOf:
            - $ref: '#/components/schemas/docid'
          example: acaa5c49-be5e-4477-bce0-48f4b23b7720
          description: Unique ID of a Document.
        query_string:
          type: string
          example: Most paid athlete
          description: Search term.
        distance:
          type: integer
          example: 2
          minimum: 0
          maximum: 78.3836717690617
          description: Specifies how closely related the query is to the document. Low distance means high relevance and similarity. High distance means low relevance and similarity.
        count:
          type: integer
          example: 5
          description: Specifies number of returned Chunks.
        language:
          type: string
          example: fr
          description: Language of the Document.
          default: en
        pos_to_expand:
          type: array
          items:
            type: string
          example:
            - NOUN
            - VERB
          description: Part of Speech considered for expansion or analysis.
          default:
            - NOUN
            - VERB
            - ADJ
            - ADV
        max_synonyms:
          type: integer
          example: 7
          description: Maximum number of synonyms to consider.
          default: 10
    DocumentStatus:
      type: string
      enum:
        - submitted
        - in_progress
        - completed
        - failed
      description: The current Status of the Document.
    DocumentUpdateRequest:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          example:
            - sports
            - football
            - game
          description: Document tags.
    PaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/data_sphere/documents?page_number=0&page_size=50
          description: Link of the current page
        first:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/data_sphere/documents?page_number=0&page_size=50
          description: Link to the first page
        next:
          type: string
          format: uri
          example: https://{space_name}.signalwire.com/api/data_sphere/documents?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
          description: Link to the next page
    SearchStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter
            message: Invalid tags
            attribute: tags
            url: https://developer.signalwire.com/rest/overview/error-codes#{code}
    Types.StatusCodes.StatusCode422Error:
      type: object
      required:
        - type
        - code
        - message
        - attribute
        - url
      properties:
        type:
          type: string
          description: Error type.
        code:
          type: string
          description: Error code.
        message:
          type: string
          description: Error details.
        attribute:
          type: string
          description: Request parameter associated with this error.
        url:
          type: string
          description: Link to developer resource for this error.
    docid:
      type: string
      format: uuid
      description: Unique ID of a Document.
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
servers:
  - url: https://{space_name}.signalwire.com/api/datasphere
    description: Endpoint
    variables:
      space_name:
        default: '{Your_Space_Name}'
