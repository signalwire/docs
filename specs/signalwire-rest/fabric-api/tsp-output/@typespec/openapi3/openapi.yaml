openapi: 3.0.0
info:
  title: Call Fabric API
  description: API to access/manage SignalWire's Call Fabric objects.
  version: 0.0.0
tags:
  - name: 'AI Agents: Custom'
  - name: 'AI Agents: Dialogflow'
  - name: Call Flows
  - name: Conference Rooms
  - name: cXML Scripts
  - name: cXML Webhook
  - name: Embeds Tokens
  - name: Fabric Address
  - name: FreeSWITCH Connectors
  - name: cXML Applications
  - name: LAML Applications
  - name: Relay Applications
  - name: Resources
  - name: SIP Endpoints
  - name: SIP Gateway
  - name: 'Subscribers: SIP Endpoints'
  - name: Subscribers
  - name: 'Subscribers: Tokens'
  - name: SWML Scripts
  - name: SWML Webhook
  - name: Domain Applications
  - name: Phone Routes
paths:
  /addresses:
    get:
      operationId: FabricAddresses_list
      summary: List Fabric Addresses
      description: |-
        A list of Fabric Addresses. This endpoint uses the bearer token authentication method with the SAT (Subscriber Access Token) which can be
        generated using the [Create Subscriber Token endpoint](/rest/signalwire-rest/endpoints/fabric/subscriber-tokens-create).
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricAddressesResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Fabric Address
      security:
        - BearerAuth: []
  /addresses/{id}:
    get:
      operationId: FabricAddresses_read
      summary: Get Fabric Address
      description: |-
        Returns a Fabric Address by ID. This endpoint uses the bearer token authentication method with the SAT (Subscriber Access Token) which can be
        generated using the [Create Subscriber Token endpoint](/rest/signalwire-rest/endpoints/fabric/subscriber-tokens-create).
      parameters:
        - $ref: '#/components/parameters/FabricAddressID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricAddress'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Fabric Address
      security:
        - BearerAuth: []
  /embeds/tokens:
    post:
      operationId: EmbedsTokens_create
      summary: Create Embeds Tokens
      description: Exchanges a public Click-to-Call (C2C) token for a short-lived, private embed guest token used to authorize a call. This allows secure activation of the C2C widget without exposing sensitive credentials.
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbedsTokensResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '403':
          description: Access is forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode403'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbedTokenCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Embeds Tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbedsTokensRequest'
      security:
        - {}
  /guests/tokens:
    post:
      operationId: GuestTokens_create
      summary: Create Subscriber Guest Token
      description: Creates a Subscriber Guest Token
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberGuestTokenCreateResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestTokenCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'Subscribers: Tokens'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberGuestTokenCreateRequest'
  /resources:
    get:
      operationId: Resources_list
      summary: List Resources
      description: A list of Fabric Resources
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Resources
  /resources/ai_agents:
    get:
      operationId: AIAgents_list
      summary: List AI Agents
      description: A list of AI Agents
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'AI Agents: Custom'
    post:
      operationId: AIAgents_create
      summary: Create AI Agent
      description: Creates an AI Agent
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'AI Agents: Custom'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIAgentCreateRequest'
  /resources/ai_agents/{ai_agent_id}/addresses:
    get:
      operationId: AIAgentAddresses_list
      summary: List AI Agent Addresses
      description: This endpoint returns a list of addresses associated with a specific AI Agent.
      parameters:
        - $ref: '#/components/parameters/AIAgentIDPath'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'AI Agents: Custom'
  /resources/ai_agents/{id}:
    get:
      operationId: AIAgents_read
      summary: Get AI Agent
      description: Returns an AI Agent by ID
      parameters:
        - $ref: '#/components/parameters/AIAgentPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'AI Agents: Custom'
    patch:
      operationId: AIAgents_update
      summary: Update AI Agent
      description: Updates an AI Agent by ID
      parameters:
        - $ref: '#/components/parameters/AIAgentPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIAgentUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'AI Agents: Custom'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIAgentUpdateRequest'
    delete:
      operationId: AIAgents_delete
      summary: Delete AI Agent
      description: Deletes an AI Agent by ID
      parameters:
        - $ref: '#/components/parameters/AIAgentPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'AI Agents: Custom'
  /resources/call_flow/{id}/addresses:
    get:
      operationId: CallFlowAddresses_list
      summary: List Call Flow Addresses
      description: This endpoint returns a list of addresses associated with a specific Call Flow.
      parameters:
        - $ref: '#/components/parameters/CallFlowAddressPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallFlowAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Call Flows
  /resources/call_flow/{id}/versions:
    get:
      operationId: CallFlowVersions_list
      summary: List Call Flow Versions
      description: Returns a list of versions of a Call Flow.
      parameters:
        - $ref: '#/components/parameters/CallFlowVersionPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallFlowVersionListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Call Flows
    post:
      operationId: CallFlowVersions_deploy
      summary: Deploy a Call Flow Version
      description: Deploys a specific version of a Call Flow.
      parameters:
        - $ref: '#/components/parameters/CallFlowVersionPathID'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallFlowVersionDeployResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Call Flows
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallFlowVersionDeployRequest'
  /resources/call_flows:
    get:
      operationId: CallFlows_list
      summary: List Call Flows
      description: A list of Call Flows
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CallFlowResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Call Flows
    post:
      operationId: CallFlows_create
      summary: Create Call Flow
      description: Creates a Call Flow
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallFlowResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallFlowCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Call Flows
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallFlowCreateRequest'
  /resources/call_flows/{id}:
    get:
      operationId: CallFlows_read
      summary: Get Call Flow
      description: Returns a Call Flow by ID
      parameters:
        - $ref: '#/components/parameters/CallFlowPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallFlowResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Call Flows
    put:
      operationId: CallFlows_update
      summary: Update Call Flow
      description: Updates a Call Flow by ID
      parameters:
        - $ref: '#/components/parameters/CallFlowPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallFlowResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallFlowUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Call Flows
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallFlowUpdateRequest'
    delete:
      operationId: CallFlows_delete
      summary: Delete Call Flow
      description: Deletes a Call Flow by ID
      parameters:
        - $ref: '#/components/parameters/CallFlowPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Call Flows
  /resources/conference_room/{id}/addresses:
    get:
      operationId: ConferenceRoomAddresses_list
      summary: List Conference Room Addresses
      description: This endpoint returns a list of addresses associated with a specific Conference Room.
      parameters:
        - $ref: '#/components/parameters/ConferenceRoomAddressPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Conference Rooms
  /resources/conference_rooms:
    get:
      operationId: ConferenceRooms_list
      summary: List Conference Rooms
      description: Returns a list of conference rooms.
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConferenceRoomResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Conference Rooms
    post:
      operationId: ConferenceRooms_create
      summary: Create Conference Room
      description: Creates a Conference Room
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Conference Rooms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConferenceRoomCreateRequest'
  /resources/conference_rooms/{id}:
    get:
      operationId: ConferenceRooms_read
      summary: Get Conference Room
      description: Returns a Conference Room by ID
      parameters:
        - $ref: '#/components/parameters/ConferenceRoomPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Conference Rooms
    put:
      operationId: ConferenceRooms_update
      summary: Update Conference Room
      description: Updates a Conference Room by ID
      parameters:
        - $ref: '#/components/parameters/ConferenceRoomPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Conference Rooms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConferenceRoomUpdateRequest'
    delete:
      operationId: ConferenceRooms_delete
      summary: Delete Conference Room
      description: Deletes a Conference Room by ID
      parameters:
        - $ref: '#/components/parameters/ConferenceRoomPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Conference Rooms
  /resources/cxml_applications:
    get:
      operationId: CxmlApplications_list
      summary: List cXML Applications
      description: A list of cXML Applications
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CxmlApplicationResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Applications
  /resources/cxml_applications/{id}:
    get:
      operationId: CxmlApplications_read
      summary: Get cXML Application
      description: Returns a cXML Application by ID
      parameters:
        - $ref: '#/components/parameters/CxmlApplicationPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CxmlApplicationResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Applications
    put:
      operationId: CxmlApplications_update
      summary: Update cXML Application
      description: Updates a cXML Application by ID
      parameters:
        - $ref: '#/components/parameters/CxmlApplicationPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CxmlApplicationResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CxmlApplicationUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CxmlApplicationUpdateRequest'
    delete:
      operationId: CxmlApplications_delete
      summary: Delete LAML Application
      description: Deletes a LAML Application by ID
      parameters:
        - $ref: '#/components/parameters/CxmlApplicationPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Applications
  /resources/cxml_applications/{id}/addresses:
    get:
      operationId: CxmlApplicationAddresses_list
      summary: List cXML Application Addresses
      description: This endpoint returns a list of addresses associated with a specific LaML Application.
      parameters:
        - $ref: '#/components/parameters/CxmlApplicationAddressPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CxmlApplicationAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - LAML Applications
  /resources/cxml_scripts:
    get:
      operationId: CXMLScripts_list
      summary: List cXML Scripts
      description: A list of cXML Scripts
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CXMLScriptResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Scripts
    post:
      operationId: CXMLScripts_create
      summary: Create cXML Script
      description: Creates a cXML Script
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLScriptResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLScriptCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Scripts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CXMLScriptCreateRequest'
  /resources/cxml_scripts/{id}:
    get:
      operationId: CXMLScripts_read
      summary: Get cXML Script
      description: Returns a cXML Script by ID
      parameters:
        - $ref: '#/components/parameters/CXMLScriptPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLScriptResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Scripts
    put:
      operationId: CXMLScripts_update
      summary: Update cXML Script
      description: Updates a cXML Script by ID
      parameters:
        - $ref: '#/components/parameters/CXMLScriptPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLScriptResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLScriptUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Scripts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CXMLScriptUpdateRequest'
    delete:
      operationId: CXMLScripts_delete
      summary: Delete cXML Script
      description: Deletes a cXML Script by ID
      parameters:
        - $ref: '#/components/parameters/CXMLScriptPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Scripts
  /resources/cxml_scripts/{id}/addresses:
    get:
      operationId: CXMLScriptAddresses_list
      summary: List cXML Script Addresses
      description: This endpoint returns a list of addresses associated with a specific cXML Script.
      parameters:
        - $ref: '#/components/parameters/CXMLScriptAddressPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLScriptAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Scripts
  /resources/cxml_webhooks:
    get:
      operationId: CXMLWebhooks_list
      summary: List cXML Webhooks
      description: A list of cXML Webhooks
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLWebhookListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Webhook
    post:
      operationId: CXMLWebhooks_create
      summary: Create cXML Webhook
      description: Creates an cXML Webhook
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLWebhookResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLWebhookCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Webhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CXMLWebhookCreateRequest'
  /resources/cxml_webhooks/{cxml_webhook_id}/addresses:
    get:
      operationId: CXMLWebhookAddresses_list
      summary: List cXML Webhook Addresses
      description: This endpoint returns a list of addresses associated with a specific cXML Webhook.
      parameters:
        - $ref: '#/components/parameters/CXMLWebhookIDPath'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLWebhookAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Webhook
  /resources/cxml_webhooks/{id}:
    get:
      operationId: CXMLWebhooks_read
      summary: Get cXML Webhook
      description: Returns an cXML Webhook by ID
      parameters:
        - $ref: '#/components/parameters/CXMLWebhookID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLWebhookResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Webhook
    patch:
      operationId: CXMLWebhooks_update
      summary: Update cXML Webhook
      description: Updates an cXML Webhook by ID
      parameters:
        - $ref: '#/components/parameters/CXMLWebhookID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLWebhookResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CXMLWebhookUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Webhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CXMLWebhookUpdateRequest'
    delete:
      operationId: CXMLWebhooks_delete
      summary: Delete cXML Webhook
      description: Deletes an cXML Webhook by ID
      parameters:
        - $ref: '#/components/parameters/CXMLWebhookID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - cXML Webhook
  /resources/dialogflow_agents:
    get:
      operationId: DialogflowAgents_list
      summary: List Dialogflow Agents
      description: A list of Dialogflow Agents
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DialogflowAgentResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'AI Agents: Dialogflow'
  /resources/dialogflow_agents/{id}:
    get:
      operationId: DialogflowAgents_read
      summary: Get Dialogflow Agent
      description: Returns a Dialogflow Agent by ID
      parameters:
        - $ref: '#/components/parameters/DialogflowAgentPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DialogflowAgentResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'AI Agents: Dialogflow'
    put:
      operationId: DialogflowAgents_update
      summary: Update Dialogflow Agent
      description: Updates a Dialogflow Agent by ID
      parameters:
        - $ref: '#/components/parameters/DialogflowAgentPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DialogflowAgentResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DialogflowAgentUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'AI Agents: Dialogflow'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DialogflowAgentUpdateRequest'
    delete:
      operationId: DialogflowAgents_delete
      summary: Delete Dialogflow Agent
      description: Deletes a Dialogflow Agent by ID
      parameters:
        - $ref: '#/components/parameters/DialogflowAgentPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'AI Agents: Dialogflow'
  /resources/dialogflow_agents/{id}/addresses:
    get:
      operationId: DialogflowAgentAddresses_list
      summary: List Dialogflow Agent Addresses
      description: This endpoint returns a list of addresses associated with a specific Dialogflow Agent.
      parameters:
        - $ref: '#/components/parameters/DialogflowAgentAddressPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DialogflowAgentAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'AI Agents: Dialogflow'
  /resources/freeswitch_connectors:
    get:
      operationId: FreeswitchConnectors_list
      summary: List FreeSWITCH Connectors
      description: A list of FreeSWITCH Connectors
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreeswitchConnectorResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - FreeSWITCH Connectors
    post:
      operationId: FreeswitchConnectors_create
      summary: Create FreeSWITCH Connector
      description: Creates a FreeSWITCH Connector
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeswitchConnectorResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeswitchConnectorCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - FreeSWITCH Connectors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreeswitchConnectorCreateRequest'
  /resources/freeswitch_connectors/{id}:
    get:
      operationId: FreeswitchConnectors_read
      summary: Get FreeSWITCH Connector
      description: Returns a FreeSWITCH Connector by ID
      parameters:
        - $ref: '#/components/parameters/FreeswitchConnectorPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeswitchConnectorResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - FreeSWITCH Connectors
    put:
      operationId: FreeswitchConnectors_update
      summary: Update FreeSWITCH Connector
      description: Updates a FreeSWITCH Connector by ID
      parameters:
        - $ref: '#/components/parameters/FreeswitchConnectorPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeswitchConnectorResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeswitchConnectorUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - FreeSWITCH Connectors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreeswitchConnectorUpdateRequest'
    delete:
      operationId: FreeswitchConnectors_delete
      summary: Delete FreeSWITCH Connector
      description: Deletes a FreeSWITCH Connector by ID
      parameters:
        - $ref: '#/components/parameters/FreeswitchConnectorPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - FreeSWITCH Connectors
  /resources/freeswitch_connectors/{id}/addresses:
    get:
      operationId: FreeswitchConnectorAddresses_list
      summary: List FreeSWITCH Connector Addresses
      description: This endpoint returns a list of addresses associated with a specific FreeSWITCH Connector.
      parameters:
        - $ref: '#/components/parameters/FreeswitchConnectorAddressPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeswitchConnectorAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - FreeSWITCH Connectors
  /resources/relay_applications:
    get:
      operationId: RelayApplications_list
      summary: List Relay Applications
      description: A list of Relay Applications
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelayApplicationResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Relay Applications
    post:
      operationId: RelayApplications_create
      summary: Create Relay Application
      description: Creates a Relay Application
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayApplicationResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayApplicationCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Relay Applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelayApplicationCreateRequest'
  /resources/relay_applications/{id}:
    get:
      operationId: RelayApplications_read
      summary: Get Relay Application
      description: Returns a Relay Application by ID
      parameters:
        - $ref: '#/components/parameters/RelayApplicationPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayApplicationResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Relay Applications
    put:
      operationId: RelayApplications_update
      summary: Update Relay Application
      description: Updates a Relay Application by ID
      parameters:
        - $ref: '#/components/parameters/RelayApplicationPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayApplicationResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayApplicationUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Relay Applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelayApplicationUpdateRequest'
    delete:
      operationId: RelayApplications_delete
      summary: Delete Relay Application
      description: Deletes a Relay Application by ID
      parameters:
        - $ref: '#/components/parameters/RelayApplicationPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Relay Applications
  /resources/relay_applications/{id}/addresses:
    get:
      operationId: RelayApplicationAddresses_list
      summary: List Relay Application Addresses
      description: This endpoint returns a paginated list of addresses associated with a Relay Application.
      parameters:
        - $ref: '#/components/parameters/RelayApplicationAddressPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayApplicationAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Relay Applications
  /resources/sip_endpoints:
    get:
      operationId: SipEndpoints_list
      summary: List SIP Endpoints
      description: A list of SIP Endpoints
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SipEndpointResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Endpoints
    post:
      operationId: SipEndpoints_create
      summary: Create SIP Endpoint
      description: Creates a SIP Endpoint
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipEndpointResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSipEndpointCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipEndpointCreateRequest'
  /resources/sip_endpoints/resources/{id}/sip_endpoints:
    post:
      operationId: ResourceSipEndpoints_assign
      summary: Assign a Resource to a SIP endpoint
      description: |-
        This endpoint assigns a specific resource to a SIP endpoint, allowing inbound calls to be handled by the resource.
        :::important
        Currently only supports `calling` as a handler and automatically defaults to it.
        :::
      parameters:
        - $ref: '#/components/parameters/ResourceSipEndpointPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSipEndpointResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSubSipEndpointCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceSipEndpointAssignRequest'
  /resources/sip_endpoints/{id}:
    get:
      operationId: SipEndpoints_read
      summary: Get SIP Endpoint
      description: Returns a SIP Endpoint by ID
      parameters:
        - $ref: '#/components/parameters/SipEndpointPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipEndpointResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Endpoints
    put:
      operationId: SipEndpoints_update
      summary: Update SIP Endpoint
      description: Updates a SIP Endpoint by ID
      parameters:
        - $ref: '#/components/parameters/SipEndpointPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipEndpointResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSipEndpointUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipEndpointUpdateRequest'
    delete:
      operationId: SipEndpoints_delete
      summary: Delete SIP Endpoint
      description: Deletes a SIP Endpoint by ID
      parameters:
        - $ref: '#/components/parameters/SipEndpointPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Endpoints
  /resources/sip_endpoints/{id}/addresses:
    get:
      operationId: SipEndpointAddresses_list
      summary: List SIP Endpoint Addresses
      description: A list of SIP Endpoint Addresses.
      parameters:
        - $ref: '#/components/parameters/SipEndpointAddressPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipEndpointAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Endpoints
  /resources/sip_gateways:
    get:
      operationId: SipGateways_list
      summary: List SIP Gateways
      description: Returns a paginated list of SIP Gateways for the authenticated project.
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipGatewayListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Gateway
    post:
      operationId: SipGateways_create
      summary: Create SIP Gateway
      description: Creates a SIP Gateway that can be used to dial external SIP entities.
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipGatewayCreateResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipGatewayCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Gateway
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipGatewayCreateRequest'
  /resources/sip_gateways/resources/sip_gateways/{resource_id}/addresses:
    get:
      operationId: RelayApplicationAddresses_readAddressesByResourceId
      summary: List Fabric Addresses assigned to a SIP Gateway
      description: Returns a paginated list of Fabric Addresses associated with the specified SIP Gateway.
      parameters:
        - $ref: '#/components/parameters/SipGatewayAddressRequest'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipGatewayAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Gateway
  /resources/sip_gateways/{id}:
    get:
      operationId: SipGateways_read
      summary: Get SIP Gateway
      description: Returns an SIP Gateway by ID
      parameters:
        - $ref: '#/components/parameters/SipGatewayID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipGatewayResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Gateway
    patch:
      operationId: SipGateways_update
      summary: Update SIP Gateway
      description: Updates a SIP Gateway by ID
      parameters:
        - $ref: '#/components/parameters/SipGatewayID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipGatewayUpdateResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipGatewayCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Gateway
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipGatewayCreateRequestUpdate'
    delete:
      operationId: SipGateways_delete
      summary: Delete SIP Gateway
      description: Deletes a SIP Gateway} by ID
      parameters:
        - $ref: '#/components/parameters/SipGatewayID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SIP Gateway
  /resources/subscribers:
    get:
      operationId: Subscribers_list
      summary: List Subscribers
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Subscribers
    post:
      operationId: Subscribers_create
      summary: Create Subscriber
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Subscribers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberRequest'
  /resources/subscribers/{fabric_subscriber_id}/sip_endpoints:
    get:
      operationId: SubscriberSipEndpoint_list
      summary: List Subscriber SIP Endpoints
      description: A list of Sip Endpoints of the Subscriber
      parameters:
        - $ref: '#/components/parameters/FabricSubscriberID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberSipEndpointListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'Subscribers: SIP Endpoints'
    post:
      operationId: SubscriberSipEndpoint_create
      summary: Create Subscriber SIP Endpoint
      description: Creates a Subscriber Sip Endpoint
      parameters:
        - $ref: '#/components/parameters/FabricSubscriberID'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIPEndpoint'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipEndpointCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'Subscribers: SIP Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberSipEndpointRequest'
  /resources/subscribers/{fabric_subscriber_id}/sip_endpoints/{id}:
    get:
      operationId: SubscriberSipEndpoint_read
      summary: Get Subscriber SIP Endpoint
      description: Returns a Subscriber Sip Endpoint by ID
      parameters:
        - $ref: '#/components/parameters/SIPEndpointID'
        - $ref: '#/components/parameters/FabricSubscriberID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIPEndpoint'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'Subscribers: SIP Endpoints'
    patch:
      operationId: SubscriberSipEndpoint_update
      summary: Update Subscriber SIP Endpoint
      description: Updates a Subscriber Sip Endpoint by ID
      parameters:
        - $ref: '#/components/parameters/SIPEndpointID'
        - $ref: '#/components/parameters/FabricSubscriberID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIPEndpoint'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipEndpointUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'Subscribers: SIP Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberSipEndpointRequestUpdate'
    delete:
      operationId: SubscriberSipEndpoint_delete
      summary: Delete Subscriber SIP Endpoint
      description: Deletes a Subscriber Sip Endpoint by ID
      parameters:
        - $ref: '#/components/parameters/SIPEndpointID'
        - $ref: '#/components/parameters/FabricSubscriberID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'Subscribers: SIP Endpoints'
  /resources/subscribers/{id}:
    get:
      operationId: Subscribers_get
      summary: Get Subscriber
      parameters:
        - $ref: '#/components/parameters/SubscriberPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Subscribers
    put:
      operationId: Subscribers_update
      summary: Update Subscriber
      parameters:
        - $ref: '#/components/parameters/SubscriberPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Subscribers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberRequest'
    delete:
      operationId: Subscribers_delete
      summary: Delete Subscriber
      parameters:
        - $ref: '#/components/parameters/SubscriberPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Subscribers
  /resources/subscribers/{id}/addresses:
    get:
      operationId: SubscriberAddresses_list
      summary: List Subscriber Addresses
      parameters:
        - $ref: '#/components/parameters/SubscriberAddressID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriberAddressesResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Subscribers
  /resources/swml_scripts:
    get:
      operationId: SwmlScripts_list
      summary: List SWML Scripts
      description: A list of SWML Scripts
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SwmlScriptResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SWML Scripts
    post:
      operationId: SwmlScripts_create
      summary: Create SWML Script
      description: Creates a SWML Script
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwmlScriptResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwmlScriptCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SWML Scripts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwmlScriptCreateRequest'
  /resources/swml_scripts/{id}:
    get:
      operationId: SwmlScripts_read
      summary: Get SWML Script
      description: Returns a SWML Script by ID
      parameters:
        - $ref: '#/components/parameters/SwmlScriptPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwmlScriptResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SWML Scripts
    put:
      operationId: SwmlScripts_update
      summary: Update SWML Script
      description: Updates a SWML Script by ID
      parameters:
        - $ref: '#/components/parameters/SwmlScriptPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwmlScriptResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwmlScriptUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SWML Scripts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwmlScriptUpdateRequest'
    delete:
      operationId: SwmlScripts_delete
      summary: Delete SWML Script
      description: Deletes a SWML Script by ID
      parameters:
        - $ref: '#/components/parameters/SwmlScriptPathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SWML Scripts
  /resources/swml_scripts/{id}/addresses:
    get:
      operationId: SWMLScriptAddresses_list
      summary: List SWML Script Addresses
      description: This endpoints returns a list of addresses associated with a specific SWML script.
      parameters:
        - $ref: '#/components/parameters/SWMLScriptAddressPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SWMLScriptAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SWML Scripts
  /resources/swml_webhooks:
    get:
      operationId: SWMLWebhooks_list
      summary: List SWML Webhooks
      description: A list of SWML Webhooks
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SWMLWebhookListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SWML Webhook
    post:
      operationId: SWMLWebhooks_create
      summary: Create SWML Webhook
      description: Creates an SWML Webhook
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SWMLWebhookResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwmlWebhookCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SWML Webhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SWMLWebhookCreateRequest'
  /resources/swml_webhooks/{id}:
    get:
      operationId: SWMLWebhooks_read
      summary: Get SWML Webhook
      description: Returns an SWML Webhook by ID
      parameters:
        - $ref: '#/components/parameters/SWMLWebhookID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SWMLWebhookResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SWML Webhook
    patch:
      operationId: SWMLWebhooks_update
      summary: Update SWML Webhook
      description: Updates an SWML Webhook by ID
      parameters:
        - $ref: '#/components/parameters/SWMLWebhookID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SWMLWebhookResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwmlWebhookUpdateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SWML Webhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SWMLWebhookUpdateRequest'
    delete:
      operationId: SWMLWebhooks_delete
      summary: Delete SWML Webhook
      description: Deletes an SWML Webhook by ID
      parameters:
        - $ref: '#/components/parameters/SWMLWebhookID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SWML Webhook
  /resources/swml_webhooks/{swml_webhook_id}/addresses:
    get:
      operationId: SWMLWebhookAddresses_list
      summary: List SWML Webhook Addresses
      description: This endpoint returns a list of addresses associated with a specific SWML webhook.
      parameters:
        - $ref: '#/components/parameters/SWMLWebhookIDPath'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SWMLWebhookAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - SWML Webhook
  /resources/{id}:
    get:
      operationId: Resources_read
      summary: Get Resource
      description: Returns a Resource by ID
      parameters:
        - $ref: '#/components/parameters/ResourcePathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Resources
    delete:
      operationId: Resources_delete
      summary: Delete Resource
      description: Deletes a Resource by ID
      parameters:
        - $ref: '#/components/parameters/ResourcePathID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Resources
  /resources/{id}/addresses:
    get:
      operationId: ResourceAddresses_list
      summary: List Resource Addresses
      description: This endpoint is used to retrieve addresses associated with a specific Resource.
      parameters:
        - $ref: '#/components/parameters/ResourceAddressPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAddressListResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Resources
  /resources/{id}/domain_applications:
    post:
      operationId: DomainApplications_assign
      summary: Assign a resource as a call handler for a Domain Application.
      description: |-
        This endpoint assigns a specific resource to a Domain Application, allowing inbound calls to be handled by the resource.
        :::important
        Currently only supports `calling` as a handler and automatically defaults to it.
        :::
      parameters:
        - $ref: '#/components/parameters/DomainApplicationPathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainApplicationResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainApplicationCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Domain Applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainApplicationAssignRequest'
  /resources/{id}/phone_routes:
    post:
      operationId: PhoneRoutes_assign
      summary: Assign a Resource to a Phone Route
      description: This endpoint assigns a specific resource to a phone route, allowing inbound calls & messages to be handled by the resource.
      parameters:
        - $ref: '#/components/parameters/PhoneRoutePathID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneRouteResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneRouteCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Phone Routes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneRouteAssignRequest'
  /subscriber/invites:
    post:
      operationId: InviteTokens_create
      summary: Create a Subscriber Invite Token
      description: Creates a Subscriber Invite Token to be used for client-side API calls. The token is authorized using a subscriber's SAT (Subscriber Access Token)
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberInviteTokenCreateResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteTokenCreateStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'Subscribers: Tokens'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberInviteTokenCreateRequest'
  /subscribers/tokens:
    post:
      operationId: SubscriberTokens_create
      summary: Create Subscriber Token
      description: Create a Subscriber Token
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberTokenResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberTokenStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - Subscribers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberTokenRequest'
  /subscribers/tokens/refresh:
    post:
      operationId: RefreshTokens_create
      summary: Exchange a refresh token for a new subscriber access token
      description: Exchanges a valid refresh token for a new subscriber access token and a new refresh token. The new access token is valid for 2 hours, and the new refresh token is valid for 2 hours and 5 minutes.
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberRefreshTokenResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenStatusCode422'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode500'
      tags:
        - 'Subscribers: Tokens'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberRefreshTokenRequest'
security:
  - BasicAuth: []
components:
  parameters:
    AIAgentIDPath:
      name: ai_agent_id
      in: path
      required: true
      description: Unique ID of a AI Agent.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    AIAgentPathID:
      name: id
      in: path
      required: true
      description: Unique ID of an AI Agent.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    CXMLScriptAddressPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the cXML Script.
      schema:
        type: string
        format: uuid
    CXMLScriptPathID:
      name: id
      in: path
      required: true
      description: Unique ID of a cXML Script.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    CXMLWebhookID:
      name: id
      in: path
      required: true
      description: Unique ID of a CXML Webhook.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    CXMLWebhookIDPath:
      name: cxml_webhook_id
      in: path
      required: true
      description: Unique ID of a CXML Webhook.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    CallFlowAddressPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the Call Flow.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    CallFlowPathID:
      name: id
      in: path
      required: true
      description: Unique ID of a Call Flow.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    CallFlowVersionPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the Call Flow.
      schema:
        type: string
    ConferenceRoomAddressPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the Conference Room.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    ConferenceRoomPathID:
      name: id
      in: path
      required: true
      description: Unique ID of a Conference Room.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    CxmlApplicationAddressPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the cXML Application.
      schema:
        type: string
        format: uuid
    CxmlApplicationPathID:
      name: id
      in: path
      required: true
      description: Unique ID of a LAML Application.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    DialogflowAgentAddressPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the Dialogflow Agent Address.
      schema:
        type: string
        format: uuid
    DialogflowAgentPathID:
      name: id
      in: path
      required: true
      description: Unique ID of a Dialogflow Agent.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    DomainApplicationPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the Resource.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    FabricAddressID:
      name: id
      in: path
      required: true
      description: Unique ID of a FabricAddress.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    FabricSubscriberID:
      name: fabric_subscriber_id
      in: path
      required: true
      description: Unique ID of a Fabric Subscriber.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    FreeswitchConnectorAddressPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the FreeSWITCH Connector.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    FreeswitchConnectorPathID:
      name: id
      in: path
      required: true
      description: Unique ID of a FreeSWITCH Connector.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    PhoneRoutePathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the Resource.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    RelayApplicationAddressPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the Relay Application.
      schema:
        type: string
        format: uuid
    RelayApplicationPathID:
      name: id
      in: path
      required: true
      description: Unique ID of a Relay Application.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    ResourceAddressPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the Resource.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    ResourcePathID:
      name: id
      in: path
      required: true
      description: Unique ID of a Resource.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    ResourceSipEndpointPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the Resource.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    SIPEndpointID:
      name: id
      in: path
      required: true
      description: Unique ID of a Sip Endpoint.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    SWMLScriptAddressPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the SWML Script.
      schema:
        type: string
        format: uuid
    SWMLWebhookID:
      name: id
      in: path
      required: true
      description: Unique ID of a SWML Webhook.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    SWMLWebhookIDPath:
      name: swml_webhook_id
      in: path
      required: true
      description: Unique ID of a SWML Webhook.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    SipEndpointAddressPathID:
      name: id
      in: path
      required: true
      description: The unique identifier of the SIP Endpoint.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    SipEndpointPathID:
      name: id
      in: path
      required: true
      description: Unique ID of a SIP Endpoint.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    SipGatewayAddressRequest:
      name: resource_id
      in: path
      required: true
      description: The unique identifier of the SIP Gateway.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    SipGatewayID:
      name: id
      in: path
      required: true
      description: Unique ID of a SIP Gateway.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    SubscriberAddressID:
      name: id
      in: path
      required: true
      description: Unique ID of a Subscriber Address.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    SubscriberPathID:
      name: id
      in: path
      required: true
      description: Unique ID of a Subscriber.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
    SwmlScriptPathID:
      name: id
      in: path
      required: true
      description: Unique ID of a SWML Script.
      schema:
        $ref: '#/components/schemas/uuid'
        format: uuid
  schemas:
    AIAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/ai_agents/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/ai_agents/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/ai_agents/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/ai_agents/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    AIAgentAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddressApp'
        links:
          $ref: '#/components/schemas/AIAddressPaginationResponse'
    AIAgentCreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the AI Agent.
          example: My AI Agent
        prompt:
          allOf:
            - $ref: '#/components/schemas/AIPrompt'
          description: Establishes the initial set of instructions and settings to configure the agent.
        post_prompt:
          allOf:
            - $ref: '#/components/schemas/AIPostPrompt'
          description: The final set of instructions and configuration settings to send to the agent.
        params:
          allOf:
            - $ref: '#/components/schemas/AIParams'
          description: A JSON object containing parameters as key-value pairs.
        pronounce:
          type: array
          items:
            $ref: '#/components/schemas/Pronounce'
          description: An array of JSON objects to clarify the AI's pronunciation of words or expressions.
        hints:
          type: array
          items:
            type: string
          description: An array of hints (as strings) to provide context to the dialogue.
          example:
            - One Hint
            - Two Hint
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Languages'
          description: An array of JSON objects defining supported languages in the conversation.
        SWAIG:
          allOf:
            - $ref: '#/components/schemas/SWAIG'
          description: A JSON object to create user-defined functions/endpoints that can be executed during the dialogue.
    AIAgentCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: Name can't be blank
            attribute: name
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    AIAgentListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AIAgentResponse'
        links:
          $ref: '#/components/schemas/AIAgentPaginationResponse'
    AIAgentPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/ai_agents?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/ai_agents?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/ai_agents?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/ai_agents?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    AIAgentResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - ai_agent
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the AIAgent.
          example: a87db7ed-8ebe-42e4-829f-8ba5a4152f54
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 99151cf8-9548-4860-ba70-a8de824f3312
        display_name:
          type: string
          description: Display name of the AIAgent Fabric Resource
          example: Booking Assistant
        type:
          type: string
          enum:
            - ai_agent
          description: Type of the Fabric Resource
          example: ai_agent
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        ai_agent:
          allOf:
            - $ref: '#/components/schemas/AIAgentWithID'
          description: AIAgent data.
    AIAgentUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the AI Agent.
          example: My AI Agent
        prompt:
          allOf:
            - $ref: '#/components/schemas/AIPromptUpdate'
          description: Establishes the initial set of instructions and settings to configure the agent.
        post_prompt:
          allOf:
            - $ref: '#/components/schemas/AIPostPromptUpdate'
          description: The final set of instructions and configuration settings to send to the agent.
        params:
          allOf:
            - $ref: '#/components/schemas/AIParams'
          description: A JSON object containing parameters as key-value pairs.
        pronounce:
          type: array
          items:
            $ref: '#/components/schemas/Pronounce'
          description: An array of JSON objects to clarify the AI's pronunciation of words or expressions.
        hints:
          type: array
          items:
            type: string
          description: An array of hints (as strings) to provide context to the dialogue.
          example:
            - One Hint
            - Two Hint
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Languages'
          description: An array of JSON objects defining supported languages in the conversation.
        SWAIG:
          allOf:
            - $ref: '#/components/schemas/SWAIG'
          description: A JSON object to create user-defined functions/endpoints that can be executed during the dialogue.
    AIAgentUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: Name can't be blank
            attribute: name
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    AIAgentWithID:
      type: object
      required:
        - agent_id
        - name
      properties:
        agent_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of an AI Agent.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          description: Name of the AI Agent.
          example: My AI Agent
        prompt:
          allOf:
            - $ref: '#/components/schemas/AIPrompt'
          description: Establishes the initial set of instructions and settings to configure the agent.
        post_prompt:
          allOf:
            - $ref: '#/components/schemas/AIPostPrompt'
          description: The final set of instructions and configuration settings to send to the agent.
        params:
          allOf:
            - $ref: '#/components/schemas/AIParams'
          description: A JSON object containing parameters as key-value pairs.
        pronounce:
          type: array
          items:
            $ref: '#/components/schemas/Pronounce'
          description: An array of JSON objects to clarify the AI's pronunciation of words or expressions.
        hints:
          type: array
          items:
            type: string
          description: An array of hints (as strings) to provide context to the dialogue.
          example:
            - One Hint
            - Two Hint
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Languages'
          description: An array of JSON objects defining supported languages in the conversation.
        SWAIG:
          allOf:
            - $ref: '#/components/schemas/SWAIG'
          description: A JSON object to create user-defined functions/endpoints that can be executed during the dialogue.
    AIParams:
      type: object
      properties:
        acknowledge_interruptions:
          type: boolean
          description: Instructs the agent to acknowledge crosstalk and confirm user input when the user speaks over the agent.
        ai_volume:
          type: integer
          minimum: -50
          maximum: 50
          description: Adjust the volume of the AI. Allowed values from `-50` - `50`.
        attention_timeout:
          anyOf:
            - $ref: '#/components/schemas/IntegerOrZero'
            - type: number
              enum:
                - 0
          description: Amount of time, in ms, to wait before prompting the user to respond. Allowed values from `10,000` - `600,000`. Set to `0` to disable.
        attention_timeout_prompt:
          type: string
          description: A custom prompt that is fed into the AI when the attention_timeout is reached.
          example: Ask if the user would like you to repeat yourself, or if they need more time to respond.
        background_file:
          type: string
          format: uri
          description: URL of audio file to play in the background while AI plays in foreground.
          example: https://cdn.signalwire.com/default-music/welcome.mp3
        background_file_loops:
          type: integer
          nullable: true
          description: Maximum number of times to loop playing the background file. `undefined` means loop indefinitely.
          example: 5
        background_file_volume:
          type: integer
          minimum: -50
          maximum: 50
          description: Defines background_file volume within a range of `-50` to `50`.
        barge_match_string:
          type: string
          description: |-
            Takes a string, including a regular expression, defining barge behavior.
            For example, this param can direct the AI to stop when the word 'hippopotomus' is input.
          example: Cancel order
        barge_min_words:
          type: integer
          minimum: 1
          maximum: 99
          description: Defines the number of words that must be input before triggering barge behavior, in a range of `1-99`.
        conscience:
          type: string
          description: Sets the prompt which binds the agent to its purpose.
          example: Place an order
        conversation_id:
          type: string
          description: Used by `check_for_input` and `save_conversation` to identify an individual conversation.
          example: Conversation ID
        debug_webhook_level:
          type: integer
          minimum: 0
          maximum: 1
          description: Enables debugging to the set URL. Allowed values from `0` - `1`.
        debug_webhook_url:
          type: string
          format: uri
          description: Each interaction between the AI and end user is posted in real time to the established URL.
          example: https://example.com
        direction:
          type: array
          items:
            $ref: '#/components/schemas/Direction'
          description: Forces the direction of the call to the assistant. Valid values are `inbound` and `outbound`.
        digit_termiantors:
          type: string
          description: "DTMF digit, as a string, to signal the end of input (ex: '#')"
          example: '#'
        digit_timeout:
          type: integer
          minimum: 250
          maximum: 10000
          description: Time, in ms, at the end of digit input to detect end of input. Allowed values from `250` - `10,000`.
        end_of_speech_timeout:
          type: integer
          minimum: 250
          maximum: 10000
          description: Amount of silence, in ms, at the end of an utterance to detect end of speech. Allowed values from `250` - `10,000`.
        eleven_labs_stability:
          type: number
          description: The stability slider determines how stable the voice is and the randomness between each generation. Lowering this slider introduces a broader emotional range for the voice.
        eleven_labs_similarity:
          type: number
          description: The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it. The higher the similarity, the closer the AI will sound to the original voice.
        energy_level:
          type: number
          minimum: 0
          maximum: 100
          description: Amount of energy necessary for bot to hear you (in dB). Allowed values from `0.0` - `100.0`.
        hold_music:
          type: string
          format: uri
          description: A URL for the hold music to play, accepting WAV, mp3, and FreeSWITCH tone_stream.
          example: https://cdn.signalwire.com/default-music/welcome.mp3
        hold_on_process:
          type: boolean
          description: Enables hold music during SWAIG processing.
        inactivity_timeout:
          type: integer
          minimum: 10000
          maximum: 3600000
          description: Amount of time, in ms, to wait before exiting the app due to inactivity. Allowed values from `10,000` - `3,600,000`.
        input_poll_freq:
          type: string
          description: |-
            Check for input function with check_for_input.
            Example use case: Feeding an inbound SMS to AI on a voice call, eg., for collecting an email address or other complex information.
        interrupt_on_noise:
          type: boolean
          description: When enabled, barges agent upon any sound interruption longer than 1 second.
        interrupt_prompt:
          type: string
          description: Provide a prompt for the agent to handle crosstalk.
          example: Inform user that you can't hear anything
        languages_enabled:
          type: boolean
          description: Allows multilingualism when `true`.
        local_tz:
          type: string
          description: The local timezone setting for the AI. Value should use `IANA TZ ID`
          example: America/Ensenada
        outbound_attention_timeout:
          type: integer
          minimum: 10000
          maximum: 600000
          description: Sets a time duration for the outbound call recipient to respond to the AI agent before timeout, in a range from `10000` to `600000`.
        save_conversation:
          type: boolean
          description: |-
            Send a summary of the conversation after the call ends.
            This requires a `post_url` to be set in the ai parameters and the `conversation_id` defined below.
            This eliminates the need for a `post_prompt` in the ai parameters.
        swaig_allow_settings:
          type: boolean
          description: Allows tweaking any of the indicated settings, such as `barge_match_string`, using the returned SWML from the SWAIG function.
        swaig_allow_swml:
          type: boolean
          description: Allows your SWAIG to return SWML to be executed.
        swaig_post_conversation:
          type: boolean
          description: Post entire conversation to any SWAIG call.
        transfer_summary:
          type: boolean
          description: Pass a summary of a conversation from one AI agent to another. For example, transfer a call summary between support agents in two departments.
        verbose_logs:
          type: boolean
          description: Enable verbose logging.
        wait_for_user:
          type: boolean
          description: When false, AI agent will initialize dialogue after call is setup. When true, agent will wait for the user to speak first.
      title: params object
    AIPostPrompt:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: The instructions to send to the agent.
          example: Your name is Franklin and you are taking orders for Franklin's Pizza. Begin by greeting the caller, and ask if they'd like to place an order for pickup or delivery.
        temperature:
          type: number
          minimum: 0
          maximum: 1.5
          description: Randomness setting. Float value between 0.0 and 1.5. Closer to 0 will make the output less random.
        top_p:
          type: number
          minimum: 0
          maximum: 1
          description: Randomness setting. Alternative to `temperature`. Float value between 0.0 and 1.0. Closer to 0 will make the output less random.
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: |-
            Threshold to fire a speech-detect event at the end of the utterance. Float value between 0.0 and 1.0.
            Decreasing this value will reduce the pause after the user speaks, but may introduce false positives.
        presence_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics.
        frequency_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to repeating lines. Float value between -2.0 and 2.0. Positive values decrease the model's likelihood to repeat the same line verbatim.
      title: post_prompt
    AIPostPromptUpdate:
      type: object
      properties:
        text:
          type: string
          description: The instructions to send to the agent.
          example: Your name is Franklin and you are taking orders for Franklin's Pizza. Begin by greeting the caller, and ask if they'd like to place an order for pickup or delivery.
        temperature:
          type: number
          minimum: 0
          maximum: 1.5
          description: Randomness setting. Float value between 0.0 and 1.5. Closer to 0 will make the output less random.
        top_p:
          type: number
          minimum: 0
          maximum: 1
          description: Randomness setting. Alternative to `temperature`. Float value between 0.0 and 1.0. Closer to 0 will make the output less random.
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: |-
            Threshold to fire a speech-detect event at the end of the utterance. Float value between 0.0 and 1.0.
            Decreasing this value will reduce the pause after the user speaks, but may introduce false positives.
        presence_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics.
        frequency_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to repeating lines. Float value between -2.0 and 2.0. Positive values decrease the model's likelihood to repeat the same line verbatim.
      title: post_prompt
    AIPrompt:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: The instructions to send to the agent.
          example: Your name is Franklin and you are taking orders for Franklin's Pizza. Begin by greeting the caller, and ask if they'd like to place an order for pickup or delivery.
        temperature:
          type: number
          minimum: 0
          maximum: 1.5
          description: Randomness setting. Float value between 0.0 and 1.5. Closer to 0 will make the output less random.
        top_p:
          type: number
          minimum: 0
          maximum: 1
          description: Randomness setting. Alternative to `temperature`. Float value between 0.0 and 1.0. Closer to 0 will make the output less random.
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: |-
            Threshold to fire a speech-detect event at the end of the utterance. Float value between 0.0 and 1.0.
            Decreasing this value will reduce the pause after the user speaks, but may introduce false positives.
        presence_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics.
        frequency_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to repeating lines. Float value between -2.0 and 2.0. Positive values decrease the model's likelihood to repeat the same line verbatim.
        contexts:
          allOf:
            - $ref: '#/components/schemas/Contexts'
          description: |-
            An object that defines the context steps for the AI. The context steps are used to define the flow of the conversation.
            Every context object requires a `default` key, which is the default context to use at the beginning of the conversation.
            Additionally, more context steps can be defined as any other key in the object.
      title: prompt
    AIPromptUpdate:
      type: object
      properties:
        text:
          type: string
          description: The instructions to send to the agent.
          example: Your name is Franklin and you are taking orders for Franklin's Pizza. Begin by greeting the caller, and ask if they'd like to place an order for pickup or delivery.
        temperature:
          type: number
          minimum: 0
          maximum: 1.5
          description: Randomness setting. Float value between 0.0 and 1.5. Closer to 0 will make the output less random.
        top_p:
          type: number
          minimum: 0
          maximum: 1
          description: Randomness setting. Alternative to `temperature`. Float value between 0.0 and 1.0. Closer to 0 will make the output less random.
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: |-
            Threshold to fire a speech-detect event at the end of the utterance. Float value between 0.0 and 1.0.
            Decreasing this value will reduce the pause after the user speaks, but may introduce false positives.
        presence_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics.
        frequency_penalty:
          type: number
          minimum: -2
          maximum: 2
          description: Aversion to repeating lines. Float value between -2.0 and 2.0. Positive values decrease the model's likelihood to repeat the same line verbatim.
        contexts:
          allOf:
            - $ref: '#/components/schemas/ContextsUpdate'
          description: |-
            An object that defines the context steps for the AI. The context steps are used to define the flow of the conversation.
            Every context object requires a `default` key, which is the default context to use at the beginning of the conversation.
            Additionally, more context steps can be defined as any other key in the object.
      title: prompt
    Action:
      anyOf:
        - $ref: '#/components/schemas/ContextSwitchAction'
        - $ref: '#/components/schemas/PlaybackBGAction'
        - $ref: '#/components/schemas/SayAction'
        - $ref: '#/components/schemas/SetGlobalDataAction'
        - $ref: '#/components/schemas/SetMetaDataAction'
        - $ref: '#/components/schemas/StopAction'
        - $ref: '#/components/schemas/StopPlaybackBGAction'
        - $ref: '#/components/schemas/ToggleFunctionsAction'
        - $ref: '#/components/schemas/UnsetGlobalDataAction'
        - $ref: '#/components/schemas/UnsetMetaDataAction'
        - $ref: '#/components/schemas/UserInputAction'
      title: Action union
    AddressChannel:
      anyOf:
        - $ref: '#/components/schemas/AudioChannel'
        - $ref: '#/components/schemas/MessagingChannel'
        - $ref: '#/components/schemas/VideoChannel'
    AllOfProperty:
      type: object
      required:
        - allOf
      properties:
        allOf:
          type: array
          items:
            $ref: '#/components/schemas/SchemaType'
          description: An array of schemas where all of the schemas must be valid.
      title: allOf Property
    AnyOfProperty:
      type: object
      required:
        - anyOf
      properties:
        anyOf:
          type: array
          items:
            $ref: '#/components/schemas/SchemaType'
          description: An array of schemas where at least one of the schemas must be valid.
      title: anyOf Property
    ArrayProperty:
      type: object
      required:
        - type
        - items
      properties:
        description:
          type: string
          description: A description of the property.
          example: Property description
        nullable:
          type: boolean
          description: Whether the property can be null.
        type:
          type: string
          enum:
            - array
          description: The type of parameter(s) the AI is passing to the function.
        default:
          type: array
          items: {}
          description: The default array value
        items:
          allOf:
            - $ref: '#/components/schemas/SchemaType'
          description: Schema for array items
      description: Base interface for all property types
      title: Array Function Property
    AudioChannel:
      type: object
      required:
        - audio
      properties:
        audio:
          type: string
          description: Audio Channel of Fabric Address
          example: /external/resource_name?channel=audio
    BooleanProperty:
      type: object
      required:
        - type
      properties:
        description:
          type: string
          description: A description of the property.
          example: Property description
        nullable:
          type: boolean
          description: Whether the property can be null.
        type:
          type: string
          enum:
            - boolean
          description: The type of parameter(s) the AI is passing to the function.
        default:
          type: boolean
          description: The default boolean value
      description: Base interface for all property types
      title: Boolean Function Property
    CXMLScriptAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddressApp'
          description: List of cXML Script Addresses
        links:
          allOf:
            - $ref: '#/components/schemas/CXMLScriptAddressPaginationResponse'
          description: Pagination links
    CXMLScriptAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/cxml_scripts?page_number=0&page_size=50&type=cxml_script
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/cxml_scripts?page_size=50&type=cxml_script
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/cxml_scripts?page_number=1&page_size=50&page_token=PA08cdad0c-e7e6-4a75-8244-902524f38d55&type=cxml_script
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/cxml_scripts?page_number=0&page_size=50&page_token=PA08cdad0c-e7e6-4a75-8244-902524f38d55&type=cxml_script
    CXMLScriptCreateRequest:
      type: object
      required:
        - display_name
        - contents
      properties:
        display_name:
          type: string
          description: Display name of the cXML Script
          example: Reception Script
        contents:
          type: string
          description: The cXML script contents
          example: <?xml version="1.0" encoding="UTF-8"?><Response><Say>Hello World</Say></Response>
    CXMLScriptCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: contents is required
            attribute: contents
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    CXMLScriptResponse:
      type: object
      required:
        - id
        - project_id
        - name
        - type
        - created_at
        - updated_at
        - cxml_script
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the cXML Script.
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        name:
          type: string
          description: Display name of the cXML Script Fabric Resource
          example: Reception Script
        type:
          type: string
          enum:
            - cxml_script
          description: Type of the Fabric Resource
          example: cxml_script
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        cxml_script:
          allOf:
            - $ref: '#/components/schemas/CXMLScriptWithID'
          description: cXML Script data.
    CXMLScriptUpdateRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Display name of the cXML Script
          example: Reception Script
        contents:
          type: string
          description: The cXML script contents
          example: <?xml version="1.0" encoding="UTF-8"?><Response><Say>Hello World</Say></Response>
    CXMLScriptUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter_value
            message: contents must be valid cXML
            attribute: contents
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#invalid_parameter_value
    CXMLScriptWithID:
      type: object
      required:
        - id
        - contents
        - request_count
        - last_accessed_at
        - request_url
        - script_type
        - display_name
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of a cXML Script.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        contents:
          type: string
          description: The cXML script contents
          example: <?xml version="1.0" encoding="UTF-8"?><Response><Say>Hello World</Say></Response>
        request_count:
          type: integer
          format: int32
          description: The amout of times the cXML script has been requested
          example: 5
        last_accessed_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the cXML script was last accessed
          example: '2023-10-01T12:00:00Z'
        request_url:
          type: string
          format: uri
          description: The URL where the cXML script can be accessed
          example: https://example.signalwire.com/laml-bins/2537c89e-2606-48c2-b3c2-bb601d863d1e
        script_type:
          type: string
          enum:
            - calling
            - messaging
          description: The script type the cXML Script is used for
          example: calling
        display_name:
          type: string
          description: Display name of the cXML Script Fabric Resource
          example: Booking Assistant Script
        status_callback_url:
          type: string
          format: uri
          nullable: true
          description: The url that will send status updates for the cXML Script
          example: https://example.com/cxml/status
        status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for status callback URL
          example: POST
    CXMLWebhook:
      type: object
      required:
        - id
        - name
        - used_for
        - primary_request_url
        - primary_request_method
        - fallback_request_url
        - fallback_request_method
        - status_callback_url
        - status_callback_method
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the CXML Webhook.
          example: a87db7ed-8ebe-42e4-829f-8ba5a4152f54
        name:
          type: string
          description: Name of the CXML Webhook.
          example: My CXML Webhook
        used_for:
          allOf:
            - $ref: '#/components/schemas/UsedForType'
          description: Used for of the CXML Webhook.
          example: calling
        primary_request_url:
          type: string
          description: Primary request url of the CXML Webhook.
          example: https://primary.com
        primary_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Primary request method of the CXML Webhook.
          example: GET
        fallback_request_url:
          type: string
          description: Fallback request url of the CXML Webhook.
          example: https://fallback.com
        fallback_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Fallback request method of the CXML Webhook.
          example: GET
        status_callback_url:
          type: string
          description: Status callback url of the CXML Webhook.
          example: https://callback.com
        status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Status callback method of the CXML Webhook.
          example: POST
    CXMLWebhookAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddressApp'
        links:
          $ref: '#/components/schemas/CXMLWebhookAddressPaginationResponse'
    CXMLWebhookAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/cxml_webhooks/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/cxml_webhooks/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/cxml_webhooks/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/cxml_webhooks/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    CXMLWebhookCreateRequest:
      type: object
      required:
        - primary_request_url
      properties:
        name:
          type: string
          description: Name of the CXML Webhook.
          example: My CXML Webhook
        used_for:
          type: string
          enum:
            - calling
            - messaging
          description: Used for of the CXML Webhook.
          example: calling
          default: calling
        primary_request_url:
          type: string
          description: Primary request url of the CXML Webhook.
          example: https://primary.com
        primary_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Primary request method of the CXML Webhook.
          example: GET
          default: POST
        fallback_request_url:
          type: string
          description: Fallback request url of the CXML Webhook.
          example: https://fallback.com
        fallback_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Fallback request method of the CXML Webhook.
          example: GET
          default: POST
        status_callback_url:
          type: string
          description: Status callback url of the CXML Webhook.
          example: https://callback.com
        status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Status callback method of the CXML Webhook.
          example: GET
          default: POST
    CXMLWebhookCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: http_url_required
            message: This value must be an HTTP or HTTPS URL.
            attribute: status_callback_url
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#http_url_required
    CXMLWebhookListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CXMLWebhookResponse'
        links:
          $ref: '#/components/schemas/CXMLWebhookPaginationResponse'
    CXMLWebhookPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/cxml_webhooks?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/cxml_webhooks?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/cxml_webhooks?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/cxml_webhooks?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    CXMLWebhookResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - cxml_webhook
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the CXMLWebhook.
          example: a87db7ed-8ebe-42e4-829f-8ba5a4152f54
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 99151cf8-9548-4860-ba70-a8de824f3312
        display_name:
          type: string
          description: Display name of the CXMLWebhook Fabric Resource
          example: Booking Assistant
        type:
          type: string
          enum:
            - cxml_webhook
          description: Type of the Fabric Resource
          example: cxml_webhook
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        cxml_webhook:
          allOf:
            - $ref: '#/components/schemas/CXMLWebhook'
          description: CXMLWebhook data.
    CXMLWebhookUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the CXML Webhook.
          example: My CXML Webhook
        used_for:
          type: string
          enum:
            - calling
            - messaging
          description: Used for of the CXML Webhook.
          example: calling
          default: calling
        primary_request_url:
          type: string
          description: Primary request url of the CXML Webhook.
          example: https://primary.com
        primary_request_method:
          type: string
          enum:
            - GET
            - POST
          description: Primary request method of the CXML Webhook.
          example: GET
          default: POST
        fallback_request_url:
          type: string
          description: Fallback request url of the CXML Webhook.
          example: https://fallback.com
        fallback_request_method:
          type: string
          enum:
            - GET
            - POST
          description: Fallback request method of the CXML Webhook.
          example: GET
          default: POST
        status_callback_url:
          type: string
          description: Status callback url of the CXML Webhook.
          example: https://callback.com
        status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Status callback method of the CXML Webhook.
          example: POST
          default: POST
    CXMLWebhookUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: http_url_required
            message: This value must be an HTTP or HTTPS URL.
            attribute: status_callback_url
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#http_url_required
    CallFlowAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddressApp'
          description: List of Call Flow Addresses
        links:
          allOf:
            - $ref: '#/components/schemas/CallFlowAddressPaginationResponse'
          description: Pagination links
    CallFlowAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=1&page_size=50&page_token=PA6581c1fa-d985-4c8f-b53e-2fee11b579ad
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50&page_token=PA6581c1fa-d985-4c8f-b53e-2fee11b579ad
    CallFlowCreateRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          description: The name of the Call Flow
          example: Booking Assistant
    CallFlowCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: title is required
            attribute: title
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    CallFlowResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - call_flow
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Call Flow.
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        display_name:
          type: string
          description: Display name of the Call Flow Fabric Resource
          example: Booking Assistant
        type:
          type: string
          enum:
            - call_flow
          description: Type of the Fabric Resource
          example: call_flow
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        call_flow:
          allOf:
            - $ref: '#/components/schemas/CallFlowWithID'
          description: Call Flow data.
    CallFlowUpdateRequest:
      type: object
      properties:
        title:
          type: string
          description: The name of the Call Flow
          example: Booking Assistant
        document_version:
          type: integer
          format: int32
          description: The current revision of the call flow. Every update must increase this number.
          example: 1
    CallFlowUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter_value
            message: document_version must be greater than current version
            attribute: document_version
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#invalid_parameter_value
    CallFlowVersion:
      type: object
      required:
        - id
        - version
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: The unique identifier of the version.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        version:
          type: string
          description: The version number.
          example: 1.0.0
        created_at:
          type: string
          description: The creation timestamp.
          example: '2023-01-01T12:00:00Z'
        updated_at:
          type: string
          description: The last update timestamp.
          example: '2023-01-01T12:00:00Z'
        flow_data:
          type: string
          description: Call Flow data structure
          example: '{}'
        relayml:
          type: string
          description: SWML document for this version
          example: '{}'
    CallFlowVersionDeployByDocumentVersion:
      type: object
      required:
        - document_version
      properties:
        document_version:
          type: integer
          format: int32
          description: The current revision of the call flow.
          example: 2
      title: Deploy by document version
    CallFlowVersionDeployByVersionId:
      type: object
      required:
        - call_flow_version_id
      properties:
        call_flow_version_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Any call flow version ID for this call flow.
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
      title: Deploy by version ID
    CallFlowVersionDeployRequest:
      oneOf:
        - $ref: '#/components/schemas/CallFlowVersionDeployByDocumentVersion'
        - $ref: '#/components/schemas/CallFlowVersionDeployByVersionId'
    CallFlowVersionDeployResponse:
      type: object
      required:
        - id
        - created_at
        - updated_at
        - document_version
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: The unique identifier of the deployed Call Flow Version.
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        created_at:
          type: string
          description: The creation timestamp.
          example: '2024-01-02T00:00:00Z'
        updated_at:
          type: string
          description: The last update timestamp.
          example: '2024-01-02T00:00:00Z'
        document_version:
          type: integer
          format: int32
          description: The document version.
          example: 2
        flow_data:
          type: string
          description: Call Flow data structure
          example: '{}'
        relayml:
          type: string
          description: SWML document for this version
          example: '{ "version": "1.0.0", "sections": { "main": [{ "play": { "url": "https://cdn.signalwire.com/swml/audio.mp3" }}]}};'
    CallFlowVersionListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CallFlowVersion'
          description: List of Call Flow Versions
        links:
          $ref: '#/components/schemas/CallFlowVersionsPaginationResponse'
    CallFlowVersionsPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/call_flows/versions?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/call_flows/versions?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/call_flows/versions?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/call_flows/versions?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    CallFlowWithID:
      type: object
      required:
        - id
        - title
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of a Call Flow.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        title:
          type: string
          description: The name of the Call Flow
          example: Booking Assistant
        flow_data:
          type: string
          description: Call flow data as JSON string
          example: '{}'
        relayml:
          type: string
          description: A SWML document. For more information on SWML, please go to https://developer.signalwire.com/swml
          example: '{ "version": "1.0.0", "sections": { "main": [{ "play": { "url": "https://cdn.signalwire.com/swml/audio.mp3" }}]}};'
        document_version:
          type: integer
          format: int32
          description: The current revision of the call flow. Every update must increase this number.
          example: 1
    CipherType:
      type: string
      enum:
        - AEAD_AES_256_GCM_8
        - AES_256_CM_HMAC_SHA1_80
        - AES_CM_128_HMAC_SHA1_80
        - AES_256_CM_HMAC_SHA1_32
        - AES_CM_128_HMAC_SHA1_32
      description: Ciphers
    Ciphers:
      type: string
      enum:
        - AEAD_AES_256_GCM_8
        - AES_256_CM_HMAC_SHA1_80
        - AES_CM_128_HMAC_SHA1_80
        - AES_256_CM_HMAC_SHA1_32
        - AES_CM_128_HMAC_SHA1_32
    CodecType:
      type: string
      enum:
        - OPUS
        - G722
        - PCMU
        - PCMA
        - G729
        - VP8
        - H264
      description: Codecs
    Codecs:
      type: string
      enum:
        - PCMU
        - PCMA
        - G722
        - G729
        - OPUS
        - VP8
        - H264
    ConferenceRoomAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddressRoom'
          description: List of Conference Room Addresses
        links:
          allOf:
            - $ref: '#/components/schemas/ConferenceRoomAddressPaginationResponse'
          description: Pagination links
    ConferenceRoomAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/conference_room/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/conference_room/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/conference_room/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=1&page_size=50&page_token=PA6581c1fa-d985-4c8f-b53e-2fee11b579ad
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/conference_room/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50&page_token=PA6581c1fa-d985-4c8f-b53e-2fee11b579ad
    ConferenceRoomConfig:
      type: object
      properties:
        recording:
          type: boolean
          description: Whether to enable recording
          example: false
        video:
          type: boolean
          description: Whether to enable video
          example: true
        audio:
          type: boolean
          description: Whether to enable audio
          example: true
    ConferenceRoomCreateRequest:
      type: object
      required:
        - display_name
      properties:
        display_name:
          type: string
          description: Display name of the Conference Room
          example: Reception
        max_members:
          type: integer
          format: int32
          description: Maximum number of members allowed in the conference room
          example: 30
        config:
          allOf:
            - $ref: '#/components/schemas/ConferenceRoomConfig'
          description: Configuration settings for the conference room
    ConferenceRoomCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: display_name is required
            attribute: display_name
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    ConferenceRoomResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - conference_room
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Conference Room.
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        display_name:
          type: string
          description: Display name of the Conference Room Fabric Resource
          example: Reception
        type:
          type: string
          enum:
            - video_room
          description: Type of the Fabric Resource
          example: video_room
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        conference_room:
          allOf:
            - $ref: '#/components/schemas/ConferenceRoomWithID'
          description: Conference Room data.
    ConferenceRoomUpdateRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Display name of the Conference Room
          example: Reception
        max_members:
          type: integer
          format: int32
          description: Maximum number of members allowed in the conference room
          example: 30
        config:
          allOf:
            - $ref: '#/components/schemas/ConferenceRoomConfig'
          description: Configuration settings for the conference room
    ConferenceRoomUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter_value
            message: max_members must be greater than 0
            attribute: max_members
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#invalid_parameter_value
    ConferenceRoomWithID:
      type: object
      required:
        - conference_room_id
        - display_name
      properties:
        conference_room_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of a Conference Room.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        display_name:
          type: string
          description: Display name of the Conference Room
          example: Reception
        max_members:
          type: integer
          format: int32
          description: Maximum number of members allowed in the conference room
          example: 30
        config:
          allOf:
            - $ref: '#/components/schemas/ConferenceRoomConfig'
          description: Configuration settings for the conference room
    ConstProperty:
      type: object
      required:
        - const
      properties:
        const:
          description: A constant value that can be passed to the function.
      title: Const Property
    ContextSteps:
      type: object
      required:
        - steps
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/ContextStepsParams'
          description: An array of objects that define the steps in the context. These steps are used to define the flow of the conversation.
          title: steps
      title: ContextSteps object
    ContextStepsEnd:
      type: object
      required:
        - name
        - text
      properties:
        name:
          type: string
          description: The name of the step. The name must be unique within the context. The name is used for referencing the step in the context.
          example: Take Pizza order
        text:
          type: string
          description: The prompt or instructions given to the AI at this step.
          example: Your name is Franklin and you are taking orders for Franklin's Pizza.
        step_criteria:
          type: string
          description: |-
            The conditions that must be met for the conversation to proceed to the next step.
            If a condition is not met, the conversation will not proceed to the next step.
            It's **highly** recommended you create a custom criteria for the step to get the intended behavior.
          example: Customer wants to order Pizza
        functions:
          type: array
          items:
            type: string
          description: An array of SWAIG.functions that can be executed from this step.
          example:
            - Take Order
            - Confirm Order
            - Confirm Address
        valid_contexts:
          type: array
          items:
            type: string
          description: An array of valid contexts that the conversation can transition to from this step.
          example:
            - Place Order
            - Confirm Order
        skip_user_turn:
          type: boolean
          description: A boolean value that, when true, will skip the user's turn to respond in the conversation and proceed to the next step.
        end:
          type: boolean
          description: A boolean value that, when true, will end the contexts conversation and transition to a normal interaction.
      title: ContextStepsEnd object
    ContextStepsParams:
      anyOf:
        - $ref: '#/components/schemas/ContextStepsEnd'
        - $ref: '#/components/schemas/ContextStepsValidSteps'
      title: ContextStepsParams union
    ContextStepsUpdate:
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/ContextStepsParams'
          description: An array of objects that define the steps in the context. These steps are used to define the flow of the conversation.
          title: steps
      title: ContextSteps object
    ContextStepsValidSteps:
      type: object
      required:
        - name
        - text
      properties:
        name:
          type: string
          description: The name of the step. The name must be unique within the context. The name is used for referencing the step in the context.
          example: Take Pizza order
        text:
          type: string
          description: The prompt or instructions given to the AI at this step.
          example: Your name is Franklin and you are taking orders for Franklin's Pizza.
        step_criteria:
          type: string
          description: |-
            The conditions that must be met for the conversation to proceed to the next step.
            If a condition is not met, the conversation will not proceed to the next step.
            It's **highly** recommended you create a custom criteria for the step to get the intended behavior.
          example: Customer wants to order Pizza
        functions:
          type: array
          items:
            type: string
          description: An array of SWAIG.functions that can be executed from this step.
          example:
            - Take Order
            - Confirm Order
            - Confirm Address
        valid_contexts:
          type: array
          items:
            type: string
          description: An array of valid contexts that the conversation can transition to from this step.
          example:
            - Place Order
            - Confirm Order
        skip_user_turn:
          type: boolean
          description: A boolean value that, when true, will skip the user's turn to respond in the conversation and proceed to the next step.
        valid_steps:
          type: array
          items:
            type: string
          description: |-
            An array of valid steps that the conversation can proceed to from this step.
            If the array is empty, or the `valid_steps` key is not present, the conversation will proceed to the next step in the context.
          example:
            - get order
            - confirm order
      title: ContextStepsValidSteps object
    ContextSwitchAction:
      type: object
      required:
        - context_switch
      properties:
        context_switch:
          type: object
          properties:
            system_prompt:
              type: string
              description: The instructions to send to the agent. Default is not set.
            consolidate:
              type: boolean
              description: Whether to consolidate the context. Default is `false`.
            user_prompt:
              type: string
              description: |-
                A string serving as simulated user input for the AI Agent.
                During a context_switch in the AI's prompt, the user_prompt offers the AI pre-established context or guidance.
                Default is not set
          required:
            - system_prompt
          description: A JSON object containing the context to switch to. Default is not set.
          title: context_switch
      title: ContextSwitchAction object
    Contexts:
      type: object
      required:
        - default
      properties:
        default:
          allOf:
            - $ref: '#/components/schemas/ContextSteps'
          description: The default context to use at the beginning of the conversation. Additional context steps can be defined as any other key in the object.
      additionalProperties:
        $ref: '#/components/schemas/ContextSteps'
      title: contexts
    ContextsUpdate:
      type: object
      properties:
        default:
          allOf:
            - $ref: '#/components/schemas/ContextStepsUpdate'
          description: The default context to use at the beginning of the conversation. Additional context steps can be defined as any other key in the object.
      additionalProperties:
        $ref: '#/components/schemas/ContextStepsUpdate'
      title: contexts
    CxmlApplication:
      type: object
      required:
        - sid
        - account_sid
        - friendly_name
        - voice_url
        - voice_method
        - voice_fallback_url
        - voice_fallback_method
        - status_callback
        - status_callback_method
        - sms_url
        - sms_method
        - sms_fallback_url
        - sms_fallback_method
        - sms_status_callback
        - sms_status_callback_method
      properties:
        sid:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique SID of the cXML Application.
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        account_sid:
          allOf:
            - $ref: '#/components/schemas/uuid'
          description: Account SID for the cXML Application
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        friendly_name:
          type: string
          description: Display name of the cXML Application
          example: Reception App
        voice_url:
          type: string
          nullable: true
          description: URL to handle incoming calls
          example: https://example.com/voice/incoming
        voice_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for voice URL
          example: GET
        voice_fallback_url:
          type: string
          nullable: true
          description: Fallback URL for voice errors
          example: https://example.com/voice/fallback
        voice_fallback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for voice fallback URL
          example: GET
        status_callback:
          type: string
          format: uri
          nullable: true
          description: URL to receive status callbacks
          example: https://example.com/voice/status
        status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for status callbacks
          example: GET
        sms_url:
          type: string
          nullable: true
          description: URL to handle incoming messages
          example: https://example.com/message/incoming
        sms_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for SMS URL
          example: GET
        sms_fallback_url:
          type: string
          nullable: true
          description: Fallback URL for SMS errors
          example: https://example.com/message/fallback
        sms_fallback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for SMS fallback URL
          example: GET
        sms_status_callback:
          type: string
          nullable: true
          description: URL to receive SMS status callbacks
          example: https://example.com/message/status
        sms_status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for SMS status callbacks
          example: GET
    CxmlApplicationAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddress'
          description: List of Cxml Application Addresses
        links:
          allOf:
            - $ref: '#/components/schemas/CxmlApplicationAddressPaginationResponse'
          description: Pagination links
    CxmlApplicationAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          description: Self link for the current page
          example: https://example.signalwire.com/api/fabric/resources/laml_applications/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        first:
          type: string
          description: Link to the first page of results
          example: https://example.signalwire.com/api/fabric/resources/laml_applications/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        next:
          type: string
          description: Link to the next page of results
          example: https://example.signalwire.com/api/fabric/resources/laml_applications/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          description: Link to the previous page of results
          example: https://example.signalwire.com/api/fabric/resources/laml_applications/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    CxmlApplicationResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - cxml_application
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the LAML Application.
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        display_name:
          type: string
          description: Display name of the LAML Application Fabric Resource
          example: Reception App
        type:
          type: string
          enum:
            - cxml_application
          description: Type of the Fabric Resource
          example: cxml_application
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        cxml_application:
          allOf:
            - $ref: '#/components/schemas/CxmlApplication'
          description: LAML Application data.
    CxmlApplicationUpdateRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Display name of the LAML Application
          example: Reception App
        account_sid:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Account SID for the LAML Application
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        voice_url:
          type: string
          description: URL to handle incoming calls
          example: https://example.com/voice/incoming
        voice_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for voice URL
          example: POST
        voice_fallback_url:
          type: string
          description: Fallback URL for voice errors
          example: https://example.com/voice/fallback
        voice_fallback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for voice fallback URL
          example: POST
        status_callback:
          type: string
          description: URL to receive status callbacks
          example: https://example.com/voice/status
        status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for status callbacks
          example: POST
        sms_url:
          type: string
          description: URL to handle incoming messages
          example: https://example.com/message/incoming
        sms_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for SMS URL
          example: POST
        sms_fallback_url:
          type: string
          description: Fallback URL for SMS errors
          example: https://example.com/message/fallback
        sms_fallback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for SMS fallback URL
          example: POST
        sms_status_callback:
          type: string
          description: URL to receive SMS status callbacks
          example: https://example.com/message/status
        sms_status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: HTTP method for SMS status callbacks
          example: POST
    CxmlApplicationUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter_value
            message: voice_url must be a valid URL
            attribute: voice_url
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#invalid_parameter_value
    DataMap:
      oneOf:
        - $ref: '#/components/schemas/Output'
        - $ref: '#/components/schemas/Expression'
        - $ref: '#/components/schemas/Webhook'
      title: DataMap union
    DialogflowAgentAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddressApp'
          description: List of Dialogflow Agent Addresses
        links:
          allOf:
            - $ref: '#/components/schemas/DialogflowAgentAddressPaginationResponse'
          description: Pagination links
    DialogflowAgentAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/dialogflow_agents/3fa85f64-5717-4562-b3fc-2c963f66afa6/addresses?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/dialogflow_agents/3fa85f64-5717-4562-b3fc-2c963f66afa6/addresses?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/dialogflow_agents/3fa85f64-5717-4562-b3fc-2c963f66afa6/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/dialogflow_agents/3fa85f64-5717-4562-b3fc-2c963f66afa6/addresses?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    DialogflowAgentResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - dialogflow_agent
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Dialogflow Agent.
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        display_name:
          type: string
          description: Display name of the Dialogflow Agent Fabric Resource
          example: Customer Service Agent
        type:
          type: string
          enum:
            - dialogflow_agent
          description: Type of the Fabric Resource
          example: dialogflow_agent
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        dialogflow_agent:
          allOf:
            - $ref: '#/components/schemas/DialogflowAgentWithID'
          description: Dialogflow Agent data.
    DialogflowAgentUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the Dialogflow Agent
          example: Booking Assistant
        say_enabled:
          type: boolean
          description: Whether to enable the 'say' feature
          example: true
        say:
          type: string
          description: Default message to say
          example: Welcome to the Booking Assistant
        voice:
          type: string
          description: Voice to use for speech
          example: en-US-Wavenet-D
    DialogflowAgentUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter_value
            message: language_code must be a valid language code
            attribute: language_code
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#invalid_parameter_value
    DialogflowAgentWithID:
      type: object
      required:
        - dialogflow_agent_id
      properties:
        dialogflow_agent_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of a Dialogflow Agent.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        say_enabled:
          type: boolean
          description: Whether to enable the 'say' feature
          example: true
        say:
          type: string
          description: Default message to say
          example: Welcome to the Booking Assistant
        voice:
          type: string
          description: Voice to use for speech
          example: en-US-Wavenet-D
        display_name:
          type: string
          description: Display name of the Dialogflow Agent
          example: Booking Assistant
        dialogflow_reference_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Dialogflow reference ID
          example: 12345678-1234-1234-1234-1234567890ab
        dialogflow_reference_name:
          type: string
          description: Dialogflow reference name
          example: my dialogflow agent
    Direction:
      type: string
      enum:
        - inbound
        - outbound
      title: Direction enum
    DisplayTypes:
      type: string
      enum:
        - app
        - room
        - call
        - subscriber
      description: DisplayTypes
    DomainApplicationAssignRequest:
      type: object
      required:
        - domain_application_id
      properties:
        domain_application_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: The id of the domain application you wish to assign a resource to.
          example: 993ed018-9e79-4e50-b97b-984bd5534095
    DomainApplicationCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: name is required
            attribute: name
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    DomainApplicationResponse:
      type: object
      required:
        - id
        - name
        - display_name
        - cover_url
        - preview_url
        - locked
        - channel
        - created_at
        - type
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Fabric Address.
          example: 691af061-cd86-4893-a605-173f47afc4c2
        name:
          type: string
          description: Name of the Fabric Address.
          example: justice-league
        display_name:
          type: string
          description: Display name of the Fabric Address.
          example: Justice League
        cover_url:
          type: string
          description: Cover url of the Fabric Address.
          example: https://coverurl.com
        preview_url:
          type: string
          description: Preview url of the Fabric Address.
          example: https://previewurl.com
        locked:
          type: boolean
          description: Locks the Fabric Address. This is used to prevent the Fabric Address from accepting calls.
          example: true
        channel:
          allOf:
            - $ref: '#/components/schemas/AddressChannel'
          description: Channels of the Fabric Address.
        created_at:
          type: string
          format: date-time
          description: Fabric Address Creation Date.
          example: '2024-05-06T12:20:00Z'
        type:
          type: string
          enum:
            - app
          description: Type of the Fabric Address which is an application.
          example: app
      title: Application Address
    EmbedTokenCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: token is required
            attribute: token
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    EmbedsTokensRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: Click to Call Token
          example: c2c_7acc0e5e968706a032983cd80cdca219
    EmbedsTokensResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          format: jwt
          description: Encrypted guest token.
          example: eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiY2giOiJwdWMubHZoLm1lIiwidHlwIjoiU0FUIn0..
    Encryption:
      type: string
      enum:
        - required
        - optional
        - default
    EncryptionType:
      type: string
      enum:
        - default
        - required
        - optional
      description: Encryption
    Expression:
      type: object
      required:
        - expressions
      properties:
        expressions:
          type: array
          items:
            type: object
            properties:
              string:
                type: string
                description: The actual input or value from the user or system.
                example: I want a refund
              pattern:
                type: string
                description: A regular expression pattern to validate or match the string.
              output:
                type: object
                properties:
                  response:
                    type: string
                    description: A static response text or message returned to the AI agents context.
                    example: Order placed
                  action:
                    type: array
                    items:
                      $ref: '#/components/schemas/Action'
                    description: A list of actions to be performed upon matching.
                required:
                  - response
                description: An object that defines the `response` or `action` to be taken when the webhook is successfully triggered.
                title: output
            required:
              - string
              - pattern
              - output
          description: An array of objects that define patterns and corresponding actions.
          title: expressions
      title: Expression object
    FabricAddress:
      type: object
      required:
        - id
        - name
        - display_name
        - cover_url
        - preview_url
        - locked
        - channel
        - created_at
        - type
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Fabric Address.
          example: 691af061-cd86-4893-a605-173f47afc4c2
        name:
          type: string
          description: Name of the Fabric Address.
          example: justice-league
        display_name:
          type: string
          description: Display name of the Fabric Address.
          example: Justice League
        cover_url:
          type: string
          description: Cover url of the Fabric Address.
          example: https://coverurl.com
        preview_url:
          type: string
          description: Preview url of the Fabric Address.
          example: https://previewurl.com
        locked:
          type: boolean
          description: Locks the Fabric Address. This is used to prevent the Fabric Address from accepting calls.
          example: true
        channel:
          allOf:
            - $ref: '#/components/schemas/AddressChannel'
          description: Channels of the Fabric Address.
        created_at:
          type: string
          format: date-time
          description: Fabric Address Creation Date.
          example: '2024-05-06T12:20:00Z'
        type:
          $ref: '#/components/schemas/DisplayTypes'
    FabricAddressApp:
      type: object
      required:
        - id
        - name
        - display_name
        - cover_url
        - preview_url
        - locked
        - channel
        - created_at
        - type
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Fabric Address.
          example: 691af061-cd86-4893-a605-173f47afc4c2
        name:
          type: string
          description: Name of the Fabric Address.
          example: justice-league
        display_name:
          type: string
          description: Display name of the Fabric Address.
          example: Justice League
        cover_url:
          type: string
          description: Cover url of the Fabric Address.
          example: https://coverurl.com
        preview_url:
          type: string
          description: Preview url of the Fabric Address.
          example: https://previewurl.com
        locked:
          type: boolean
          description: Locks the Fabric Address. This is used to prevent the Fabric Address from accepting calls.
          example: true
        channel:
          allOf:
            - $ref: '#/components/schemas/AddressChannel'
          description: Channels of the Fabric Address.
        created_at:
          type: string
          format: date-time
          description: Fabric Address Creation Date.
          example: '2024-05-06T12:20:00Z'
        type:
          type: string
          enum:
            - app
          description: Type of the Fabric Address which is an application.
          example: app
      title: Application Address
    FabricAddressCall:
      type: object
      required:
        - id
        - name
        - display_name
        - cover_url
        - preview_url
        - locked
        - channel
        - created_at
        - type
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Fabric Address.
          example: 691af061-cd86-4893-a605-173f47afc4c2
        name:
          type: string
          description: Name of the Fabric Address.
          example: justice-league
        display_name:
          type: string
          description: Display name of the Fabric Address.
          example: Justice League
        cover_url:
          type: string
          description: Cover url of the Fabric Address.
          example: https://coverurl.com
        preview_url:
          type: string
          description: Preview url of the Fabric Address.
          example: https://previewurl.com
        locked:
          type: boolean
          description: Locks the Fabric Address. This is used to prevent the Fabric Address from accepting calls.
          example: true
        channel:
          allOf:
            - $ref: '#/components/schemas/AddressChannel'
          description: Channels of the Fabric Address.
        created_at:
          type: string
          format: date-time
          description: Fabric Address Creation Date.
          example: '2024-05-06T12:20:00Z'
        type:
          type: string
          enum:
            - call
          description: Type of the Fabric Address which is a call.
          example: call
      title: Call Address
    FabricAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/addresses?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/addresses?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/addresses?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    FabricAddressRoom:
      type: object
      required:
        - id
        - name
        - display_name
        - cover_url
        - preview_url
        - locked
        - channel
        - created_at
        - type
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Fabric Address.
          example: 691af061-cd86-4893-a605-173f47afc4c2
        name:
          type: string
          description: Name of the Fabric Address.
          example: justice-league
        display_name:
          type: string
          description: Display name of the Fabric Address.
          example: Justice League
        cover_url:
          type: string
          description: Cover url of the Fabric Address.
          example: https://coverurl.com
        preview_url:
          type: string
          description: Preview url of the Fabric Address.
          example: https://previewurl.com
        locked:
          type: boolean
          description: Locks the Fabric Address. This is used to prevent the Fabric Address from accepting calls.
          example: true
        channel:
          allOf:
            - $ref: '#/components/schemas/AddressChannel'
          description: Channels of the Fabric Address.
        created_at:
          type: string
          format: date-time
          description: Fabric Address Creation Date.
          example: '2024-05-06T12:20:00Z'
        type:
          type: string
          enum:
            - room
          description: Type of the Fabric Address which is a conference room.
          example: room
      title: Room Address
    FabricAddressSubscriber:
      type: object
      required:
        - id
        - name
        - display_name
        - cover_url
        - preview_url
        - locked
        - channel
        - created_at
        - type
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Fabric Address.
          example: 691af061-cd86-4893-a605-173f47afc4c2
        name:
          type: string
          description: Name of the Fabric Address.
          example: justice-league
        display_name:
          type: string
          description: Display name of the Fabric Address.
          example: Justice League
        cover_url:
          type: string
          description: Cover url of the Fabric Address.
          example: https://coverurl.com
        preview_url:
          type: string
          description: Preview url of the Fabric Address.
          example: https://previewurl.com
        locked:
          type: boolean
          description: Locks the Fabric Address. This is used to prevent the Fabric Address from accepting calls.
          example: true
        channel:
          allOf:
            - $ref: '#/components/schemas/AddressChannel'
          description: Channels of the Fabric Address.
        created_at:
          type: string
          format: date-time
          description: Fabric Address Creation Date.
          example: '2024-05-06T12:20:00Z'
        type:
          type: string
          enum:
            - subscriber
          description: Type of the Fabric Address which is a subscriber.
          example: subscriber
      title: Subscriber Address
    FabricAddressesResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddress'
        links:
          $ref: '#/components/schemas/FabricAddressPaginationResponse'
    FabricResponseType:
      type: string
      enum:
        - ai_agent
        - dialogflow_agent
        - call_flow
        - swml_webhook
        - freeswitch_connector
        - cxml_application
        - cxml_script
        - cxml_webhook
        - relay_application
        - sip_endpoint
        - sip_gateway
        - subscriber
        - swml_script
        - video_room
    FreeswitchConnectorAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddress'
          description: List of FreeSWITCH Connector Addresses
          example:
            - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              name: freeswitch-connector-address
              display_name: FreeSWITCH Connector Address
              type: app
              cover_url: https://example.com/cover.jpg
              preview_url: https://example.com/preview.jpg
              locked: false
              channel:
                audio: /external/freeswitch_connector?channel=audio
              created_at: '2023-01-01T12:00:00Z'
        links:
          allOf:
            - $ref: '#/components/schemas/FreeswitchConnectorAddressPaginationResponse'
          description: Pagination links
    FreeswitchConnectorAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/addresses?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/addresses?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/addresses?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
      example:
        self: https://example.signalwire.com/api/fabric/resources/freeswitch_connectors/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        first: https://example.signalwire.com/api/fabric/resources/freeswitch_connectors/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        next: https://example.signalwire.com/api/fabric/resources/freeswitch_connectors/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev: https://example.signalwire.com/api/fabric/resources/freeswitch_connectors/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    FreeswitchConnectorCreateRequest:
      type: object
      required:
        - name
        - token
      properties:
        name:
          type: string
          description: Name of the FreeSWITCH Connector
          example: Booking Assistant
        token:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: FreeSWITCH token
          example: 993ed018-9e79-4e50-b97b-984bd5534095
    FreeswitchConnectorCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: host is required
            attribute: host
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    FreeswitchConnectorResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - freeswitch_connector
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the FreeSWITCH Connector.
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        display_name:
          type: string
          description: Display name of the FreeSWITCH Connector Fabric Resource
          example: Main FreeSWITCH Server
        type:
          type: string
          enum:
            - freeswitch_connector
          description: Type of the Fabric Resource
          example: freeswitch_connector
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        freeswitch_connector:
          allOf:
            - $ref: '#/components/schemas/FreeswitchConnectorWithID'
          description: FreeSWITCH Connector data.
    FreeswitchConnectorUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the FreeSWITCH Connector
          example: Booking Assistant
        caller_id:
          type: string
          description: Caller ID for the connector
          example: '123456'
        send_as:
          type: string
          description: Send as identifier
          example: '123456'
    FreeswitchConnectorUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter_value
            message: port must be between 1 and 65535
            attribute: port
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#invalid_parameter_value
    FreeswitchConnectorWithID:
      type: object
      required:
        - freeswitch_connector_id
      properties:
        freeswitch_connector_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of a FreeSWITCH Connector.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          description: Name of the FreeSWITCH Connector
          example: Booking Assistant
        caller_id:
          type: string
          nullable: true
          description: Caller ID for the connector
          example: '123456'
        send_as:
          type: string
          nullable: true
          description: Send as identifier
          example: '123456'
    FunctionParameters:
      type: object
      required:
        - type
        - properties
      properties:
        type:
          type: string
          enum:
            - object
          description: The type of argument the AI is passing to the function. Possible values are 'string' and 'object'.
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SchemaType'
          description: |-
            An object containing the property definitions that are passed to the function.

            A property definition is a valid JSON schema type with dynamic property names, where:
            - Keys: User-defined strings, that set the property names.
            - Values: A valid property type, which can be one of the following: `string`, `integer`, `number`, `boolean`, `array`, `object`, or `null`.
        required:
          type: array
          items:
            type: string
          description: An array of required property names from the `properties` object.
          example:
            - name1
            - name2
    GuestTokenCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: must_belong_to_project
            message: The addresses must belong to the project
            attribute: allowed_addresses
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes#must_belong_to_project
    IntegerOrZero:
      type: integer
      minimum: 10000
      maximum: 600000
    IntegerProperty:
      type: object
      required:
        - type
      properties:
        description:
          type: string
          description: A description of the property.
          example: Property description
        nullable:
          type: boolean
          description: Whether the property can be null.
        type:
          type: string
          enum:
            - integer
          description: The type of parameter(s) the AI is passing to the function.
        enum:
          type: array
          items:
            type: integer
          description: An array of integers that are the possible values
          example:
            - 1
            - 2
            - 3
        default:
          type: integer
          description: The default integer value
          example: 5
      description: Base interface for all property types
      title: Integer Function Property
    InviteTokenCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter
            message: Address is invalid
            attribute: address_id
            url: https://developer.signalwire.com/rest/overview/error-codes#invalid_parameter
          - type: validation_error
            code: invalid_parameter
            message: Expires At must be an integer
            attribute: expires_at
            url: https://developer.signalwire.com/rest/overview/error-codes#invalid_parameter
          - type: validation_error
            code: invalid_parameter
            message: Expires At must be greater than 1733254773
            attribute: expires_at
            url: https://developer.signalwire.com/rest/overview/error-codes#invalid_parameter
    Languages:
      type: object
      allOf:
        - $ref: '#/components/schemas/LanguagesWithFillers'
      title: languages
    LanguagesWithFillers:
      type: object
      required:
        - name
        - code
        - voice
      properties:
        name:
          type: string
          description: Name of the language ('French', 'English', etc).
          example: French
        code:
          type: string
          description: Language code. For example, 'fr-FR'.
          example: fr-FR
        voice:
          type: string
          description: Voice to use for the language. For example, 'fr-FR-Neural2-B'.
          example: fr-FR-Neural2-B
        function_fillers:
          type: array
          items:
            type: string
          description: An array of strings to be used as fillers in the conversation when calling a `swaig function`. This helps the AI break silence between responses.
          example:
            - great
            - ok
        speech_fillers:
          type: array
          items:
            type: string
          description: An array of strings to be used as fillers in the conversation. This helps the AI break silence between responses.
          example:
            - umm
            - hmm
      title: LanguagesWithFillers
    MessagingChannel:
      type: object
      required:
        - messaging
      properties:
        messaging:
          type: string
          description: Messaging Channel of Fabric Address
          example: /external/resource_name?channel=messaging
    NullProperty:
      type: object
      required:
        - type
        - description
      properties:
        type:
          type: string
          enum:
            - 'null'
          description: The type of parameter(s) the AI is passing to the function.
        description:
          type: string
          description: A description of the property.
          example: Property Description
      title: Null Function Property
    NumberProperty:
      type: object
      required:
        - type
      properties:
        description:
          type: string
          description: A description of the property.
          example: Property description
        nullable:
          type: boolean
          description: Whether the property can be null.
        type:
          type: string
          enum:
            - number
          description: The type of parameter(s) the AI is passing to the function.
        enum:
          type: array
          items:
            anyOf:
              - type: integer
              - type: number
          description: An array of integers that are the possible values
          example:
            - 1
            - 2
            - 3
        default:
          anyOf:
            - type: integer
            - type: number
          description: The default integer value
          example: 3
      description: Base interface for all property types
      title: Number Function Property
    ObjectProperty:
      type: object
      required:
        - type
      properties:
        description:
          type: string
          description: A description of the property.
          example: Property description
        nullable:
          type: boolean
          description: Whether the property can be null.
        type:
          type: string
          enum:
            - object
          description: The type of parameter(s) the AI is passing to the function.
        default:
          type: object
          additionalProperties: {}
          description: The default object value
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SchemaType'
          description: Nested properties
        required:
          type: array
          items:
            type: string
          description: Required property names
          example:
            - name1
            - name2
      description: Base interface for all property types
      title: Object Function Property
    OneOfProperty:
      type: object
      required:
        - oneOf
      properties:
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/SchemaType'
          description: An array of schemas where exactly one of the schemas must be valid.
      title: oneOf Property
    Output:
      type: object
      required:
        - output
      properties:
        output:
          type: object
          properties:
            response:
              type: string
              description: A static response text or message returned to the AI agents context.
              example: Order placed
            action:
              type: array
              items:
                $ref: '#/components/schemas/Action'
              description: A list of actions to be performed upon matching.
          required:
            - response
          description: An object that defines the `response` or `action` to be taken when the webhook is successfully triggered.
          title: output
      title: Output object
    PaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/subscribers/d369a402-7b43-4512-8735-9d5e1f387814/sip_endpoints?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/subscribers/d369a402-7b43-4512-8735-9d5e1f387814/sip_endpoints?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/subscribers/d369a402-7b43-4512-8735-9d5e1f387814/sip_endpoints?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    PhoneRouteAssignRequest:
      type: object
      required:
        - phone_route_id
        - handler
      properties:
        phone_route_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: The id of the phone route.
          example: 691af061-cd86-4893-a605-173f47afc4c2
        handler:
          allOf:
            - $ref: '#/components/schemas/UsedForType'
          description: Indicates if the resource should be assigned to a `calling` or `messaging` handler.
          example: calling
    PhoneRouteCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: phone_number is required
            attribute: phone_number
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    PhoneRouteResponse:
      type: object
      required:
        - id
        - name
        - display_name
        - cover_url
        - preview_url
        - locked
        - channel
        - created_at
        - type
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Fabric Address.
          example: 691af061-cd86-4893-a605-173f47afc4c2
        name:
          type: string
          description: Name of the Fabric Address.
          example: justice-league
        display_name:
          type: string
          description: Display name of the Fabric Address.
          example: Justice League
        cover_url:
          type: string
          description: Cover url of the Fabric Address.
          example: https://coverurl.com
        preview_url:
          type: string
          description: Preview url of the Fabric Address.
          example: https://previewurl.com
        locked:
          type: boolean
          description: Locks the Fabric Address. This is used to prevent the Fabric Address from accepting calls.
          example: true
        channel:
          allOf:
            - $ref: '#/components/schemas/AddressChannel'
          description: Channels of the Fabric Address.
        created_at:
          type: string
          format: date-time
          description: Fabric Address Creation Date.
          example: '2024-05-06T12:20:00Z'
        type:
          type: string
          enum:
            - app
          description: Type of the Fabric Address which is an application.
          example: app
      title: Application Address
    PlaybackBGAction:
      type: object
      required:
        - playback_bg
      properties:
        playback_bg:
          type: object
          properties:
            file:
              type: string
              format: uri
              description: URL or filepath of the audio file to play.
              example: https://cdn.signalwire.com/default-music/welcome.mp3
            wait:
              type: boolean
              description: Whether to wait for the audio file to finish playing before continuing. Default is `false`.
          required:
            - file
          description: A JSON object containing the audio file to play.
          title: playback_bg
      title: PlaybackBGAction object
    Pronounce:
      type: object
      required:
        - replace
        - with
      properties:
        replace:
          type: string
          description: The expression to replace.
          example: pizza
        with:
          type: string
          description: The phonetic spelling of the expression.
          example: pissa
        ignore_case:
          type: boolean
          description: Whether the pronunciation replacement should ignore case.
      title: Pronounce object
    RefreshTokenStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: token_expired
            message: Token has expired.
            attribute: refresh_token
            url: https://developer.signalwire.com/rest/overview/error-codes#token_expired
    RelayApplicationAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddressApp'
          description: List of Relay Application Addresses
        links:
          allOf:
            - $ref: '#/components/schemas/RelayApplicationAddressPaginationResponse'
          description: Pagination links
    RelayApplicationAddressPaginationResponse:
      type: object
      required:
        - self
        - first
      properties:
        self:
          type: string
          description: Self link for the current page
          example: https://example.signalwire.com/api/fabric/resources/relay_applications/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        first:
          type: string
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/relay_applications/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        next:
          type: string
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/relay_applications/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/relay_applications/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    RelayApplicationCreateRequest:
      type: object
      required:
        - name
        - topic
      properties:
        name:
          type: string
          description: Name of the Relay Application
          example: Booking Assistant
        topic:
          type: string
          description: Topic of the Relay Application
          example: booking
        call_status_callback_url:
          type: string
          description: Call status callback URL
          example: https://booking.com/callbacks
    RelayApplicationCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: name is required
            attribute: name
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    RelayApplicationResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - relay_application
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Relay Application.
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        display_name:
          type: string
          description: Display name of the Relay Application Fabric Resource
          example: Customer Service Bot
        type:
          type: string
          enum:
            - relay_application
          description: Type of the Fabric Resource
          example: relay_application
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        relay_application:
          allOf:
            - $ref: '#/components/schemas/RelayApplicationWithID'
          description: Relay Application data.
    RelayApplicationUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the Relay Application
          example: Booking Assistant
        topic:
          type: string
          description: Topic of the Relay Application
          example: booking
        call_status_callback_url:
          type: string
          description: Call status callback URL
          example: https://booking.com/callbacks
    RelayApplicationUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter_value
            message: webhook_url must be a valid URL
            attribute: webhook_url
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#invalid_parameter_value
    RelayApplicationWithID:
      type: object
      required:
        - id
        - name
        - topic
        - call_status_callback_url
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of a Relay Application.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          description: Name of the Relay Application
          example: Booking Assistant
        topic:
          type: string
          description: Topic of the Relay Application
          example: booking
        call_status_callback_url:
          type: string
          format: uri
          nullable: true
          description: Call status callback URL
          example: https://example.com/callbacks
    ResourceAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddress'
          description: List of Resource Addresses
        links:
          allOf:
            - $ref: '#/components/schemas/ResourceAddressPaginationResponse'
          description: Pagination links
    ResourceAddressPaginationResponse:
      type: object
      required:
        - self
        - first
      properties:
        self:
          type: string
          format: uri
          description: Link to the current page of results
          example: https://example.signalwire.com/api/fabric/resources/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page of results
          example: https://example.signalwire.com/api/fabric/resources/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page of results
          example: https://example.signalwire.com/api/fabric/resources/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page of results
          example: https://example.signalwire.com/api/fabric/resources/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    ResourceResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Resource.
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        display_name:
          type: string
          description: Display name of the Resource
          example: My Resource
        type:
          allOf:
            - $ref: '#/components/schemas/FabricResponseType'
          description: Type of the Resource
          example: relay_application
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        data:
          type: object
          additionalProperties: {}
          description: Resource-specific data
    ResourceSipEndpointAssignRequest:
      type: object
      required:
        - sip_endpoint_id
      properties:
        sip_endpoint_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: The unique identifier of the SIP endpoint.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      title: Create resource SIP endpoint
    ResourceSipEndpointCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: username is required
            attribute: username
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    ResourceSipEndpointResponse:
      type: object
      required:
        - id
        - name
        - type
        - channels
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: The unique identifier of the SIP endpoint.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          description: The name for the SIP endpoint.
          example: sip_user
        type:
          type: string
          enum:
            - room
          description: The Resource type
          example: room
        cover_url:
          type: string
          format: uri
          description: The cover URL for the SIP endpoint.
          example: https://example.com/cover.jpg
        preview_url:
          type: string
          format: uri
          description: The preview URL for the SIP endpoint.
          example: https://example.com/preview.jpg
        channels:
          $ref: '#/components/schemas/AddressChannel'
    ResourceSipEndpointUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter_value
            message: 'encryption must be one of: disabled, optional, required'
            attribute: encryption
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#invalid_parameter_value
    ResourceSubSipEndpointCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: username is required
            attribute: username
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    SIPEndpoint:
      type: object
      required:
        - id
        - username
        - caller_id
        - send_as
        - ciphers
        - codecs
        - encryption
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          description: Unique ID of the Sip Endpoint.
          example: acaa5c49-be5e-4477-bce0-48f4b23b7720
        username:
          type: string
          description: Username of the Sip Endpoint.
          example: justice-league
        caller_id:
          type: string
          description: Caller ID of the Sip Endpoint.
          example: call-id-123
        send_as:
          type: string
          description: Purchased or verified number
          example: '+14632322867'
        ciphers:
          type: array
          items:
            $ref: '#/components/schemas/CipherType'
          description: Ciphers of the Sip Endpoint.
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/CodecType'
          description: Codecs of the Sip Endpoint.
        encryption:
          allOf:
            - $ref: '#/components/schemas/EncryptionType'
          description: Encryption requirement of the Sip Endpoint.
          example: optional
    SWAIG:
      type: object
      properties:
        defaults:
          allOf:
            - $ref: '#/components/schemas/SWAIGDefaults'
          description: Default settings for all SWAIG functions. If `defaults` is not set, settings may be set in each function object. Default is not set.
        native_functions:
          type: array
          items:
            $ref: '#/components/schemas/SWAIGNativeFunction'
          description: Prebuilt functions the AI agent is able to call from this list of available native functions
        includes:
          type: array
          items:
            $ref: '#/components/schemas/SWAIGIncludes'
          description: |-
            An array of objects to include remote function signatures.
            The object fields are url to specify where the remote functions are defined and functions which is an array of the function names as strings.
        functions:
          type: array
          items:
            $ref: '#/components/schemas/SWAIGFunction'
          description: |-
            An array of JSON objects to define functions that can be executed during the interaction with the AI. Default is not set.
            The fields of this object are the six following.
      title: swaig
    SWAIGDefaults:
      type: object
      properties:
        web_hook_url:
          type: string
          description: Default URL to send status callbacks and reports to. Authentication can also be set in the url in the format of `username:password@url.`
          example: username:password@https://example.com
      title: defaults
    SWAIGFunction:
      type: object
      required:
        - function
        - description
      properties:
        function:
          type: string
          description: A unique name for the function. For example, 'get_weather'.
          example: get_weather
        description:
          type: string
          description: A description of the context and purpose of the function, to explain to the agent when to use it.
          example: Get the weather information
        parameters:
          allOf:
            - $ref: '#/components/schemas/FunctionParameters'
          description: A JSON object defining the input that should be passed to the function. The fields of this object are the following two parameters.
        active:
          type: boolean
          description: Whether the function is active. Default is `true`.
        meta_data:
          type: object
          additionalProperties: {}
          description: |-
            A powerful and flexible environmental variable which can accept arbitrary data that is set initially in the SWML script or from the SWML set_meta_data action.
            This data can be referenced locally to the function.
            All contained information can be accessed and expanded within the prompt - for example, by using a template string.
            Default is not set.
        meta_data_token:
          type: string
          description: Scoping token for meta_data. If not supplied, metadata will be scoped to function's `web_hook_url`. Default is set by SignalWire.
        data_map:
          allOf:
            - $ref: '#/components/schemas/DataMap'
          description: |-
            An object containing properties to process or validate the input,
            perform actions based on the input, or connect to external APIs or services in a serverless fashion.
        web_hook_url:
          type: string
          description: Function-specific URL to send status callbacks and reports to. Takes precedence over a default setting. Authentication can also be set in the url in the format of `username:password@url.`
          example: username:password:https://statuscallback.com
        wait_file:
          type: string
          format: uri
          description: A file to play while the function is running. `wait_file_loops` can specify the amount of times that files should continuously play. Default is not set.
          example: https://cdn.signalwire.com/default-music/welcome.mp3
        wait_file_loops:
          anyOf:
            - type: integer
            - type: string
          description: The number of times to loop playing the file. Default is not set.
          example: 5
      title: functions
    SWAIGIncludes:
      type: object
      required:
        - functions
        - url
      properties:
        functions:
          type: array
          items:
            type: string
          description: Remote functions to fetch and include in your AI application.
          example:
            - transfer call
            - notify kitchen
        url:
          type: string
          description: URL to fetch remote functions and include in your AI application. Authentication can also be set in the url in the format of `username:password@url`.
          example: username:password@https://example.com
        meta_data:
          type: object
          additionalProperties: {}
          description: ''
      title: includes
    SWAIGNativeFunction:
      type: string
      enum:
        - check_time
        - wait_seconds
      title: native_functions
    SWMLScriptAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddressApp'
          description: List of SWML Script Addresses
        links:
          $ref: '#/components/schemas/SWMLScriptAddressPaginationResponse'
    SWMLScriptAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/swml_scripts/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_size=50
        first:
          type: string
          format: uri
          description: Link of the first page
          example: https://example.signalwire.com/api/fabric/resources/swml_scripts/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=1&page_size=50
        next:
          type: string
          format: uri
          description: Link of the next page
          example: https://example.signalwire.com/api/fabric/resources/swml_scripts/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=2&page_size=50&page_token=PA6581c1fa-d985-4c8f-b53e-2fee11b579ad
        prev:
          type: string
          format: uri
          description: Link of the previous page
          example: https://example.signalwire.com/api/fabric/resources/swml_script/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50&page_token=PA6581c1fa-d985-4c8f-b53e-2fee11b579ad
    SWMLWebhook:
      type: object
      required:
        - id
        - name
        - used_for
        - primary_request_url
        - primary_request_method
        - fallback_request_url
        - fallback_request_method
        - status_callback_url
        - status_callback_method
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the SWML Webhook.
          example: a87db7ed-8ebe-42e4-829f-8ba5a4152f54
        name:
          type: string
          description: Name of the SWML Webhook.
          example: My SWML Webhook
        used_for:
          type: string
          enum:
            - calling
          description: Used for of the SWML Webhook.
          example: calling
        primary_request_url:
          type: string
          description: Primary request url of the SWML Webhook.
          example: https://primary.com
        primary_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Primary request method of the SWML Webhook.
          example: GET
        fallback_request_url:
          type: string
          description: Fallback request url of the SWML Webhook.
          example: https://fallback.com
        fallback_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Fallback request method of the SWML Webhook.
          example: GET
        status_callback_url:
          type: string
          description: Status callback url of the SWML Webhook.
          example: https://callback.com
        status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Status callback method of the SWML Webhook.
          example: POST
    SWMLWebhookAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddressApp'
        links:
          $ref: '#/components/schemas/SWMLWebhookAddressPaginationResponse'
    SWMLWebhookAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current paghe
          example: https://example.signalwire.com/api/fabric/resources/swml_webhooks/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/swml_webhooks/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/swml_webhooks/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/swml_webhooks/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    SWMLWebhookCreateRequest:
      type: object
      required:
        - primary_request_url
      properties:
        name:
          type: string
          description: Name of the SWML Webhook.
          example: My SWML Webhook
        used_for:
          type: string
          enum:
            - calling
          description: Used for of the SWML Webhook.
          example: calling
          default: calling
        primary_request_url:
          type: string
          description: Primary request url of the SWML Webhook.
          example: https://primary.com
        primary_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Primary request method of the SWML Webhook.
          example: GET
          default: POST
        fallback_request_url:
          type: string
          description: Fallback request url of the SWML Webhook.
          example: https://fallback.com
        fallback_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Fallback request method of the SWML Webhook.
          example: GET
          default: POST
        status_callback_url:
          type: string
          description: Status callback url of the SWML Webhook.
          example: https://callback.com
        status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Status callback method of the SWML Webhook.
          example: GET
          default: POST
    SWMLWebhookListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SWMLWebhookResponse'
        links:
          $ref: '#/components/schemas/SWMLWebhookPaginationResponse'
    SWMLWebhookPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/swml_webhooks?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/swml_webhooks?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/swml_webhooks?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/swml_webhooks?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    SWMLWebhookResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - swml_webhook
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the SWML Webhook.
          example: a87db7ed-8ebe-42e4-829f-8ba5a4152f54
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 99151cf8-9548-4860-ba70-a8de824f3312
        display_name:
          type: string
          description: Display name of the SWML Webhook Fabric Resource
          example: Booking Assistant
        type:
          type: string
          enum:
            - swml_webhook
          description: Type of the Fabric Resource
          example: swml_webhook
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        swml_webhook:
          allOf:
            - $ref: '#/components/schemas/SWMLWebhook'
          description: SWML Webhook data.
    SWMLWebhookUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the SWML Webhook.
          example: My SWML Webhook
        used_for:
          type: string
          enum:
            - calling
          description: Used for of the SWML Webhook.
          example: calling
          default: calling
        primary_request_url:
          type: string
          description: Primary request url of the SWML Webhook.
          example: https://primary.com
        primary_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Primary request method of the SWML Webhook.
          example: GET
          default: POST
        fallback_request_url:
          type: string
          description: Fallback request url of the SWML Webhook.
          example: https://fallback.com
        fallback_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Fallback request method of the SWML Webhook.
          example: GET
          default: POST
        status_callback_url:
          type: string
          description: Status callback url of the SWML Webhook.
          example: https://callback.com
        status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Status callback method of the SWML Webhook.
          example: GET
          default: POST
    SayAction:
      type: object
      required:
        - say
      properties:
        say:
          type: string
          description: A message to be spoken by the AI agent.
          title: say
          example: Welcome to Franklin's Pizza.
      title: SayAction object
    SchemaType:
      oneOf:
        - $ref: '#/components/schemas/StringProperty'
        - $ref: '#/components/schemas/IntegerProperty'
        - $ref: '#/components/schemas/NumberProperty'
        - $ref: '#/components/schemas/BooleanProperty'
        - $ref: '#/components/schemas/ArrayProperty'
        - $ref: '#/components/schemas/ObjectProperty'
        - $ref: '#/components/schemas/NullProperty'
        - $ref: '#/components/schemas/OneOfProperty'
        - $ref: '#/components/schemas/AllOfProperty'
        - $ref: '#/components/schemas/AnyOfProperty'
        - $ref: '#/components/schemas/ConstProperty'
      title: Function Parameters Type Union
    SetGlobalDataAction:
      type: object
      required:
        - set_global_data
      properties:
        set_global_data:
          type: object
          additionalProperties: {}
          description: A JSON object containing any global data, as a key-value map. This action sets the data in the `global_data` to be globally referenced.
          title: set_global_data
          example:
            small_size: 8 Inch
            large_size: 12 Inch
            closed: Monday
      title: SetGlobalDataAction object
    SetMetaDataAction:
      type: object
      required:
        - set_meta_data
      properties:
        set_meta_data:
          type: object
          additionalProperties: {}
          description: A JSON object containing any metadata, as a key-value map. This action sets the data in the `meta_data` to be referenced locally in the function.
          title: set_meta_data
          example:
            extra_cheese: Can't do
            extra_large_pizza: Only on Friday
      title: SetMetaDataAction object
    SipEndpointAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddressCall'
          description: List of SIP Endpoint Addresses
        links:
          allOf:
            - $ref: '#/components/schemas/SipEndpointAddressPaginationResponse'
          description: Pagination links
    SipEndpointAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
        first:
          type: string
          format: uri
          description: Link to the first page
        next:
          type: string
          format: uri
          description: Link to the next page
        prev:
          type: string
          format: uri
          description: Link to the previous page
    SipEndpointCreateRequest:
      type: object
      required:
        - username
        - password
        - caller_id
        - send_as
        - ciphers
        - codecs
        - encryption
        - call_handler
        - call_request_url
        - call_request_method
      properties:
        username:
          type: string
          description: Username for the SIP endpoint
          example: '123456'
        password:
          type: string
          description: Password for the SIP endpoint
          example: '123456'
        caller_id:
          type: string
          description: Caller ID
          example: '123456'
        send_as:
          type: string
          description: Send as
          example: random
        ciphers:
          type: array
          items:
            $ref: '#/components/schemas/Ciphers'
          description: Ciphers
          example:
            - AEAD_AES_256_GCM_8
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/Codecs'
          description: Codecs
          example:
            - PCMU
        encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
          description: Encryption
          example: required
        call_handler:
          type: string
          description: Call handler
          example: laml_webhooks
        call_request_url:
          type: string
          format: uri
          description: Call request URL
          example: https://example.com/call_handler
        call_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Call request method
          example: POST
        call_fallback_url:
          type: string
          format: uri
          description: Call fallback URL
          example: https://example.com/call_handler
        call_fallback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Call fallback method
          example: POST
        call_status_callback_url:
          type: string
          format: uri
          description: Call status callback URL
          example: https://example.com/call_handler
        call_status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Call status callback method
          example: POST
        call_laml_application_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call LAML application ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_ai_agent_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call AI agent ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_flow_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call flow ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_flow_version:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call flow version
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_dialogflow_agent_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call dialogflow agent ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_relay_script_url:
          type: string
          format: uri
          description: Call relay script URL
          example: https://example.com/relay_script
        call_relay_script_method:
          type: string
          enum:
            - GET
            - POST
          description: Call relay script method
          example: POST
        calling_handler_resource_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Calling handler resource ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
    SipEndpointCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter
            message: Ciphers are invalid
            attribute: ciphers
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes#invalid_parameter
    SipEndpointResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - sip_endpoint
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the SIP Endpoint.
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        display_name:
          type: string
          description: Display name of the SIP Endpoint Fabric Resource
          example: Conference Room Phone
        type:
          type: string
          enum:
            - sip_endpoint
          description: Type of the Fabric Resource
          example: sip_endpoint
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        sip_endpoint:
          allOf:
            - $ref: '#/components/schemas/SipEndpointWithID'
          description: SIP Endpoint data.
    SipEndpointUpdateRequest:
      type: object
      properties:
        username:
          type: string
          description: Username for the SIP endpoint
          example: '123456'
        password:
          type: string
          minLength: 8
          description: Password for the SIP endpoint
          example: '12345678'
        caller_id:
          type: string
          description: Caller ID
          example: '123456'
        send_as:
          type: string
          description: Send as
          example: random
        ciphers:
          type: array
          items:
            $ref: '#/components/schemas/Ciphers'
          description: Ciphers
          example:
            - AEAD_AES_256_GCM_8
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/Codecs'
          description: Codecs
          example:
            - PCMU
        encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
          description: Encryption
          example: required
        call_handler:
          type: string
          description: Call handler
          example: laml_webhooks
        call_request_url:
          type: string
          description: Call request URL
          example: https://example.com/call_handler
        call_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Call request method
          example: POST
        call_fallback_url:
          type: string
          description: Call fallback URL
          example: https://example.com/call_handler
        call_fallback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Call fallback method
          example: POST
        call_status_callback_url:
          type: string
          description: Call status callback URL
          example: https://example.com/call_handler
        call_status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Call status callback method
          example: POST
        call_laml_application_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call LAML application ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_ai_agent_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call AI agent ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_flow_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call flow ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_flow_version:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call flow version
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_dialogflow_agent_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call dialogflow agent ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_relay_script_url:
          type: string
          description: Call relay script URL
          example: https://example.com/relay_script
        call_relay_script_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Call relay script method
          example: POST
        calling_handler_resource_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Calling handler resource ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
    SipEndpointUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter
            message: Ciphers are invalid
            attribute: ciphers
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes#invalid_parameter
    SipEndpointWithID:
      type: object
      required:
        - sip_endpoint_id
        - username
        - password
        - caller_id
        - send_as
        - ciphers
        - codecs
        - encryption
        - call_handler
        - call_request_url
        - call_request_method
      properties:
        sip_endpoint_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          description: Unique ID of a SIP Endpoint.
        username:
          type: string
          description: Username for the SIP endpoint
          example: '123456'
        password:
          type: string
          description: Password for the SIP endpoint
          example: '123456'
        caller_id:
          type: string
          description: Caller ID
          example: '123456'
        send_as:
          type: string
          description: Send as
          example: random
        ciphers:
          type: array
          items:
            $ref: '#/components/schemas/Ciphers'
          description: Ciphers
          example:
            - AEAD_AES_256_GCM_8
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/Codecs'
          description: Codecs
          example:
            - PCMU
        encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
          description: Encryption
          example: required
        call_handler:
          type: string
          description: Call handler
          example: laml_webhooks
        call_request_url:
          type: string
          format: uri
          description: Call request URL
          example: https://example.com/call_handler
        call_request_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Call request method
          example: POST
        call_fallback_url:
          type: string
          format: uri
          description: Call fallback URL
          example: https://example.com/call_handler
        call_fallback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Call fallback method
          example: POST
        call_status_callback_url:
          type: string
          format: uri
          description: Call status callback URL
          example: https://example.com/call_handler
        call_status_callback_method:
          anyOf:
            - type: string
              enum:
                - GET
            - type: string
              enum:
                - POST
          description: Call status callback method
          example: POST
        call_laml_application_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call LAML application ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_ai_agent_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call AI agent ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_flow_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call flow ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_flow_version:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call flow version
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_dialogflow_agent_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Call dialogflow agent ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        call_relay_script_url:
          type: string
          format: uri
          description: Call relay script URL
          example: https://example.com/relay_script
        call_relay_script_method:
          type: string
          enum:
            - GET
            - POST
          description: Call relay script method
          example: POST
        calling_handler_resource_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Calling handler resource ID
          example: 993ed018-9e79-4e50-b97b-984bd5534095
    SipGateway:
      type: object
      required:
        - id
        - uri
        - name
        - ciphers
        - codecs
        - encryption
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the SIP Gateway.
          example: cce59cad-104d-4c28-ada4-98cfd102ae09
        uri:
          type: string
          description: The URI for the SIP Gateway.
          example: user3@domain.com
        name:
          type: string
          description: Display name of the SIP Gateway.
          example: My SIP Gateway
        ciphers:
          type: array
          items:
            $ref: '#/components/schemas/Ciphers'
          description: List of supported SIP ciphers.
          example:
            - AEAD_AES_256_GCM_8
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/Codecs'
          description: List of supported codecs.
          example:
            - OPUS
        encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
          description: Specifies the encryption requirement.
          example: required
    SipGatewayAddressListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddressCall'
        links:
          $ref: '#/components/schemas/SipGatewayAddressPaginationResponse'
    SipGatewayAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/sip_gateways/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/sip_gateways/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/sip_gateways/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/sip_gateways/a87db7ed-8ebe-42e4-829f-8ba5a4152f54/addresses?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    SipGatewayCreateRequest:
      type: object
      required:
        - name
        - uri
        - encryption
        - ciphers
        - codecs
      properties:
        name:
          type: string
          description: Display name for the SIP Gateway.
          example: My SIP Gateway
        uri:
          type: string
          description: External SIP URI.
          example: user2@domain.com
        encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
          description: Specifies the encryption requirement for the SIP connection.
          example: required
        ciphers:
          type: array
          items:
            $ref: '#/components/schemas/Ciphers'
          description: List of supported SIP ciphers.
          example:
            - AEAD_AES_256_GCM_8
            - AES_256_CM_HMAC_SHA1_80
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/Codecs'
          description: List of supported codecs for media transmission.
          example:
            - OPUS
    SipGatewayCreateRequestUpdate:
      type: object
      properties:
        name:
          type: string
          description: Display name for the SIP Gateway.
          example: My SIP Gateway
        uri:
          type: string
          description: External SIP URI.
          example: user2@domain.com
        encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
          description: Specifies the encryption requirement for the SIP connection.
          example: required
        ciphers:
          type: array
          items:
            $ref: '#/components/schemas/Ciphers'
          description: List of supported SIP ciphers.
          example:
            - AEAD_AES_256_GCM_8
            - AES_256_CM_HMAC_SHA1_80
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/Codecs'
          description: List of supported codecs for media transmission.
          example:
            - OPUS
    SipGatewayCreateResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - sip_gateway
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the resource.
          example: 0823a606-0aff-4c90-9eba-f88ba118fe05
        project_id:
          type: string
          format: uuid
          description: Project ID associated with the resource.
          example: bc949800-7b40-43cf-8438-a85facfcbdd1
        display_name:
          type: string
          description: Display name of the SIP Gateway.
          example: My SIP Gateway
        type:
          type: string
          enum:
            - sip_gateway
          description: Type of the resource.
          example: sip_gateway
        created_at:
          type: string
          format: date-time
          description: Timestamp when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the resource was last updated.
          example: '2024-05-06T12:20:00Z'
        sip_gateway:
          allOf:
            - $ref: '#/components/schemas/SipGateway'
          description: SIP Gateway configuration details.
    SipGatewayCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: Name can't be blank
            attribute: name
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    SipGatewayListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SipGatewayCreateResponse'
          description: List of SIP Gateways.
        links:
          allOf:
            - $ref: '#/components/schemas/SipGatewayPaginationResponse'
          description: Pagination links for the response.
    SipGatewayPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link to the current page of results
          example: https://example.signalwire.com/api/fabric/resources/sip_gateways?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page of results
          example: https://example.signalwire.com/api/fabric/resources/sip_gateways?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page of results
          example: https://example.signalwire.com/api/fabric/resources/sip_gateways?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page of results
          example: https://example.signalwire.com/api/fabric/resources/sip_gateways?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    SipGatewayResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - sip_gateway
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the resource.
          example: 0823a606-0aff-4c90-9eba-f88ba118fe05
        project_id:
          type: string
          format: uuid
          description: Project ID associated with the resource.
          example: bc949800-7b40-43cf-8438-a85facfcbdd1
        display_name:
          type: string
          description: Display name of the SIP Gateway.
          example: My SIP Gateway
        type:
          type: string
          enum:
            - sip_gateway
          description: Type of the resource.
          example: sip_gateway
        created_at:
          type: string
          format: date-time
          description: Timestamp when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the resource was last updated.
          example: '2024-05-06T12:20:00Z'
        sip_gateway:
          allOf:
            - $ref: '#/components/schemas/SipGateway'
          description: SIP Gateway configuration details.
    SipGatewayUpdateResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - sip_gateway
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the resource.
          example: 0823a606-0aff-4c90-9eba-f88ba118fe05
        project_id:
          type: string
          format: uuid
          description: Project ID associated with the resource.
          example: bc949800-7b40-43cf-8438-a85facfcbdd1
        display_name:
          type: string
          description: Display name of the SIP Gateway.
          example: My SIP Gateway
        type:
          type: string
          enum:
            - sip_gateway
          description: Type of the resource.
          example: sip_gateway
        created_at:
          type: string
          format: date-time
          description: Timestamp when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the resource was last updated.
          example: '2024-05-06T12:20:00Z'
        sip_gateway:
          allOf:
            - $ref: '#/components/schemas/SipGateway'
          description: SIP Gateway configuration details.
    StopAction:
      type: object
      required:
        - stop
      properties:
        stop:
          type: boolean
          description: Whether to stop the conversation.
          title: stop
      title: StopAction object
    StopPlaybackBGAction:
      type: object
      required:
        - stop_playback_bg
      properties:
        stop_playback_bg:
          type: boolean
          description: Whether to stop the background audio file.
          title: stop_playback_bg
      title: StopPlaybackBGAction object
    StringFormat:
      type: string
      enum:
        - date_time
        - time
        - date
        - duration
        - email
        - hostname
        - ipv4
        - ipv6
        - uri
        - uuid
    StringProperty:
      type: object
      required:
        - type
      properties:
        description:
          type: string
          description: A description of the property.
          example: Property description
        nullable:
          type: boolean
          description: Whether the property can be null.
        type:
          type: string
          enum:
            - string
          description: The type of parameter(s) the AI is passing to the function.
        enum:
          type: array
          items:
            type: string
          description: An array of strings that are the possible values
          example:
            - value1
            - value2
            - value3
        default:
          type: string
          description: The default string value
          example: default value
        pattern:
          type: string
          description: Regular expression pattern
          example: ^[a-zA-Z0-9_.-]*$
        format:
          allOf:
            - $ref: '#/components/schemas/StringFormat'
          description: String format (email, date-time, etc.)
      description: Base interface for all property types
      title: String Function Property
    Subscriber:
      type: object
      required:
        - id
        - email
        - first_name
        - last_name
        - display_name
        - job_title
        - timezone
        - country
        - region
        - company_name
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Subscriber.
          example: d369a402-7b43-4512-8735-9d5e1f387814
        email:
          type: string
          description: Email of the Subscriber.
          example: johndoe@example.com
        first_name:
          type: string
          description: First name of the Subscriber.
          example: John
        last_name:
          type: string
          description: Last name of the Subscriber.
          example: Doe
        display_name:
          type: string
          description: Display name of the Subscriber.
          example: John Doe
        job_title:
          type: string
          description: Job title of the Subscriber.
          example: Software Engineer
        timezone:
          type: string
          description: Timezone of the Subscriber.
          example: America/New_York
        country:
          type: string
          description: Country of the Subscriber.
          example: United States
        region:
          type: string
          description: Region of the Subscriber.
          example: New York
        company_name:
          type: string
          description: Company name of the Subscriber.
          example: SignalWire
    SubscriberAddressPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/subscribers/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/subscribers/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/subscribers/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link of the previous page
          example: https://example.signalwire.com/api/fabric/resources/subscribers/016e5773-c197-4446-bcc2-9c48f14e2d0a/addresses?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    SubscriberAddressesResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FabricAddressSubscriber'
        links:
          $ref: '#/components/schemas/SubscriberAddressPaginationResponse'
    SubscriberCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: Required parameter is missing
            attribute: password
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes#invalid_parameter
    SubscriberGuestTokenCreateRequest:
      type: object
      required:
        - allowed_addresses
      properties:
        allowed_addresses:
          type: array
          items:
            $ref: '#/components/schemas/uuid'
          maxItems: 10
          description: List of up to 10 UUIDs representing the allowed Fabric addresses.
        expire_at:
          type: integer
          description: A unixtime (the number of seconds since 1970-01-01 00:00:00) at which the token should no longer be valid. Defaults to 'two hours from now'
          example: 1725513600
    SubscriberGuestTokenCreateResponse:
      type: object
      required:
        - token
        - refresh_token
      properties:
        token:
          allOf:
            - $ref: '#/components/schemas/jwt'
          format: jwt
          description: Guest Token
          example: eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiY2giOiJwdWMuc2lnbmFsd2lyZS5jb20iLCJ0eXAiOiJTQVQifQ..8O4EJs349q97jAcd.H4GNrC6gsWdz91ArWF9ce00Cm62iHfsrFRRUUGW3e96j9C3IphiJXvHYHTmD4qMt8czZ8cniF8c53vVAIZF-yBQibejiMxwnqW6KkLct2EJoPUf9g-wQwM0-lGGj9iPx_7yprkQekFK-7svkLcKlo1voZyavxIsWQlXByppmR_ospVx2u8jbAab0ZjKJNEnr1yPF9oNkyMAnkpkS8k8PwKaxUHBc5SGumKlexUjL3ixZDR6UOcbApVXxrB-DmQBs3otOT7hzME7oKvR-6Xy0XJ1pt4Of7MEzNBUK5Z5NMjtFiA8IqwDlNJz3I5gn8hbjSZwSMJHRJGx2DKpNKiu6fcd-3i2VwCpnKHaNUybMJ5gV3cTNfTFJQBSearCLv-7gMx6Gqy9FF_Hm2bGlfnjTQ9BCsCqXBkQ9EQD6yboi2uUhPyLmpzPqlrBc9ik0c3qR5ey5Jym_VnZXaT_S5NxjzIjLzvs33GOKiooGMsBWOm6mzTPcf398xaSErT4dF2wXwtZANou7Dt4BoTKa.DcLVYpma-iItaGhaOStu9A
        refresh_token:
          allOf:
            - $ref: '#/components/schemas/jwt'
          format: jwt
          description: Refresh Token
          example: eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwidHlwIjoiUmVmcmVzaCIsImNoIjoidGVzdHB1Yy5zaWduYWx3aXJlLmNvbSJ9..sHcQL_V1tZH2JEAh.FNKYe_49CazNthkgSphf-ov8_I2wGLGWKD6t2q7kiG0guBxBjGzpgD8Y-LM-Nu7ePRUg7Z6vBkKAvh3rjtZpkeXoRXobJ1lov9AO72l8tB9K9RLo-TnBxLDbh0BCDGWVBgGq8DOh9kzHz4Tot-_B8pHXY_bqXX5kC4UUszXCO9nhSi1a4rp6QMD_8b0Mm8pHDK9EtW8I-tfM0HPmXuPMuOnlft3hmZo3tiKN2CarWscveQPCGetufHfQJJssdHjjYup8USAX0gJM8dpsV7FpF9fxfpy4ZU7N9MJXgSYJM5cPrxpLLx3Lj291egob14jDkn7kZQpv7jbCtsGyYxC7HAi1FgGr_sw3AeGaf2esGCkaeE11MxL05_kwdiNYBSOaHqaY62kOzu5pIdfTKQekOogCS1fgiyBgisBZeSIEBWWF.neE9KnL5AzS165dXFXUqhQ
    SubscriberInviteTokenCreateRequest:
      type: object
      required:
        - address_id
      properties:
        address_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of a Subscriber Address
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        expires_at:
          type: integer
          description: A unixtime (the number of seconds since 1970-01-01 00:00:00) at which the token should no longer be valid. Defaults to 'two hours from now'
          example: 1725513600
    SubscriberInviteTokenCreateResponse:
      type: object
      required:
        - token
      properties:
        token:
          allOf:
            - $ref: '#/components/schemas/jwt'
          format: jwt
          description: Invite Token
          example: eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiY2giOiJwdWMuc2lnbmFsd2lyZS5jb20iLCJ0eXAiOiJTQVQifQ..8O4EJs349q97jAcd.H4GNrC6gsWdz91ArWF9ce00Cm62iHfsrFRRUUGW3e96j9C3IphiJXvHYHTmD4qMt8czZ8cniF8c53vVAIZF-yBQibejiMxwnqW6KkLct2EJoPUf9g-wQwM0-lGGj9iPx_7yprkQekFK-7svkLcKlo1voZyavxIsWQlXByppmR_ospVx2u8jbAab0ZjKJNEnr1yPF9oNkyMAnkpkS8k8PwKaxUHBc5SGumKlexUjL3ixZDR6UOcbApVXxrB-DmQBs3otOT7hzME7oKvR-6Xy0XJ1pt4Of7MEzNBUK5Z5NMjtFiA8IqwDlNJz3I5gn8hbjSZwSMJHRJGx2DKpNKiu6fcd-3i2VwCpnKHaNUybMJ5gV3cTNfTFJQBSearCLv-7gMx6Gqy9FF_Hm2bGlfnjTQ9BCsCqXBkQ9EQD6yboi2uUhPyLmpzPqlrBc9ik0c3qR5ey5Jym_VnZXaT_S5NxjzIjLzvs33GOKiooGMsBWOm6mzTPcf398xaSErT4dF2wXwtZANou7Dt4BoTKa.DcLVYpma-iItaGhaOStu9A
    SubscriberListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubscriberResponse'
        links:
          $ref: '#/components/schemas/SubscriberPaginationResponse'
    SubscriberPaginationResponse:
      type: object
      required:
        - self
        - first
        - next
      properties:
        self:
          type: string
          format: uri
          description: Link of the current page
          example: https://example.signalwire.com/api/fabric/resources/subscribers?page_number=0&page_size=50
        first:
          type: string
          format: uri
          description: Link to the first page
          example: https://example.signalwire.com/api/fabric/resources/subscribers?page_number=0&page_size=50
        next:
          type: string
          format: uri
          description: Link to the next page
          example: https://example.signalwire.com/api/fabric/resources/subscribers?page_number=1&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
        prev:
          type: string
          format: uri
          description: Link to the previous page
          example: https://example.signalwire.com/api/fabric/resources/subscribers?page_number=0&page_size=50&page_token=PAbff61159-faab-48b3-959a-3021a8f5beca
    SubscriberRefreshTokenRequest:
      type: object
      required:
        - refresh_token
      properties:
        refresh_token:
          allOf:
            - $ref: '#/components/schemas/jwt'
          format: jwt
          description: The refresh token previously issued alongside a subscriber access token. This token is used to request a new access token.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    SubscriberRefreshTokenResponse:
      type: object
      required:
        - token
        - refresh_token
      properties:
        token:
          allOf:
            - $ref: '#/components/schemas/jwt'
          format: jwt
          description: A newly generated subscriber access token, valid for 2 hours.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        refresh_token:
          allOf:
            - $ref: '#/components/schemas/jwt'
          format: jwt
          description: A new refresh token, valid for 2 hours and 5 minutes.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    SubscriberRequest:
      type: object
      required:
        - email
      properties:
        password:
          type: string
          minLength: 8
          maxLength: 72
          description: Password of the Subscriber. Defaults to a secure random password if not provided.
          example: password123
        email:
          type: string
          description: Email of the Subscriber.
          example: johndoe@example.com
        first_name:
          type: string
          description: First name of the Subscriber.
          example: John
        last_name:
          type: string
          description: Last name of the Subscriber.
          example: Doe
        display_name:
          type: string
          description: Display name of the Subscriber.
          example: John Doe
        job_title:
          type: string
          description: Job title of the Subscriber.
          example: Software Engineer
        timezone:
          type: string
          description: Timezone of the Subscriber.
          example: America/New_York
        country:
          type: string
          description: Country of the Subscriber.
          example: United States
        region:
          type: string
          description: Region of the Subscriber.
          example: New York
        company_name:
          type: string
          description: Company name of the Subscriber.
          example: SignalWire
    SubscriberResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - subscriber
      properties:
        id:
          type: string
          description: Unique ID of the request.
          example: d369a402-7b43-4512-8735-9d5e1f387814
        project_id:
          type: string
          description: Unique ID of the project.
          example: d369a402-7b43-4512-8735-9d5e1f387814
        display_name:
          type: string
          description: Display name of the Subscriber.
          example: John Doe
        type:
          type: string
          enum:
            - subscriber
          description: Type of the resource.
          example: subscriber
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        subscriber:
          allOf:
            - $ref: '#/components/schemas/Subscriber'
          description: Subscriber data.
    SubscriberSipEndpointListResponse:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SIPEndpoint'
        links:
          $ref: '#/components/schemas/PaginationResponse'
    SubscriberSipEndpointRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Username of the Sip Endpoint.
          example: justice-league
        password:
          type: string
          description: Password of the Sip Endpoint.
          example: hack-me-if-you-can
        caller_id:
          type: string
          description: Caller ID of the Sip Endpoint.
          example: call-id-123
        send_as:
          type: string
          description: The Number to send as.
          example: '+14632322867'
        ciphers:
          type: array
          items:
            $ref: '#/components/schemas/CipherType'
          description: Ciphers of the Sip Endpoint.
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/CodecType'
          description: Codecs of the Sip Endpoint.
        encryption:
          allOf:
            - $ref: '#/components/schemas/EncryptionType'
          description: Encryption requirement of the Sip Endpoint.
          example: optional
          default: default
    SubscriberSipEndpointRequestUpdate:
      type: object
      properties:
        username:
          type: string
          description: Username of the Sip Endpoint.
          example: justice-league
        password:
          type: string
          description: Password of the Sip Endpoint.
          example: hack-me-if-you-can
        caller_id:
          type: string
          description: Caller ID of the Sip Endpoint.
          example: call-id-123
        send_as:
          type: string
          description: The Number to send as.
          example: '+14632322867'
        ciphers:
          type: array
          items:
            $ref: '#/components/schemas/CipherType'
          description: Ciphers of the Sip Endpoint.
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/CodecType'
          description: Codecs of the Sip Endpoint.
        encryption:
          allOf:
            - $ref: '#/components/schemas/EncryptionType'
          description: Encryption requirement of the Sip Endpoint.
          example: optional
          default: default
    SubscriberTokenRequest:
      type: object
      required:
        - reference
      properties:
        reference:
          type: string
          description: A string that uniquely identifies the subscriber. Often it's an email, but can be any other string.
          example: john.doe@example.com
        expire_at:
          type: integer
          description: A unixtime (the number of seconds since 1970-01-01 00:00:00) at which the token should no longer be valid. Defaults to 'two hours from now'
          example: 1693823284
        application_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: The ID of the application that the token is associated with.
          example: 123e4567-e89b-12d3-a456-426614174000
        password:
          type: string
          description: Set or update the subscriber's password. Omit this field or pass an empty string if you don't want to update the password.
          example: password123
        first_name:
          type: string
          description: Set or update the first name of the subscriber.
          example: John
        last_name:
          type: string
          description: Set or update the last name of the subscriber.
          example: Doe
        display_name:
          type: string
          description: Set or update the display name of the subscriber.
          example: John Doe
        job_title:
          type: string
          description: Set or update the job title of the subscriber.
          example: Software Engineer
        time_zone:
          type: string
          description: Set or update the time zone of the subscriber.
          example: America/New_York
        country:
          type: string
          description: Set or update the country of the subscriber.
          example: US
        region:
          type: string
          description: Set or update the region of the subscriber.
          example: CA
        company_name:
          type: string
          description: Set or update the company name of the subscriber.
          example: SignalWire
    SubscriberTokenResponse:
      type: object
      required:
        - subscriber_id
        - token
        - refresh_token
      properties:
        subscriber_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: The ID of the subscriber that the token is associated with.
          example: 32d94154-9297-418c-9a85-4a69e0c67c30
        token:
          allOf:
            - $ref: '#/components/schemas/jwt'
          format: jwt
          description: The token that is associated with the subscriber.
          example: eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwidHlwIjoiU0FUIn0..HahMYxqt4uI14qSH.daMTBR53lfEfEFiVAhr0pPSRqZhEod_YzavoG9-4ieiRQvl8GtP3FFNx0VLfkJqNcjUNbAaiKrEMnfOtCnQjiq1Kn0Iq90MYdM00QJ7cTaQ88vfbqdE92p-d4oDeg6z_vAsgrFgEobmrlDQndKxCWOD921iYxyLP0vqNaokN3kIM06iAWu_UpnTYEeR1l068xhK2xb6P9wbI2FDKFQoMgCdbjvABF7RRyaEzUoaQ5_Wj53YO6PFYuYcPbqMhdtvSSQiK3Nw6bFer2OfFs6s2RTukRGsocgC5Q7pwQwzYky-YgrPCb-pVAJajVSXUJrayvOi8-TeyCpICW4zTeJa5icZ380cWtafUH4rEB_FOJciJf0BCy48ajbz0NE121uBl2mqA1HE0_mQA53UqVjbrbE9hVOfnN4KpwOfULhIjx54tIekJQgG-aK2AYsLPCDNhuSpHvdwJcTM0Gzy3mS2veyaDV8q2qN5F_F9OThTQzcfy.AXzVNrJc_pGVPsticsVM0w
        refresh_token:
          allOf:
            - $ref: '#/components/schemas/jwt'
          format: jwt
          description: Refresh token.
          example: eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwidHlwIjoiUmVmcmVzaCIsImNoIjoidGVzdHB1Yy5zaWduYWx3aXJlLmNvbSJ9..sHcQL_V1tZH2JEAh.FNKYe_49CazNthkgSphf-ov8_I2wGLGWKD6t2q7kiG0guBxBjGzpgD8Y-LM-Nu7ePRUg7Z6vBkKAvh3rjtZpkeXoRXobJ1lov9AO72l8tB9K9RLo-TnBxLDbh0BCDGWVBgGq8DOh9kzHz4Tot-_B8pHXY_bqXX5kC4UUszXCO9nhSi1a4rp6QMD_8b0Mm8pHDK9EtW8I-tfM0HPmXuPMuOnlft3hmZo3tiKN2CarWscveQPCGetufHfQJJssdHjjYup8USAX0gJM8dpsV7FpF9fxfpy4ZU7N9MJXgSYJM5cPrxpLLx3Lj291egob14jDkn7kZQpv7jbCtsGyYxC7HAi1FgGr_sw3AeGaf2esGCkaeE11MxL05_kwdiNYBSOaHqaY62kOzu5pIdfTKQekOogCS1fgiyBgisBZeSIEBWWF.neE9KnL5AzS165dXFXUqhQ
    SubscriberTokenStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: Required parameter is missing
            attribute: reference
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes#invalid_parameter
    SubscriberUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: Required parameter is missing
            attribute: password
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes#invalid_parameter
    SwmlScript:
      type: object
      required:
        - id
        - contents
        - request_url
        - display_name
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of a SWML Script.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        contents:
          type: string
          description: The SWML script contents
          example: '{ "version": "1.0.0", "sections": { "main": [{ "play": { "url": "https://cdn.signalwire.com/swml/audio.mp3" }}]}};'
        request_url:
          type: string
          format: uri
          description: The url where the SWML script is hosted at.
          example: https://example.com/swml_script
        display_name:
          type: string
          description: The displayed name of the SWML scipt
          example: Booking Assistant
    SwmlScriptCreateRequest:
      type: object
      required:
        - name
        - contents
      properties:
        name:
          type: string
          description: Display name of the SWML Script
          example: Welcome Script
        contents:
          type: string
          description: The contents of the SWML script.
          example: '{ "version": "1.0.0", "sections": { "main": [{ "play": { "url": "https://cdn.signalwire.com/swml/audio.mp3" }}]}};'
    SwmlScriptCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: contents is required
            attribute: contents
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    SwmlScriptResponse:
      type: object
      required:
        - id
        - project_id
        - display_name
        - type
        - created_at
        - updated_at
        - swml_script
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the SWML Script.
          example: 993ed018-9e79-4e50-b97b-984bd5534095
        project_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          format: uuid
          description: Unique ID of the Project.
          example: 1313fe58-5e14-4c11-bbe7-6fdfa11fe780
        display_name:
          type: string
          description: Display name of the SWML Script Fabric Resource
          example: Welcome Script
        type:
          type: string
          enum:
            - swml_script
          description: Type of the Fabric Resource
          example: swml_script
        created_at:
          type: string
          format: date-time
          description: Date and time when the resource was created.
          example: '2024-05-06T12:20:00Z'
        updated_at:
          type: string
          format: date-time
          description: Date and time when the resource was updated.
          example: '2024-05-06T12:20:00Z'
        swml_script:
          allOf:
            - $ref: '#/components/schemas/SwmlScript'
          description: SWML Script data.
    SwmlScriptUpdateRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Display name of the SWML Script
          example: Welcome Script
        contents:
          type: string
          description: The contents of the SWML script.
          example: '{ "version": "1.0.0", "sections": { "main": [{ "play": { "url": "https://cdn.signalwire.com/swml/audio.mp3" }}]}};'
    SwmlScriptUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: invalid_parameter_value
            message: contents must be valid SWML JSON
            attribute: contents
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#invalid_parameter_value
    SwmlWebhookCreateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: http_url_required
            message: This value must be an HTTP or HTTPS URL.
            attribute: status_callback_url
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#http_url_required
    SwmlWebhookUpdateStatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: http_url_required
            message: This value must be an HTTP or HTTPS URL.
            attribute: status_callback_url
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#http_url_required
    ToggleFunctionsAction:
      type: object
      required:
        - toggle_functions
      properties:
        toggle_functions:
          type: array
          items:
            type: object
            properties:
              active:
                type: boolean
                description: Whether to activate or deactivate the functions. Default is `true`
              function:
                anyOf:
                  - type: string
                  - type: array
                    items:
                      type: string
                description: The function names to toggle.
                example: Discount
            required:
              - active
              - function
          description: Whether to toggle the functions on or off.
          title: toggle_functions
      title: ToggleFunctionsAction object
    Types.StatusCodes.StatusCode401:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          enum:
            - Unauthorized
    Types.StatusCodes.StatusCode403:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          enum:
            - Forbidden
    Types.StatusCodes.StatusCode404:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          enum:
            - Not Found
    Types.StatusCodes.StatusCode422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
    Types.StatusCodes.StatusCode422Error:
      type: object
      required:
        - type
        - code
        - message
        - attribute
        - url
      properties:
        type:
          type: string
          description: Error type.
        code:
          type: string
          description: Error code.
        message:
          type: string
          description: Error details.
        attribute:
          type: string
          description: Request parameter associated with this error.
        url:
          type: string
          description: Link to developer resource for this error.
    Types.StatusCodes.StatusCode500:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          enum:
            - Internal Server Error
    UnsetGlobalDataAction:
      type: object
      required:
        - unset_global_data
      properties:
        unset_global_data:
          anyOf:
            - type: string
            - type: object
          description: The key of the global data to unset from the `global_data`. You can also reset the `global_data` by passing in a new object.
          title: unset_global_data
          example: closed
      title: UnsetGlobalDataAction object
    UnsetMetaDataAction:
      type: object
      required:
        - unset_meta_data
      properties:
        unset_meta_data:
          anyOf:
            - type: string
            - type: object
          description: The key of the local data to unset from the `meta_data`. You can also reset the `meta_data` by passing in a new object.
          title: unset_meta_data
          example: extra_cheese
      title: UnsetMetaDataAction object
    UsedForType:
      type: string
      enum:
        - calling
        - messaging
      description: Sets the handler to handle incoming `calls` or `messages`.
    UserInputAction:
      type: object
      required:
        - user_input
      properties:
        user_input:
          type: string
          description: Used to inject text into the users queue as if they input the data themselves.
          title: user_input
          example: I want a tasty Pizza.
      title: UserInputAction object
    VideoChannel:
      type: object
      required:
        - video
      properties:
        video:
          type: string
          description: Video Channel of Fabric Address
          example: /external/resource_name?channel=video
    Webhook:
      type: object
      required:
        - webhooks
      properties:
        webhooks:
          type: array
          items:
            type: object
            properties:
              expressions:
                type: array
                items:
                  $ref: '#/components/schemas/Expression'
                description: A list of expressions to be evaluated upon matching.
              error_keys:
                anyOf:
                  - type: string
                  - type: array
                    items:
                      type: string
                description: A string or array of strings that represent the keys to be used for error handling. This will match the key(s) in the response from the API call.
                example: failed
              url:
                type: string
                description: The endpoint for the external service or API.
                example: https://example.com
              foreach:
                type: object
                properties:
                  input_key:
                    type: string
                    description: The key to be used to access the current element in the array.
                    example: success
                  output_key:
                    type: string
                    description: The key that can be referenced in the output of the `foreach` iteration. The values that are stored from `append` will be stored in this key.
                    example: deliverer
                  max:
                    type: integer
                    description: The max amount of elements that are iterated over in the array. This will start at the beginning of the array.
                    example: 5
                  append:
                    type: string
                    description: |-
                      The values to append to the output_key.
                      Properties from the object can be referenced and added to the output_key by using the following syntax:
                      ${this.property_name}.
                      The `this` keyword is used to reference the current object in the array.
                required:
                  - input_key
                  - output_key
                  - append
                description: Iterates over an array of objects and processes a output based on each element in the array. Works similarly to JavaScript's forEach method.
              headers:
                type: object
                additionalProperties: {}
                description: Any necessary headers for the API call.
              method:
                type: string
                enum:
                  - GET
                  - POST
                  - PUT
                  - DELETE
                description: The HTTP method (GET, POST, etc.) for the API call.
              input_args_as_params:
                type: boolean
                description: A boolean to determine if the input arguments should be passed as parameters.
              params:
                type: object
                additionalProperties: {}
                description: An object of any necessary parameters for the API call. The key is the parameter name and the value is the parameter value.
              require_args:
                anyOf:
                  - type: string
                  - type: array
                    items:
                      type: string
                description: A string or array of strings that represent the `arguments` that are required to make the webhook request.
              output:
                type: object
                properties:
                  response:
                    type: string
                    description: A static response text or message returned to the AI agents context.
                    example: Order placed
                  action:
                    type: array
                    items:
                      $ref: '#/components/schemas/Action'
                    description: A list of actions to be performed upon matching.
                required:
                  - response
                description: An object that defines the `response` or `action` to be taken when the webhook is successfully triggered.
                title: output
            required:
              - url
              - output
          description: An array of objects that define external API calls.
          title: webhooks
      title: Webhook object
    jwt:
      type: string
      format: jwt
    uuid:
      type: string
      format: uuid
      description: Universal Unique Identifier.
  securitySchemes:
    BasicAuth:
      type: http
      scheme: Basic
    BearerAuth:
      type: http
      scheme: Bearer
servers:
  - url: https://{space_name}.signalwire.com/api/fabric/
    description: Endpoint
    variables:
      space_name:
        default: '{Your_Space_Name}'
