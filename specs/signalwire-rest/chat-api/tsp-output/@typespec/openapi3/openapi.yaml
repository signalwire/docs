openapi: 3.0.0
info:
  title: Chat API
  description: An API to programmatically create your own Chat Applications.
  version: 0.0.0
tags:
  - name: Tokens
paths:
  /tokens:
    post:
      operationId: ChatTokens_create
      summary: Generate a new Chat Token
      description: |-
        Generate a Chat Token to be used to authenticate clients to the Chat Service.


        #### Permissions

        The API token must include the following scopes: `Chat`.
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatToken'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode401'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Types.StatusCodes.StatusCode404'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatToken422Error'
      tags:
        - Tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewChatToken'
security:
  - BasicAuth: []
components:
  schemas:
    ChatChannel:
      type: object
      additionalProperties:
        type: object
        properties:
          read:
            type: boolean
            description: Gives the token read access to the channel.
            example: true
          write:
            type: boolean
            description: Gives the token write access to the channel.
            example: false
        required:
          - read
          - write
      description: |-
        User-defined channel names. Each channel is a object with `read` and `write` properties.
        Max of 500 channels inside main `channels`. Either `read`, `write`, or both are required inside each channel and default to `false`.
        Each channel name can be up to 250 characters. Must be valid JSON.
      example:
        channel1:
          read: true
          write: true
        channel2:
          read: true
          write: false
    ChatState:
      type: object
      additionalProperties: {}
      description: An arbitrary JSON object available to store stateful application information in. Must be valid JSON and have a maximum size of 2,000 characters.
      example:
        key: value
        key2: value2
    ChatToken:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: The generated Chat Token.
          example: eyJ0eXAiOiJWUlQiLCJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE2MjIxMjAxMjMsI...wMCwicnNlIjo5MDB9-BqG-DqC5LhpsdMWEFjhVkTBpQ
    ChatToken422Error:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Types.StatusCodes.StatusCode422Error'
      example:
        errors:
          - type: validation_error
            code: missing_required_parameter
            message: A required parameter is missing from the request. Please refer to the technical reference for a complete list of parameters.
            attribute: ttl
            url: https://developer.signalwire.com/rest/signalwire-rest/overview/error-codes/#missing_required_parameter
    NewChatToken:
      type: object
      required:
        - ttl
        - channels
      properties:
        ttl:
          type: integer
          minimum: 1
          maximum: 43200
          description: The maximum time, in minutes, that the access token will be valid for. Between 1 and 43,200 (30 days).
          example: 60
        channels:
          $ref: '#/components/schemas/ChatChannel'
        member_id:
          type: string
          description: The unique identifier of the member. Up to 250 characters. If not specified, a random UUID will be generated.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        state:
          allOf:
            - $ref: '#/components/schemas/ChatState'
          description: An arbitrary JSON object available to store stateful application information in. Must be valid JSON and have a maximum size of 2,000 characters.
    Types.StatusCodes.StatusCode401:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          enum:
            - Unauthorized
    Types.StatusCodes.StatusCode404:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          enum:
            - Not Found
    Types.StatusCodes.StatusCode422Error:
      type: object
      required:
        - type
        - code
        - message
        - attribute
        - url
      properties:
        type:
          type: string
          description: Error type.
        code:
          type: string
          description: Error code.
        message:
          type: string
          description: Error details.
        attribute:
          type: string
          description: Request parameter associated with this error.
        url:
          type: string
          description: Link to developer resource for this error.
  securitySchemes:
    BasicAuth:
      type: http
      scheme: Basic
servers:
  - url: https://{space_name}.signalwire.com/api/chat
    description: Endpoint
    variables:
      space_name:
        default: '{Your_Space_Name}'
